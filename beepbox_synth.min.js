var beepbox=function(e){"use strict";
/*!
    Copyright (c) 2012-2022 John Nesky and contributing authors

    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal in
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
    */var t,n=e&&e.t||function(e,t,n,i){return new(n||(n=Promise))((function(a,s){function o(e){try{l(i.next(e))}catch(e){s(e)}}function r(e){try{l(i.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,r)}l((i=i.apply(e,t||[])).next())}))};const i=["chip","FM","noise","spectrum","drumset","harmonics","pulse width","picked string","supersaw","chip (custom)","mod","FM (6-op)"];const a=new class{constructor(){this.statusTable={},this.urlTable={},this.totalSamples=0,this.samplesLoaded=0}};class s extends Event{constructor(e,t){super("sampleloaded"),this.totalSamples=e,this.samplesLoaded=t}}class o extends EventTarget{constructor(){super()}}const r=new o;function l(e,t,i,o,l){return n(this,void 0,void 0,(function*(){const n=new AudioContext({sampleRate:l});let p=!1;const u=c.chipWaves[t],f=c.rawChipWaves[t],m=c.rawRawChipWaves[t];fetch(e).then((e=>e.ok?e.arrayBuffer():(a.statusTable[t]=2,Promise.reject(new Error("Couldn't load sample"))))).then((e=>n.decodeAudioData(e))).then((e=>{const l=h(Array.from(e.getChannelData(0))),c=d(l);u.samples=c,f.samples=l,m.samples=l,o.isUsingAdvancedLoopControls&&(i.chipWaveLoopStart=null!=o.chipWaveLoopStart?o.chipWaveLoopStart:0,i.chipWaveLoopEnd=null!=o.chipWaveLoopEnd?o.chipWaveLoopEnd:l.length-1,i.chipWaveLoopMode=null!=o.chipWaveLoopMode?o.chipWaveLoopMode:0,i.chipWavePlayBackwards=o.chipWavePlayBackwards,i.chipWaveStartOffset=null!=o.chipWaveStartOffset?o.chipWaveStartOffset:0),a.samplesLoaded++,a.statusTable[t]=1,r.dispatchEvent(new s(a.totalSamples,a.samplesLoaded)),p||(p=!0,n.close())})).catch((i=>{a.statusTable[t]=2,alert("Failed to load "+e+":\n"+i),p||(p=!0,n.close())}))}))}function p(e){return new Promise(((t,n)=>{if(!c.willReloadForCustomSamples){const n=document.createElement("script");n.src=e,document.head.appendChild(n),n.addEventListener("load",(e=>{t()}))}}))}function u(e){const t=c.chipWaves[0].samples,n=c.rawRawChipWaves[0].samples;if(0==e){const e=[{name:"paandorasbox kick",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox snare",expression:3,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox piano1",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:2},{name:"paandorasbox WOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox overdrive",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-2},{name:"paandorasbox trumpet",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:1.2},{name:"paandorasbox saxophone",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-5},{name:"paandorasbox orchestrahit",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox detatched violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox synth",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-.8},{name:"paandorasbox sonic3snare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox come on",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox choir",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"paandorasbox overdriveguitar",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6.2},{name:"paandorasbox flute",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6},{name:"paandorasbox legato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-28},{name:"paandorasbox tremolo violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-33},{name:"paandorasbox amen break",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-55},{name:"paandorasbox pizzicato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-11},{name:"paandorasbox tim allen grunt",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-20},{name:"paandorasbox tuba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:44},{name:"paandorasbox loopingcymbal",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17},{name:"paandorasbox standardkick",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-7},{name:"paandorasbox standardsnare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox closedhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:5},{name:"paandorasbox foothihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:4},{name:"paandorasbox openhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-31},{name:"paandorasbox crashcymbal",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-43},{name:"paandorasbox pianoC4",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.5},{name:"paandorasbox liver pad",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-22.5},{name:"paandorasbox marimba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-15.5},{name:"paandorasbox susdotwav",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-24.5},{name:"paandorasbox wackyboxtts",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17.5},{name:"paandorasbox peppersteak_1",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.2},{name:"paandorasbox peppersteak_2",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-47},{name:"paandorasbox vinyl_noise",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-50},{name:"paandorasbeta slap bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-56},{name:"paandorasbeta HD EB overdrive guitar",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60},{name:"paandorasbeta sunsoft bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-18.5},{name:"paandorasbeta masculine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta feminine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60.5},{name:"paandorasbeta tololoche",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-29.5},{name:"paandorasbeta harp",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-54},{name:"paandorasbeta pan flute",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-58},{name:"paandorasbeta krumhorn",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-46},{name:"paandorasbeta timpani",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta crowd hey",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-29},{name:"paandorasbeta wario land 4 brass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-68},{name:"paandorasbeta wario land 4 rock organ",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-63},{name:"paandorasbeta wario land 4 DAOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-35},{name:"paandorasbeta wario land 4 hour chime",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-47.5},{name:"paandorasbeta wario land 4 tick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-12.5},{name:"paandorasbeta kirby kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby bongo",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby click",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta sonor kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare (left hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor snare (right hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor high tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor low tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor hihat (closed)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-17},{name:"paandorasbeta sonor hihat (half opened)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-21},{name:"paandorasbeta sonor hihat (open)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-54.5},{name:"paandorasbeta sonor hihat (open tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-43.5},{name:"paandorasbeta sonor hihat (pedal)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28},{name:"paandorasbeta sonor crash",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-51},{name:"paandorasbeta sonor crash (tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-50.5},{name:"paandorasbeta sonor ride",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46}];a.totalSamples+=e.length;const i=c.rawRawChipWaves.length;for(const i of e){const e=c.rawRawChipWaves.length,s={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:n},o={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:n},r={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:t};c.rawRawChipWaves[e]=o,c.rawRawChipWaves.dictionary[i.name]=o,c.rawChipWaves[e]=s,c.rawChipWaves.dictionary[i.name]=s,c.chipWaves[e]=r,c.chipWaves.dictionary[i.name]=s,a.statusTable[e]=0,a.urlTable[e]="legacySamples"}p("samples.js").then((()=>p("samples2.js"))).then((()=>p("samples3.js"))).then((()=>p("drumsamples.js"))).then((()=>p("wario_samples.js"))).then((()=>p("kirby_samples.js"))).then((()=>{const e=[h(kicksample),h(snaresample),h(pianosample),h(WOWsample),h(overdrivesample),h(trumpetsample),h(saxophonesample),h(orchhitsample),h(detatchedviolinsample),h(synthsample),h(sonic3snaresample),h(comeonsample),h(choirsample),h(overdrivensample),h(flutesample),h(legatoviolinsample),h(tremoloviolinsample),h(amenbreaksample),h(pizzicatoviolinsample),h(timallengruntsample),h(tubasample),h(loopingcymbalsample),h(kickdrumsample),h(snaredrumsample),h(closedhihatsample),h(foothihatsample),h(openhihatsample),h(crashsample),h(pianoC4sample),h(liverpadsample),h(marimbasample),h(susdotwavsample),h(wackyboxttssample),h(peppersteak1),h(peppersteak2),h(vinyl),h(slapbass),h(hdeboverdrive),h(sunsoftbass),h(masculinechoir),h(femininechoir),h(southtololoche),h(harp),h(panflute),h(krumhorn),h(timpani),h(crowdhey),h(warioland4brass),h(warioland4organ),h(warioland4daow),h(warioland4hourchime),h(warioland4tick),h(kirbykick),h(kirbysnare),h(kirbybongo),h(kirbyclick),h(funkkick),h(funksnare),h(funksnareleft),h(funksnareright),h(funktomhigh),h(funktomlow),h(funkhihatclosed),h(funkhihathalfopen),h(funkhihatopen),h(funkhihatopentip),h(funkhihatfoot),h(funkcrash),h(funkcrashtip),h(funkride)];let t=0;for(const n of e){const e=i+t;c.rawChipWaves[e].samples=n,c.rawRawChipWaves[e].samples=n,c.chipWaves[e].samples=d(n),a.statusTable[e]=1,a.samplesLoaded++,r.dispatchEvent(new s(a.totalSamples,a.samplesLoaded)),t++}}))}else if(1==e){const e=[{name:"chronoperc1final",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"synthkickfm",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"mcwoodclick1",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"acoustic snare",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0}];a.totalSamples+=e.length;const i=c.rawRawChipWaves.length;for(const i of e){const e=c.rawRawChipWaves.length,s={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:n},o={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:n},r={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:t};c.rawRawChipWaves[e]=o,c.rawRawChipWaves.dictionary[i.name]=o,c.rawChipWaves[e]=s,c.rawChipWaves.dictionary[i.name]=s,c.chipWaves[e]=r,c.chipWaves.dictionary[i.name]=s,a.statusTable[e]=0,a.urlTable[e]="nintariboxSamples"}p("nintaribox_samples.js").then((()=>{const e=[h(chronoperc1finalsample),h(synthkickfmsample),h(woodclicksample),h(acousticsnaresample)];let t=0;for(const n of e){const e=i+t;c.rawChipWaves[e].samples=n,c.rawRawChipWaves[e].samples=n,c.chipWaves[e].samples=d(n),a.statusTable[e]=1,a.samplesLoaded++,r.dispatchEvent(new s(a.totalSamples,a.samplesLoaded)),t++}}))}else if(2==e){const e=[{name:"cat",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"gameboy",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:7},{name:"mario",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"drum",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:4},{name:"yoshi",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"star",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"fire flower",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"dog",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"oink",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:3},{name:"swan",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:1},{name:"face",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-12}];a.totalSamples+=e.length;const i=c.rawRawChipWaves.length;for(const i of e){const e=c.rawRawChipWaves.length,s={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:n},o={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:n},r={index:e,name:i.name,expression:i.expression,isSampled:i.isSampled,isPercussion:i.isPercussion,extraSampleDetune:i.extraSampleDetune,samples:t};c.rawRawChipWaves[e]=o,c.rawRawChipWaves.dictionary[i.name]=o,c.rawChipWaves[e]=s,c.rawChipWaves.dictionary[i.name]=s,c.chipWaves[e]=r,c.chipWaves.dictionary[i.name]=s,a.statusTable[e]=0,a.urlTable[e]="marioPaintboxSamples"}p("mario_paintbox_samples.js").then((()=>{const e=[h(catpaintboxsample),h(gameboypaintboxsample),h(mariopaintboxsample),h(drumpaintboxsample),h(yoshipaintboxsample),h(starpaintboxsample),h(fireflowerpaintboxsample),h(dogpaintbox),h(oinkpaintbox),h(swanpaintboxsample),h(facepaintboxsample)];let t=0;for(const n of e){const e=i+t;c.rawChipWaves[e].samples=n,c.rawRawChipWaves[e].samples=n,c.chipWaves[e].samples=d(n),a.statusTable[e]=1,a.samplesLoaded++,r.dispatchEvent(new s(a.totalSamples,a.samplesLoaded)),t++}}))}else console.log("invalid set of built-in samples")}class c{static generateSineWave(){const e=new Float32Array(t.sineWaveLength+1);for(let n=0;n<t.sineWaveLength+1;n++)e[n]=Math.sin(n*Math.PI*2/t.sineWaveLength);return e}static generateTriWave(){const e=new Float32Array(t.sineWaveLength+1);for(let n=0;n<t.sineWaveLength+1;n++)e[n]=Math.asin(Math.sin(n*Math.PI*2/t.sineWaveLength))/(Math.PI/2);return e}static generateTrapezoidWave(e=2){const n=new Float32Array(t.sineWaveLength+1);for(let i=0;i<t.sineWaveLength+1;i++)n[i]=Math.max(-1,Math.min(1,Math.asin(Math.sin(i*Math.PI*2/t.sineWaveLength))*e));return n}static generateSquareWave(e=0){const n=new Float32Array(t.sineWaveLength+1),i=t.sineWaveLength/4;for(let a=0;a<t.sineWaveLength+1;a++)n[a]=2*+(Math.abs(a-i)<e*t.sineWaveLength/2||Math.abs(a-t.sineWaveLength-i)<e*t.sineWaveLength/2)-1;return n}static generateSawWave(e=!1){const n=new Float32Array(t.sineWaveLength+1);for(let i=0;i<t.sineWaveLength+1;i++)n[i]=2*(i+t.sineWaveLength/4)/t.sineWaveLength%2-1,n[i]=e?-n[i]:n[i];return n}static generateQuasiSineWave(){const e=new Float32Array(t.sineWaveLength+1);for(let n=0;n<t.sineWaveLength+1;n++)e[n]=Math.round(Math.sin(n*Math.PI*2/t.sineWaveLength));return e}}function h(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];const n=t/e.length;for(let t=0;t<e.length;t++)e[t]-=n;return d(e),e.push(0),new Float32Array(e)}function f(e){let t=0;h(e);for(let n=0;n<e.length-1;n++)t+=Math.abs(e[n]);const n=t/(e.length-1);for(let t=0;t<e.length-1;t++)e[t]=e[t]/n;return new Float32Array(e)}function d(e){let t=0,n=new Float32Array(e.length);for(let i=0;i<e.length;i++)n[i]=t,t+=e[i];return n}function m(e){return e/(2*c.pulseWidthRange)}function v(e,t,n){let i=c.chipNoises[e].samples;if(null==i){if(i=new Float32Array(c.chipNoiseLength+1),c.chipNoises[e].samples=i,0==e){let e=1;for(let t=0;t<c.chipNoiseLength;t++){i[t]=2*(1&e)-1;let n=e>>1;1==(e+n&1)&&(n+=16384),e=n}}else if(1==e)for(let e=0;e<c.chipNoiseLength;e++)i[e]=2*Math.random()-1;else if(2==e){let e=1;for(let t=0;t<c.chipNoiseLength;t++){i[t]=2*(1&e)-1;let n=e>>1;1==(e+n&1)&&(n+=32768),e=n}}else if(3==e){let e=1;for(let t=0;t<c.chipNoiseLength;t++){i[t]=2*(1&e)-1;let n=e>>1;1==(e+n&1)&&(n+=40),e=n}}else if(4==e)y(i,c.chipNoiseLength,10,11,1,1,0),y(i,c.chipNoiseLength,11,14,.6578,.6578,0),t(i,c.chipNoiseLength),n(i,1/Math.sqrt(c.chipNoiseLength));else if(5==e)for(var a=1,s=0;s<c.chipNoiseLength;s++){i[s]=2*(1&a)-1,1==(a+(o=a>>1)&1)&&(o+=40),a=o}else if(6==e)y(i,c.chipNoiseLength,1,10,1,1,0),y(i,c.chipNoiseLength,20,14,-2,-2,0),t(i,c.chipNoiseLength),n(i,1/Math.sqrt(c.chipNoiseLength));else if(7==e)for(a=1,s=0;s<c.chipNoiseLength;s++){i[s]=4*(1&a)*(14*Math.random()+1)-8,1==(a+(o=a>>1)&1)&&(o+=60),a=o}else if(8==e)for(a=1,s=0;s<c.chipNoiseLength;s++){i[s]=(1&a)/2-.5,1==(a+(o=a>>1)&1)&&(o-=40),a=o}else if(9==e){let e=1;for(let t=0;t<c.chipNoiseLength;t++){i[t]=2*(1&e)-1.1;let n=e>>1;1==(e+n&1)&&(n+=131080),e=n}}else if(10==e)for(let e=0;e<c.chipNoiseLength;e++)i[e]=Math.round(Math.random());else if(11==e)for(a=1,s=0;s<c.chipNoiseLength;s++){var o;i[s]=Math.round(1&a),1==(a+(o=a>>1)&1)&&(o-=40),a=o}else if(12==e)for(let e=0;e<c.chipNoiseLength;e++){var r=Math.random();i[e]=Math.pow(r,Math.clz32(r))}else if(13==e){var l,p,u,h,f=0,d=0,m=0;f=d=m=l=p=u=h=0;for(let e=0;e<c.chipNoiseLength;e++){f=.99886*f+.0555179*(g=2*Math.random()-1),d=.99332*d+.0750759*g,m=.969*m+.153852*g,l=.8665*l+.3104856*g,p=.55*p+.5329522*g,u=-.7616*u-.016898*g,i[e]=f+d+m+l+p+u+h+.5362*g,i[e]*=.44,h=.115926*g}}else{if(14!=e)throw new Error("Unrecognized drum index: "+e);var v=0;for(let e=0;e<c.chipNoiseLength;e++){var g=2*Math.random()-1;i[e]=(v+.02*g)/1.02,v=i[e],i[e]*=14}}i[c.chipNoiseLength]=i[0]}return i}function y(e,t,n,i,a,s,o){const r=0|Math.pow(2,n),l=Math.min(t>>1,0|Math.pow(2,i)),p=v(0,null,null);let u=0;for(let c=r;c<l;c++){let r=a+(s-a)*(Math.log2(c)-n)/(i-n),l=Math.pow(2,7*(r-1)+1)*r;l*=Math.pow(c/2048,o),u+=l,l*=p[c];const h=.61803398875*c*c*Math.PI*2;e[c]=Math.cos(h)*l,e[t-c]=Math.sin(h)*l}return u}function g(e,t,n){let i=c.arpeggioPatterns[e-1];return null!=i?(2==e&&0==t&&(i=[0,0,1,1]),i[n%i.length]):n%e}function S(e){const t={};for(let n=0;n<e.length;n++){const i=e[n];i.index=n,t[i.name]=i}const n=e;return n.dictionary=t,n}function b(e){return 0!=(1024&e)}function w(e){return 0!=(2048&e)}function F(e){return 0!=(128&e)}function k(e){return 0!=(256&e)}function q(e){return 0!=(512&e)}function M(e){return 0!=(32&e)}function x(e){return 0!=(8&e)}function z(e){return 0!=(16&e)}function T(e){return 0!=(4&e)}function I(e){return 0!=(2&e)}function E(e){return 0!=(64&e)}function H(e){return 0!=(1&e)}function P(e){return 0!=(8192&e)}function G(e){return 0!=(16384&e)}function D(e,t=0){return 0==e?0:(e>0&&(e-=1/c.ringModHzRange),e>1/c.ringModHzRange&&(e+=1/c.ringModHzRange),Math.floor(c.ringModMinHz*Math.pow(c.ringModMaxHz/c.ringModMinHz,e)))}t=c,c.thresholdVal=-10,c.kneeVal=40,c.ratioVal=12,c.attackVal=0,c.releaseVal=.25,c.willReloadForCustomSamples=!1,c.jsonFormat="slarmoosbox",c.scales=S([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues",realName:"blues major",flags:[!0,!1,!0,!0,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Blues Minor",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Pentatonic Major",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Pentatonic Minor",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]},{name:"No Dabbing (MB)",realName:"no dabbing",flags:[!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1]},{name:"Jacked Toad (TB)",realName:"jacked toad",flags:[!0,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0]},{name:"Test Scale (TB)",realName:"**t",flags:[!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1]},{name:"Test Scale (TB)",realName:"**t",flags:[!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1]},{name:"Custom",realName:"custom",flags:[!0,!1,!1,!0,!1,!1,!1,!1,!1,!0,!0,!1]}]),c.keys=S([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C♯",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D♯",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F♯",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G♯",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A♯",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]),c.blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1],c.tempoMin=1,c.tempoMax=2e3,c.octaveMin=-8,c.octaveMax=8,c.echoDelayRange=24,c.echoDelayStepTicks=4,c.echoSustainRange=8,c.echoShelfHz=4e3,c.echoShelfGain=Math.pow(2,-.5),c.reverbShelfHz=8e3,c.reverbShelfGain=Math.pow(2,-1.5),c.reverbRange=32,c.reverbDelayBufferSize=16384,c.reverbDelayBufferMask=t.reverbDelayBufferSize-1,c.beatsPerBarMin=1,c.beatsPerBarMax=64,c.barCountMin=1,c.barCountMax=4096,c.instrumentCountMin=1,c.layeredInstrumentCountMax=10,c.patternInstrumentCountMax=10,c.partsPerBeat=24,c.ticksPerPart=2,c.ticksPerArpeggio=3,c.arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]],c.rhythms=S([{name:"÷3 (triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"÷4 (standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"÷6",stepsPerBeat:6,roundUpThresholds:null},{name:"÷8",stepsPerBeat:8,roundUpThresholds:null},{name:"÷12",stepsPerBeat:12,roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,roundUpThresholds:null}]),c.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","Picked String","supersaw","custom chip","mod","FM6op"],c.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!1,!1,!1,!1],c.chipBaseExpression=.03375,c.fmBaseExpression=.03,c.noiseBaseExpression=.19,c.spectrumBaseExpression=.3,c.drumsetBaseExpression=.45,c.harmonicsBaseExpression=.025,c.pwmBaseExpression=.04725,c.supersawBaseExpression=.061425,c.pickedStringBaseExpression=.025,c.distortionBaseVolume=.011,c.bitcrusherBaseVolume=.01,c.granularOutputLoudnessCompensation=.5,c.rawChipWaves=S([{name:"rounded",expression:.94,samples:h([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",expression:1,samples:h([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",expression:.5,samples:h([1,-1])},{name:"1/4 pulse",expression:.5,samples:h([1,-1,-1,-1])},{name:"1/8 pulse",expression:.5,samples:h([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",expression:.65,samples:h([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",expression:.5,samples:h([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",expression:.4,samples:h([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",expression:.4,samples:h([1,-1,1,-1,1,0])},{name:"sine",expression:.88,samples:f([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",expression:.8,samples:f([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",expression:.8,samples:f([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",expression:.38,samples:f([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",expression:.45,samples:f([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",expression:.3,samples:f([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",expression:.35,samples:f([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",expression:.22,samples:f([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",expression:.2,samples:f([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",expression:.2,samples:f([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",expression:.35,samples:f([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",expression:.5,samples:h},{name:"trapezoid",expression:1,samples:h([1/15,.4,10/15,14/15,1,1,1,1,1,1,1,1,14/15,10/15,.4,1/15,-1/15,-.4,-10/15,-14/15,-1,-1,-1,-1,-1,-1,-1,-1,-14/15,-10/15,-.4,-1/15])},{name:"modbox 10% pulse",expression:.5,samples:f([1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox sunsoft bass",expression:1,samples:f([0,.1875,.3125,.5625,.5,.75,.875,1,1,.6875,.5,.625,.625,.5,.375,.5625,.4375,.5625,.4375,.4375,.3125,.1875,.1875,.375,.5625,.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"modbox loud pulse",expression:.5,samples:f([1,.7,.1,.1,0,0,0,0,0,.1,.2,.15,.25,.125,.215,.345,4])},{name:"modbox sax",expression:.5,samples:f([1/15,.2,5/15,9,.06])},{name:"modbox guitar",expression:.5,samples:f([-.5,3.5,3,-.5,-.25,-1])},{name:"modbox sine",expression:.5,samples:f([0,.05,.125,.2,.25,.3,.425,.475,.525,.625,.675,.725,.775,.8,.825,.875,.9,.925,.95,.975,.98,.99,.995,1,.995,.99,.98,.975,.95,.925,.9,.875,.825,.8,.775,.725,.675,.625,.525,.475,.425,.3,.25,.2,.125,.05,0,-.05,-.125,-.2,-.25,-.3,-.425,-.475,-.525,-.625,-.675,-.725,-.775,-.8,-.825,-.875,-.9,-.925,-.95,-.975,-.98,-.99,-.995,-1,-.995,-.99,-.98,-.975,-.95,-.925,-.9,-.875,-.825,-.8,-.775,-.725,-.675,-.625,-.525,-.475,-.425,-.3,-.25,-.2,-.125,-.05])},{name:"modbox atari bass",expression:.5,samples:f([1,1,1,1,0,1,0,1,1,0,0,1,0,0,0])},{name:"modbox atari pulse",expression:.5,samples:f([1,0,1,1,1,1,1,1,1,1,1,1,1,1,1])},{name:"modbox 1% pulse",expression:.5,samples:f([1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox curved sawtooth",expression:.5,samples:f([1,.5,1/3,1/4])},{name:"modbox viola",expression:.45,samples:f([-.9,-1,-.85,-.775,-.7,-.6,-.5,-.4,-.325,-.225,-.2,-.125,-.1,-.11,-.125,-.15,-.175,-.18,-.2,-.21,-.22,-.21,-.2,-.175,-.15,-.1,-.5,.75,.11,.175,.2,.25,.26,.275,.26,.25,.225,.2,.19,.18,.19,.2,.21,.22,.23,.24,.25,.26,.275,.28,.29,.3,.29,.28,.27,.26,.25,.225,.2,.175,.15,.1,.075,0,-.01,-.025,.025,.075,.2,.3,.475,.6,.75,.85,.85,1,.99,.95,.8,.675,.475,.275,.01,-.15,-.3,-.475,-.5,-.6,-.71,-.81,-.9,-1,-.9])},{name:"modbox brass",expression:.45,samples:f([-1,-.95,-.975,-.9,-.85,-.8,-.775,-.65,-.6,-.5,-.475,-.35,-.275,-.2,-.125,-.05,0,.075,.125,.15,.2,.21,.225,.25,.225,.21,.2,.19,.175,.125,.1,.075,.06,.05,.04,.025,.04,.05,.1,.15,.225,.325,.425,.575,.7,.85,.95,1,.9,.675,.375,.2,.275,.4,.5,.55,.6,.625,.65,.65,.65,.65,.64,.6,.55,.5,.4,.325,.25,.15,.05,-.05,-.15,-.275,-.35,-.45,-.55,-.65,-.7,-.78,-.825,-.9,-.925,-.95,-.975])},{name:"modbox acoustic bass",expression:.5,samples:f([1,0,.1,-.1,-.2,-.4,-.3,-1])},{name:"modbox lyre",expression:.45,samples:f([1,-1,4,2.15,4.13,5.15,0,-.05,1])},{name:"modbox ramp pulse",expression:.5,samples:f([6.1,-2.9,1.4,-2.9])},{name:"modbox piccolo",expression:.5,samples:f([1,4,2,1,-.1,-1,-.12])},{name:"modbox squaretooth",expression:.5,samples:f([.2,1,2.6,1,0,-2.4])},{name:"modbox flatline",expression:1,samples:f([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0,.1,.2,.3,.4,.5,.6,.7,.8,.9])},{name:"modbox pnryshk a (u5)",expression:.4,samples:f([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0])},{name:"modbox pnryshk b (riff)",expression:.5,samples:f([1,-.9,.8,-.7,.6,-.5,.4,-.3,.2,-.1,0,-.1,.2,-.3,.4,-.5,.6,-.7,.8,-.9,1])},{name:"sandbox shrill lute",expression:.94,samples:f([1,1.5,1.25,1.2,1.3,1.5])},{name:"sandbox bassoon",expression:.5,samples:f([1,-1,1,1,1,1,1,1,1,1,1,1,0])},{name:"sandbox shrill bass",expression:.5,samples:f([0,1,0,0,1,0,1,0,0,0])},{name:"sandbox nes pulse",expression:.4,samples:f([2.1,-2.2,1.2,3])},{name:"sandbox saw bass",expression:.25,samples:f([1,1,1,1,0,2,1,2,3,1,-2,1,4,1,4,2,1,6,-3,4,2,1,5,1,4,1,5,6,7,1,6,1,4,1,9])},{name:"sandbox euphonium",expression:.3,samples:f([0,1,2,1,2,1,4,2,5,0,-2,1,5,1,2,1,2,4,5,1,5,-2,5,10,1])},{name:"sandbox shrill pulse",expression:.3,samples:f([2,0,4,1,4,6,7,3])},{name:"sandbox r-sawtooth",expression:.2,samples:f([6.1,-2.9,1.4,-2.9])},{name:"sandbox recorder",expression:.2,samples:f([5,-5.1,4,-4.1,3,-3.1,2,-2.1,1,-1.1,6])},{name:"sandbox narrow saw",expression:1.2,samples:f([.1,-1.3,.13/-.3,-.26,.13/-.7,.13/-.9,.13/-.11,.13/-.31,.13/-.51,.13/-.71,.13/-.91,.13/-.12,-.40625,-.25,.13/-.72,.13/-.92,-1,1,.13/.92,.13/.72,.25,.40625,.13/.12,.13/.91,.13/.71,.13/.51,.13/.31,.13/.11,.13/.9,.13/.7,.26,.13/.3,.13])},{name:"sandbox deep square",expression:1,samples:f([1,2.25,1,-1,-2.25,-1])},{name:"sandbox ring pulse",expression:1,samples:f([1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1])},{name:"sandbox double sine",expression:1,samples:f([1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1,0,-1,-1.1,-1.2,-1.3,-1.4,-1.5,-1.6,-1.7,-1.8,-1.9,-1.8,-1.7,-1.6,-1.5,-1.4,-1.3,-1.2,-1.1,-1])},{name:"sandbox contrabass",expression:.5,samples:f([4.2,6.9,1.337,6.66])},{name:"sandbox double bass",expression:.4,samples:f([0,.1875,.3125,.5625,.5,.75,.875,1,-1,-.6875,-.5,-.625,-.625,-.5,-.375,-.5625,-.4375,-.5625,-.4375,-.4375,-.3125,-.1875,.1875,.375,.5625,-.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"haileybox test1",expression:.5,samples:f([1,.5,-1])},{name:"brucebox pokey 4bit lfsr",expression:.5,samples:f([1,-1,-1,-1,1,1,1,1,-1,1,-1,1,1,-1,-1])},{name:"brucebox pokey 5step bass",expression:.5,samples:f([1,-1,1,-1,1])},{name:"brucebox isolated spiky",expression:.5,samples:f([1,-1,1,-1,1,-1])},{name:"nerdbox unnamed 1",expression:.5,samples:f([.2,4,.7,-.4,-1,.5,-.5/.6])},{name:"nerdbox unnamed 2",expression:.5,samples:f([2,5/55,-9,1,-55,18.5/-26])},{name:"zefbox semi-square",expression:1,samples:f([1,1.5,2,2.5,2.5,2.5,2,1.5,1])},{name:"zefbox deep square",expression:1,samples:f([1,2.25,1,-1,-2.25,-1])},{name:"zefbox squaretal",expression:.7,samples:f([1.5,1,1.5,-1.5,-1,-1.5])},{name:"zefbox saw wide",expression:.65,samples:f([0,-.4,-.8,-1.2,-1.6,-2,0,-.4,-.8,-1.2,-1.6])},{name:"zefbox saw narrow",expression:.65,samples:f([1,.5,1,.5,1,.5,1,2,1,2,1])},{name:"zefbox deep sawtooth",expression:.5,samples:f([0,2,3,4,4.5,5,5.5,6,6.25,6.5,6.75,7,6.75,6.5,6.25,6,5.5,5,4.5,4,3,2,1])},{name:"zefbox sawtal",expression:.3,samples:f([1.5,1,1.25,-.5,1.5,-.5,0,-1.5,1.5,0,.5,-1.5,.5,1.25,-1,-1.5])},{name:"zefbox deep sawtal",expression:.7,samples:f([.75,.25,.5,-.5,.5,-.5,-.25,-.75])},{name:"zefbox pulse",expression:.5,samples:f([1,-2,-2,-1.5,-1.5,-1.25,-1.25,-1,-1])},{name:"zefbox triple pulse",expression:.4,samples:f([1,1,1,1,1,-1,-1,1.5,1,1,1,1,-1,-1,-1,1.5])},{name:"zefbox high pulse",expression:.2,samples:f([1,-2,2,-3,3,-4,5,-4,3,-3,2,-2,1])},{name:"zefbox deep pulse",expression:.2,samples:f([1,2,2,-2,-2,-3,-4,-4,-5,-5,-5,-5,0,-1,-2])},{name:"wackybox guitar string",expression:.6,samples:f([0,63,63,63,63,19,63,63,63,63,63,63,63,63,63,63,11,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,27,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,34,63,63,63,63])},{name:"wackybox intense",expression:.6,samples:f([36,25,33,35,18,51,22,40,27,37,31,33,25,29,41,23,31,31,45,20,37,23,29,26,42,29,33,26,31,27,40,25,40,26,37,24,41,32,0,32,33,29,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31])},{name:"wackybox buzz wave",expression:.6,samples:f([0,1,1,2,4,4,4,4,5,5,6,6,6,7,8,8,8,9,9,9,9,9,9,8,8,8,11,15,23,62,61,60,58,56,56,54,53,52,50,49,48,47,47,45,45,45,44,44,43,43,42,42,42,42,42,42,42,42,42,42,42,43,43,53])},{name:"todbox 1/3 pulse",expression:.5,samples:h([1,-1,-1])},{name:"todbox 1/5 pulse",expression:.5,samples:h([1,-1,-1,-1,-1])},{name:"todbox slap bass",expression:.5,samples:f([1,.5,0,.5,1.25,.5,-.25,.1,-.1,.1,1.1,2.1,3,3.5,2.9,3.3,2.7,2.9,2.3,2,1.9,1.8,1,.7,.9,.8,.4,.1,0,.2,.4,.6,.5,.8])},{name:"todbox harsh wave",expression:.45,samples:f([1,-1,-1,-1,.5,.5,.5,.7,.39,1.3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"todbox accordian",expression:.5,samples:f([0,1,1,2,2,1.5,1.5,.8,0,-2,-3.25,-4,-4.5,-5.5,-6,-5.75,-5.5,-5,-5,-5,-6,-6,-6,-5,-4,-3,-2,-1,.75,1,2,3,4,5,6,6.5,7.5,8,7.75,6,5.25,5,5,5,5,5,4.25,3.75,3.25,2.75,1.25,-.75,-2,-.75,1.25,1.25,2,2,2,2,1.5,-1,-2,-1,1.5,2,2.75,2.75,2.75,3,2.75,-1,-2,-2.5,-2,-1,-2.25,-2.75,-2,-3,-1.75,1,2,3.5,4,5.25,6,8,9.75,10,9.5,9,8.5,7.5,6.5,5.25,5,4.5,4,4,4,3.25,2.5,2,1,-.5,-2,-3.5,-4,-4,-4,-3.75,-3,-2,-1])},{name:"todbox beta banana wave",expression:.8,samples:f([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0])},{name:"todbox beta test wave",expression:.5,samples:f([56,0,-52,16,3,3,2,-35,20,147,-53,0,0,5,-6])},{name:"todbox beta real snare",expression:1,samples:f([0,-.01208,-.02997,-.04382,-.06042,-.07529,-.09116,-.10654,-.12189,-.13751,-.15289,-.16849,-.18387,-.19974,-.21484,-.23071,-.24557,-.26144,-.27731,-.29141,-.3035,-.32416,-.34406,-.32947,-.31158,-.33725,-.37579,-.39746,-.40201,-.40906,-.4418,-.47229,-.47379,-.47733,-.45239,-.33954,-.22894,-.22443,-.32138,-.46371,-.57178,-.61081,-.59998,-.61459,-.62189,-.43979,-.19217,-.12643,-.17252,-.20956,-.20981,-.19217,-.22845,-.34332,-.50629,-.64307,-.72922,-.81384,-.87857,-.90149,-.88687,-.86169,-.87781,-.80478,-.52493,-.31308,-.33249,-.39395,-.39017,-.30301,-.19949,-.13071,-.02493,.14307,.34961,.52542,.63223,.68613,.7471,.87305,.98184,.98889,.97052,.99066,.99747,.99344,.99469,.99393,.9957,.99393,.99521,.99469,.9942,.99521,.9942,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99469,.99493,.9942,.99521,.99393,.99493,.99469,.99445,.9957,.99445,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99445,.99493,.9942,.99545,.9942,.99493,.99493,.9942,.99545,.99445,.99521,.99469,.99445,.99545,.99368,.99393,.99445,.99268,.97983,.97229,.95944,.88486,.76773,.64481,.53098,.39847,.19318,-.03827,-.20325,-.39319,-.68765,-.88461,-.93448,-.96069,-.97681,-.98715,-.99042,-.99142,-.99091,-.99142,-.99219,-.99091,-.99219,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99191,-.99142,-.99142,-.99191,-.99091,-.99219,-.99118,-.99142,-.99167,-.99091,-.99219,-.99091,-.99167,-.99142,-.99091,-.99191,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99118,-.99142,-.99191,-.99066,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99191,-.99142,-.99142,-.99243,-.98865,-.98764,-.99219,-.98083,-.92517,-.9277,-.91486,-.59042,-.15189,.02945,.05667,.06195,.00629,-.18008,-.56497,-.8801,-.9277,-.92871,-.97705,-.99167,-.98663,-.99118,-.99042,-.99219,-.99142,-.99118,-.98941,-.99219,-1,-.9758,-.95993,-.99948,-.98236,-.84659,-.7486,-.70679,-.59747,-.48035,-.41687,-.36826,-.29745,-.18185,-.06219,.02164,.07907,.13123,.18033,.1962,.15692,.14053,.20251,.2753,.30905,.29092,.27252,.30402,.32416,.32214,.35239,.3967,.43198,.4942,.58487,.64154,.65967,.6705,.67026,.66522,.6554,.66119,.70627,.75842,.78738,.7894,.78763,.80402,.85944,.94559,.9899,.9816,.98007,.99368,.99393,.98538,.9758,.97101,.93802,.81812,.64633,.46649,.28613,.14685,.08966,.12543,.20325,.24557,.18866,.02795,-.20175,-.44205,-.58713,-.57629,-.41385,-.14255,.18033,.47882,.68311,.72314,.62064,.48309,.43073,.53577,.72794,.9025,.97354,.97,.98083,.99191,.99319,.99493,.99393,.99521,.99393,.99545,.9942,.99493,.99493,.99445,.99545,.9942,.99545,.99243,.98917,.98386,.97781,.95844,.89066,.81561,.78134,.77277,.75995,.73022,.67126,.57178,.47,.38361,.29419,.20703,.14734,.15866,.25162,.35818,.45062,.5675,.69748,.81232,.89697,.95062,.97656,.98615,.99191,.99219,.99243,.99368,.99368,.97028,.95566,.94559,.82617,.59973,.38361,.23901,.15338,.12921,.11206,.04382,-.12946,-.43552,-.72644,-.89847,-.95465,-.95541,-.97229,-.99268,-.99319,-.9884,-.99142,-.99167,-.99091,-.9884,-.98965,-.99368,-.97455,-.9501,-.94684,-.96219,-.98514,-.99243,-.98889,-.98917,-.99142,-.99219,-.99091,-.99191,-.99142,-.99142,-.99191,-.99066,-.99167,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99167,-.99091,-.99219,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99091,-.99118,-.99243,-.98941,-.98462,-.96976,-.9632,-.96194,-.87305,-.66196,-.44809,-.29495,-.18085,-.11813,-.11334,-.18564,-.34885,-.58237,-.8045,-.93726,-.97806,-.97354,-.97531,-.9899,-.99368,-.98941,-.99219,-.99091,-.99142,-.99167,-.99091,-.99191,-.99118,-.99219,-.98236,-.97781,-.97656,-.95135,-.87204,-.71335,-.52139,-.34232,-.17783,-.00906,.14886,.3045,.48889,.67404,.8403,.94128,.97681,.98462,.98337,.99142,.99521,.99493,.9942,.99445,.99521,.99393,.99545,.99445,.99521,.99521,.99445,.9957,.99445,.99521,.99469,.99445,.99521,.9942,.99521,.99445,.99445,.99521,.99445,.99545,.99445,.99469,.99493,.99393,.99493,.99445,.99393,.98285,.97781,.97479,.92844,.82114,.66095,.52417,.46826,.46722,.47934,.47379,.47076,.48209,.42014,.25439,.10074,-.00302,-.08966,-.16068,-.21436,-.2204,-.15137,-.00476,.18536,.37631,.52292,.62164,.70425,.74835,.72366,.63928,.52567,.40805,.35666,.42896,.60175,.802,.92743,.96548,.97632,.98337,.99066,.99521,.9942,.99368,.99292,.9884,.98083,.96774,.93323,.8544,.6947,.47202,.20425,-.0889,-.36423,-.60025,-.77481,-.90173,-.96017,-.97028,-.98108,-.9884,-.99219,-.9899,-.99219,-.99142,-.99142,-.99219,-.99091,-.99243,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99118,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99142,-.99118,-.98917,-.99042,-.99445,-.9733,-.9559,-.96219,-.8967,-.72241,-.55112,-.44809,-.39319,-.37833,-.35641,-.2627,-.1423,-.11282,-.13525,-.11536,-.09671,-.11511,-.1806,-.26874,-.33374,-.42215,-.51358,-.44785,-.3045,-.28613,-.30527,-.25037,-.1539,-.08286,-.11157,-.12592,-.00327,.13803,.19141,.1282,.01788,-.03952,-.12592,-.26773,-.34634,-.31384,-.1806,-.0108,.13574,.2612,.36975,.46573,.55087,.63626,.73022,.83072,.92014,.97177,.98587,.98413,.99167,.99445,.99292,.99219,.9874,.98007,.96472,.92239,.82166,.69067,.57959,.54962,.59695,.64255,.64633,.60629,.55942,.5491,.58966,.61887,.56952,.54181,.59518,.63248,.63876,.65463,.73398,.88312,.96927,.97101,.97958,.99344,.9942,.99268,.99493,.99469,.99445,.99521,.99445,.99545,.9942,.99493,.99493,.9942,.99545,.9942,.99493,.9942,.99393,.9942,.9884,.98309,.98309,.96069,.88461,.7937,.72064,.65765,.59998,.53247,.49268,.48615,.44205,.38034,.36447,.38715,.39294,.32645,.19595,.07782,-.05893,-.27832,-.48309,-.62619,-.72995,-.79999,-.84583,-.82166,-.73575,-.67227,-.65491,-.6496,-.66397,-.70175,-.72894,-.74658,-.76724,-.7952,-.82846,-.86523,-.90527,-.94382,-.89948,-.69849,-.47479,-.31662,-.15414,-.00729,.07077,.08237,.04431,-.02292,-.11761,-.24307,-.36926,-.45087,-.4617,-.4025,-.30679,-.17529,0,.14331,.24179,.36774,.49545,.56522,.57907,.56775,.53851,.51132,.48688,.41913,.26044,.00955,-.26297,-.46396,-.62341,-.82214,-.94684,-.96774,-.97531,-.98413,-.99017,-.9899,-.99219,-.99066,-.99142,-.99167,-.99118,-.99219,-.9899,-.99118,-.99368,-.99142,-.97757,-.97403,-.98007,-.9617,-.86826,-.67783,-.52719,-.48788,-.4549,-.43146,-.47681,-.54105,-.57983,-.60904,-.62317,-.59949,-.55566,-.52063,-.52115,-.55112,-.56244,-.58337,-.6554,-.73373,-.77228,-.74759,-.6889,-.64609,-.61887,-.5806,-.50351,-.40729,-.33929,-.3511,-.42944,-.47028,-.42267,-.32718,-.20224,-.0564,.04556,.10529,.1763,.26169,.33197,.32138,.23776,.20956,.23148,.20352,.23325,.39267,.52719,.58438,.62289,.66345,.70023,.66296,.5433,.42618,.33475,.24533,.14105,.03851,.01358,.09143,.22845,.34961,.41711,.4874,.58914,.69519,.78186,.84357,.89822,.95389,.98135,.98615,.99167,.99243,.99445,.9942,.99469,.99493,.99393,.99545,.99445,.99521,.99469,.99445,.99521,.9942,.99469,.98965,.98715,.98563,.96295,.91736,.86624,.82367,.77554,.68411,.53549,.38916,.2612,.11435,-.04053,-.18161,-.23172,-.19394,-.15237,-.1073,-.02997,.08588,.2262,.34305,.44104,.5574,.65765,.71259,.69217,.65363,.69748,.79572,.89368,.95514,.97733,.98413,.98816,.99243,.99445,.99243,.97302,.96674,.97983,.90378,.71005,.51056,.40451,.40982,.41559,.32996,.24356,.18866,.11411,.05365,.01157,-.03247,-.09216,-.16095,-.23248,-.31662,-.39771,-.48663,-.59647,-.71536,-.82013,-.85287,-.82947,-.84937,-.92215,-.97177,-.98663,-.98816,-.98438,-.99091,-.99219,-.99091,-.99191,-.99042,-.99191,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99142])},{name:"ultrabox shortened od guitar",expression:.5,samples:f([-.82785,-.67621,-.40268,-.43817,-.45468,-.22531,-.18329,.2475,.71246,.52155,.56082,.48395,.3399,.46957,.27744,.42313,.47104,.18796,.1293,-.13901,-.07431,-.16348,-.74857,-.73206,-.35181,-.26227,-.41882,-.27786,-.19806,-.19867,.18643,.24808,.08847,-.06964,.06912,.20474,-.05304,.29416,.31967,.14243,.27521,-.23932,-.14752,.1236,-.26123,-.26111,.06616,.2652,.0809,.1524,.16254,-.12061,.04562,.00131,.0405,.08182,-.21729,-.17041,-.16312,-.08563,.0639,.05099,.05627,.02728,.00726,-.13028,-.05673,-.14969,-.17645,.35492,.16766,-.00897,.24326,-.00461,-.04456,.01776,-.0495,-.01221,.02039,.07684,.13397,.3985,.35962,.13754,.4231,.27161,-.17609,.03659,.10635,-.21909,-.22046,-.20258,-.40973,-.4028,-.40521,-.66284])},{name:"lemmbox HD triangle",expression:1,samples:h([1,.996,.992,.988,.984,.98,.976,.972,.968,.964,.96,.956,.952,.948,.944,.94,.9359999999999999,.9319999999999999,.9279999999999999,.9239999999999999,.9199999999999999,.9159999999999999,.9119999999999999,.9079999999999999,.9039999999999999,.8999999999999999,.8959999999999999,.8919999999999999,.8879999999999999,.8839999999999999,.8799999999999999,.8759999999999999,.8719999999999999,.8679999999999999,.8639999999999999,.8599999999999999,.8560000000000001,.8520000000000001,.8480000000000001,.8440000000000001,.8400000000000001,.8360000000000001,.8320000000000001,.8280000000000001,.8240000000000001,.8200000000000001,.8160000000000001,.812,.808,.804,.8,.796,.792,.788,.784,.78,.776,.772,.768,.764,.76,.756,.752,.748,.744,.74,.736,.732,.728,.724,.72,.716,.712,.708,.704,.7,.696,.692,.688,.6839999999999999,.6799999999999999,.6759999999999999,.6719999999999999,.6679999999999999,.6639999999999999,.6599999999999999,.6560000000000001,.6520000000000001,.6480000000000001,.6440000000000001,.6400000000000001,.6360000000000001,.6320000000000001,.6280000000000001,.6240000000000001,.6200000000000001,.6160000000000001,.6120000000000001,.6080000000000001,.6040000000000001,.6000000000000001,.5960000000000001,.5920000000000001,.5880000000000001,.5840000000000001,.5800000000000001,.5760000000000001,.5720000000000001,.5680000000000001,.5640000000000001,.56,.556,.552,.548,.544,.54,.536,.532,.528,.524,.52,.516,.512,.508,.504,.5,.496,.492,.488,.484,.48,.476,.472,.46799999999999997,.46399999999999997,.45999999999999996,.45599999999999996,.45199999999999996,.44799999999999995,.44399999999999995,.43999999999999995,.43599999999999994,.43199999999999994,.42799999999999994,.42399999999999993,.41999999999999993,.4159999999999999,.4119999999999999,.4079999999999999,.4039999999999999,.3999999999999999,.3959999999999999,.3919999999999999,.3879999999999999,.3839999999999999,.3799999999999999,.3759999999999999,.3719999999999999,.3679999999999999,.3639999999999999,.3599999999999999,.35599999999999987,.35199999999999987,.34799999999999986,.34399999999999986,.33999999999999986,.33599999999999985,.33199999999999985,.32799999999999985,.32399999999999984,.31999999999999984,.31599999999999984,.31200000000000006,.30800000000000005,.30400000000000005,.30000000000000004,.29600000000000004,.29200000000000004,.28800000000000003,.28400000000000003,.28,.276,.272,.268,.264,.26,.256,.252,.248,.244,.24,.236,.23199999999999998,.22799999999999998,.22399999999999998,.21999999999999997,.21599999999999997,.21199999999999997,.20799999999999996,.20399999999999996,.19999999999999996,.19599999999999995,.19199999999999995,.18799999999999994,.18400000000000016,.18000000000000016,.17600000000000016,.17200000000000015,.16800000000000015,.16400000000000015,.16000000000000014,.15600000000000014,.15200000000000014,.14800000000000013,.14400000000000013,.14000000000000012,.13600000000000012,.13200000000000012,.1280000000000001,.12400000000000011,.1200000000000001,.1160000000000001,.1120000000000001,.1080000000000001,.10400000000000009,.10000000000000009,.09600000000000009,.09200000000000008,.08800000000000008,.08400000000000007,.08000000000000007,.07600000000000007,.07200000000000006,.06800000000000006,.06400000000000006,.06000000000000005,.05600000000000005,.052000000000000046,.04800000000000004,.04400000000000004,.040000000000000036,.03600000000000003,.03200000000000003,.028000000000000025,.02400000000000002,.020000000000000018,.016000000000000014,.01200000000000001,.008000000000000007,.0040000000000000036,0,-.0040000000000000036,-.008000000000000007,-.01200000000000001,-.016000000000000014,-.020000000000000018,-.02400000000000002,-.028000000000000025,-.03200000000000003,-.03600000000000003,-.040000000000000036,-.04400000000000004,-.04800000000000004,-.052000000000000046,-.05600000000000005,-.06000000000000005,-.06400000000000006,-.06800000000000006,-.07200000000000006,-.07600000000000007,-.08000000000000007,-.08400000000000007,-.08800000000000008,-.09200000000000008,-.09600000000000009,-.10000000000000009,-.10400000000000009,-.1080000000000001,-.1120000000000001,-.1160000000000001,-.1200000000000001,-.12400000000000011,-.1279999999999999,-.1319999999999999,-.1359999999999999,-.1399999999999999,-.1439999999999999,-.1479999999999999,-.1519999999999999,-.15599999999999992,-.15999999999999992,-.16399999999999992,-.16799999999999993,-.17199999999999993,-.17599999999999993,-.17999999999999994,-.18399999999999994,-.18799999999999994,-.19199999999999995,-.19599999999999995,-.19999999999999996,-.20399999999999996,-.20799999999999996,-.21199999999999997,-.21599999999999997,-.21999999999999997,-.22399999999999998,-.22799999999999998,-.23199999999999998,-.236,-.24,-.244,-.248,-.252,-.256,-.26,-.264,-.268,-.272,-.276,-.28,-.28400000000000003,-.28800000000000003,-.29200000000000004,-.29600000000000004,-.30000000000000004,-.30400000000000005,-.30800000000000005,-.31200000000000006,-.31600000000000006,-.32000000000000006,-.32400000000000007,-.32800000000000007,-.3320000000000001,-.3360000000000001,-.3400000000000001,-.3440000000000001,-.3480000000000001,-.3520000000000001,-.3560000000000001,-.3600000000000001,-.3640000000000001,-.3680000000000001,-.3720000000000001,-.3759999999999999,-.3799999999999999,-.3839999999999999,-.3879999999999999,-.3919999999999999,-.3959999999999999,-.3999999999999999,-.4039999999999999,-.4079999999999999,-.4119999999999999,-.4159999999999999,-.41999999999999993,-.42399999999999993,-.42799999999999994,-.43199999999999994,-.43599999999999994,-.43999999999999995,-.44399999999999995,-.44799999999999995,-.45199999999999996,-.45599999999999996,-.45999999999999996,-.46399999999999997,-.46799999999999997,-.472,-.476,-.48,-.484,-.488,-.492,-.496,-.5,-.504,-.508,-.512,-.516,-.52,-.524,-.528,-.532,-.536,-.54,-.544,-.548,-.552,-.556,-.56,-.5640000000000001,-.5680000000000001,-.5720000000000001,-.5760000000000001,-.5800000000000001,-.5840000000000001,-.5880000000000001,-.5920000000000001,-.5960000000000001,-.6000000000000001,-.6040000000000001,-.6080000000000001,-.6120000000000001,-.6160000000000001,-.6200000000000001,-.6240000000000001,-.6279999999999999,-.6319999999999999,-.6359999999999999,-.6399999999999999,-.6439999999999999,-.6479999999999999,-.6519999999999999,-.6559999999999999,-.6599999999999999,-.6639999999999999,-.6679999999999999,-.6719999999999999,-.6759999999999999,-.6799999999999999,-.6839999999999999,-.688,-.692,-.696,-.7,-.704,-.708,-.712,-.716,-.72,-.724,-.728,-.732,-.736,-.74,-.744,-.748,-.752,-.756,-.76,-.764,-.768,-.772,-.776,-.78,-.784,-.788,-.792,-.796,-.8,-.804,-.808,-.812,-.8160000000000001,-.8200000000000001,-.8240000000000001,-.8280000000000001,-.8320000000000001,-.8360000000000001,-.8400000000000001,-.8440000000000001,-.8480000000000001,-.8520000000000001,-.8560000000000001,-.8600000000000001,-.8640000000000001,-.8680000000000001,-.8720000000000001,-.8759999999999999,-.8799999999999999,-.8839999999999999,-.8879999999999999,-.8919999999999999,-.8959999999999999,-.8999999999999999,-.9039999999999999,-.9079999999999999,-.9119999999999999,-.9159999999999999,-.9199999999999999,-.9239999999999999,-.9279999999999999,-.9319999999999999,-.9359999999999999,-.94,-.944,-.948,-.952,-.956,-.96,-.964,-.968,-.972,-.976,-.98,-.984,-.988,-.992,-.996,-1,-.996,-.992,-.988,-.984,-.98,-.976,-.972,-.968,-.964,-.96,-.956,-.952,-.948,-.944,-.94,-.9359999999999999,-.9319999999999999,-.9279999999999999,-.9239999999999999,-.9199999999999999,-.9159999999999999,-.9119999999999999,-.9079999999999999,-.9039999999999999,-.8999999999999999,-.8959999999999999,-.8919999999999999,-.8879999999999999,-.8839999999999999,-.8799999999999999,-.8759999999999999,-.8719999999999999,-.8679999999999999,-.8639999999999999,-.8599999999999999,-.8559999999999999,-.8519999999999999,-.8479999999999999,-.8439999999999999,-.8399999999999999,-.8359999999999999,-.8319999999999999,-.8279999999999998,-.8239999999999998,-.8199999999999998,-.8159999999999998,-.8119999999999998,-.8079999999999998,-.8039999999999998,-.7999999999999998,-.7959999999999998,-.7919999999999998,-.7879999999999998,-.7839999999999998,-.7799999999999998,-.7759999999999998,-.7719999999999998,-.7679999999999998,-.7639999999999998,-.7599999999999998,-.7559999999999998,-.7519999999999998,-.7480000000000002,-.7440000000000002,-.7400000000000002,-.7360000000000002,-.7320000000000002,-.7280000000000002,-.7240000000000002,-.7200000000000002,-.7160000000000002,-.7120000000000002,-.7080000000000002,-.7040000000000002,-.7000000000000002,-.6960000000000002,-.6920000000000002,-.6880000000000002,-.6840000000000002,-.6800000000000002,-.6760000000000002,-.6720000000000002,-.6680000000000001,-.6640000000000001,-.6600000000000001,-.6560000000000001,-.6520000000000001,-.6480000000000001,-.6440000000000001,-.6400000000000001,-.6360000000000001,-.6320000000000001,-.6280000000000001,-.6240000000000001,-.6200000000000001,-.6160000000000001,-.6120000000000001,-.6080000000000001,-.6040000000000001,-.6000000000000001,-.5960000000000001,-.5920000000000001,-.5880000000000001,-.5840000000000001,-.5800000000000001,-.5760000000000001,-.5720000000000001,-.5680000000000001,-.5640000000000001,-.56,-.556,-.552,-.548,-.544,-.54,-.536,-.532,-.528,-.524,-.52,-.516,-.512,-.508,-.504,-.5,-.496,-.492,-.488,-.484,-.48,-.476,-.472,-.46799999999999997,-.46399999999999997,-.45999999999999996,-.45599999999999996,-.45199999999999996,-.44799999999999995,-.44399999999999995,-.43999999999999995,-.43599999999999994,-.43199999999999994,-.42799999999999994,-.42399999999999993,-.41999999999999993,-.4159999999999999,-.4119999999999999,-.4079999999999999,-.4039999999999999,-.3999999999999999,-.3959999999999999,-.3919999999999999,-.3879999999999999,-.3839999999999999,-.3799999999999999,-.3759999999999999,-.3719999999999999,-.3679999999999999,-.3639999999999999,-.3599999999999999,-.35599999999999987,-.35199999999999987,-.34799999999999986,-.34399999999999986,-.33999999999999986,-.33599999999999985,-.33199999999999985,-.32799999999999985,-.32399999999999984,-.31999999999999984,-.31599999999999984,-.31199999999999983,-.30799999999999983,-.3039999999999998,-.2999999999999998,-.2959999999999998,-.2919999999999998,-.2879999999999998,-.2839999999999998,-.2799999999999998,-.2759999999999998,-.2719999999999998,-.2679999999999998,-.2639999999999998,-.2599999999999998,-.2559999999999998,-.2519999999999998,-.24800000000000022,-.24400000000000022,-.2400000000000002,-.2360000000000002,-.2320000000000002,-.2280000000000002,-.2240000000000002,-.2200000000000002,-.2160000000000002,-.2120000000000002,-.20800000000000018,-.20400000000000018,-.20000000000000018,-.19600000000000017,-.19200000000000017,-.18800000000000017,-.18400000000000016,-.18000000000000016,-.17600000000000016,-.17200000000000015,-.16800000000000015,-.16400000000000015,-.16000000000000014,-.15600000000000014,-.15200000000000014,-.14800000000000013,-.14400000000000013,-.14000000000000012,-.13600000000000012,-.13200000000000012,-.1280000000000001,-.12400000000000011,-.1200000000000001,-.1160000000000001,-.1120000000000001,-.1080000000000001,-.10400000000000009,-.10000000000000009,-.09600000000000009,-.09200000000000008,-.08800000000000008,-.08400000000000007,-.08000000000000007,-.07600000000000007,-.07200000000000006,-.06800000000000006,-.06400000000000006,-.06000000000000005,-.05600000000000005,-.052000000000000046,-.04800000000000004,-.04400000000000004,-.040000000000000036,-.03600000000000003,-.03200000000000003,-.028000000000000025,-.02400000000000002,-.020000000000000018,-.016000000000000014,-.01200000000000001,-.008000000000000007,-.0040000000000000036,0,.0040000000000000036,.008000000000000007,.01200000000000001,.016000000000000014,.020000000000000018,.02400000000000002,.028000000000000025,.03200000000000003,.03600000000000003,.040000000000000036,.04400000000000004,.04800000000000004,.052000000000000046,.05600000000000005,.06000000000000005,.06400000000000006,.06800000000000006,.07200000000000006,.07600000000000007,.08000000000000007,.08400000000000007,.08800000000000008,.09200000000000008,.09600000000000009,.10000000000000009,.10400000000000009,.1080000000000001,.1120000000000001,.1160000000000001,.1200000000000001,.12400000000000011,.1280000000000001,.13200000000000012,.13600000000000012,.14000000000000012,.14400000000000013,.14800000000000013,.15200000000000014,.15600000000000014,.16000000000000014,.16400000000000015,.16800000000000015,.17200000000000015,.17600000000000016,.18000000000000016,.18400000000000016,.18800000000000017,.19200000000000017,.19600000000000017,.20000000000000018,.20400000000000018,.20800000000000018,.2120000000000002,.2160000000000002,.2200000000000002,.2240000000000002,.2280000000000002,.2320000000000002,.2360000000000002,.2400000000000002,.24400000000000022,.24800000000000022,.2519999999999998,.2559999999999998,.2599999999999998,.2639999999999998,.2679999999999998,.2719999999999998,.2759999999999998,.2799999999999998,.2839999999999998,.2879999999999998,.2919999999999998,.2959999999999998,.2999999999999998,.3039999999999998,.30799999999999983,.31199999999999983,.31599999999999984,.31999999999999984,.32399999999999984,.32799999999999985,.33199999999999985,.33599999999999985,.33999999999999986,.34399999999999986,.34799999999999986,.35199999999999987,.35599999999999987,.3599999999999999,.3639999999999999,.3679999999999999,.3719999999999999,.3759999999999999,.3799999999999999,.3839999999999999,.3879999999999999,.3919999999999999,.3959999999999999,.3999999999999999,.4039999999999999,.4079999999999999,.4119999999999999,.4159999999999999,.41999999999999993,.42399999999999993,.42799999999999994,.43199999999999994,.43599999999999994,.43999999999999995,.44399999999999995,.44799999999999995,.45199999999999996,.45599999999999996,.45999999999999996,.46399999999999997,.46799999999999997,.472,.476,.48,.484,.488,.492,.496,.5,.504,.508,.512,.516,.52,.524,.528,.532,.536,.54,.544,.548,.552,.556,.56,.5640000000000001,.5680000000000001,.5720000000000001,.5760000000000001,.5800000000000001,.5840000000000001,.5880000000000001,.5920000000000001,.5960000000000001,.6000000000000001,.6040000000000001,.6080000000000001,.6120000000000001,.6160000000000001,.6200000000000001,.6240000000000001,.6280000000000001,.6320000000000001,.6360000000000001,.6400000000000001,.6440000000000001,.6480000000000001,.6520000000000001,.6560000000000001,.6600000000000001,.6640000000000001,.6680000000000001,.6720000000000002,.6760000000000002,.6800000000000002,.6840000000000002,.6880000000000002,.6920000000000002,.6960000000000002,.7000000000000002,.7040000000000002,.7080000000000002,.7120000000000002,.7160000000000002,.7200000000000002,.7240000000000002,.7280000000000002,.7320000000000002,.7360000000000002,.7400000000000002,.7440000000000002,.7480000000000002,.7519999999999998,.7559999999999998,.7599999999999998,.7639999999999998,.7679999999999998,.7719999999999998,.7759999999999998,.7799999999999998,.7839999999999998,.7879999999999998,.7919999999999998,.7959999999999998,.7999999999999998,.8039999999999998,.8079999999999998,.8119999999999998,.8159999999999998,.8199999999999998,.8239999999999998,.8279999999999998,.8319999999999999,.8359999999999999,.8399999999999999,.8439999999999999,.8479999999999999,.8519999999999999,.8559999999999999,.8599999999999999,.8639999999999999,.8679999999999999,.8719999999999999,.8759999999999999,.8799999999999999,.8839999999999999,.8879999999999999,.8919999999999999,.8959999999999999,.8999999999999999,.9039999999999999,.9079999999999999,.9119999999999999,.9159999999999999,.9199999999999999,.9239999999999999,.9279999999999999,.9319999999999999,.9359999999999999,.94,.944,.948,.952,.956,.96,.964,.968,.972,.976,.98,.984,.988,.992,.996])},{name:"lemmbox HD sawtooth",expression:1,samples:h([0,.00390625,.0078125,.01171875,.015625,.01953125,.0234375,.02734375,.03125,.03515625,.0390625,.04296875,.046875,.05078125,.0546875,.05859375,.0625,.06640625,.0703125,.07421875,.078125,.08203125,.0859375,.08984375,.09375,.09765625,.1015625,.10546875,.109375,.11328125,.1171875,.12109375,.125,.12890625,.1328125,.13671875,.140625,.14453125,.1484375,.15234375,.15625,.16015625,.1640625,.16796875,.171875,.17578125,.1796875,.18359375,.1875,.19140625,.1953125,.19921875,.203125,.20703125,.2109375,.21484375,.21875,.22265625,.2265625,.23046875,.234375,.23828125,.2421875,.24609375,.25,.25390625,.2578125,.26171875,.265625,.26953125,.2734375,.27734375,.28125,.28515625,.2890625,.29296875,.296875,.30078125,.3046875,.30859375,.3125,.31640625,.3203125,.32421875,.328125,.33203125,.3359375,.33984375,.34375,.34765625,.3515625,.35546875,.359375,.36328125,.3671875,.37109375,.375,.37890625,.3828125,.38671875,.390625,.39453125,.3984375,.40234375,.40625,.41015625,.4140625,.41796875,.421875,.42578125,.4296875,.43359375,.4375,.44140625,.4453125,.44921875,.453125,.45703125,.4609375,.46484375,.46875,.47265625,.4765625,.48046875,.484375,.48828125,.4921875,.49609375,.5,.50390625,.5078125,.51171875,.515625,.51953125,.5234375,.52734375,.53125,.53515625,.5390625,.54296875,.546875,.55078125,.5546875,.55859375,.5625,.56640625,.5703125,.57421875,.578125,.58203125,.5859375,.58984375,.59375,.59765625,.6015625,.60546875,.609375,.61328125,.6171875,.62109375,.625,.62890625,.6328125,.63671875,.640625,.64453125,.6484375,.65234375,.65625,.66015625,.6640625,.66796875,.671875,.67578125,.6796875,.68359375,.6875,.69140625,.6953125,.69921875,.703125,.70703125,.7109375,.71484375,.71875,.72265625,.7265625,.73046875,.734375,.73828125,.7421875,.74609375,.75,.75390625,.7578125,.76171875,.765625,.76953125,.7734375,.77734375,.78125,.78515625,.7890625,.79296875,.796875,.80078125,.8046875,.80859375,.8125,.81640625,.8203125,.82421875,.828125,.83203125,.8359375,.83984375,.84375,.84765625,.8515625,.85546875,.859375,.86328125,.8671875,.87109375,.875,.87890625,.8828125,.88671875,.890625,.89453125,.8984375,.90234375,.90625,.91015625,.9140625,.91796875,.921875,.92578125,.9296875,.93359375,.9375,.94140625,.9453125,.94921875,.953125,.95703125,.9609375,.96484375,.96875,.97265625,.9765625,.98046875,.984375,.98828125,.9921875,.99609375,-1,-.99609375,-.9921875,-.98828125,-.984375,-.98046875,-.9765625,-.97265625,-.96875,-.96484375,-.9609375,-.95703125,-.953125,-.94921875,-.9453125,-.94140625,-.9375,-.93359375,-.9296875,-.92578125,-.921875,-.91796875,-.9140625,-.91015625,-.90625,-.90234375,-.8984375,-.89453125,-.890625,-.88671875,-.8828125,-.87890625,-.875,-.87109375,-.8671875,-.86328125,-.859375,-.85546875,-.8515625,-.84765625,-.84375,-.83984375,-.8359375,-.83203125,-.828125,-.82421875,-.8203125,-.81640625,-.8125,-.80859375,-.8046875,-.80078125,-.796875,-.79296875,-.7890625,-.78515625,-.78125,-.77734375,-.7734375,-.76953125,-.765625,-.76171875,-.7578125,-.75390625,-.75,-.74609375,-.7421875,-.73828125,-.734375,-.73046875,-.7265625,-.72265625,-.71875,-.71484375,-.7109375,-.70703125,-.703125,-.69921875,-.6953125,-.69140625,-.6875,-.68359375,-.6796875,-.67578125,-.671875,-.66796875,-.6640625,-.66015625,-.65625,-.65234375,-.6484375,-.64453125,-.640625,-.63671875,-.6328125,-.62890625,-.625,-.62109375,-.6171875,-.61328125,-.609375,-.60546875,-.6015625,-.59765625,-.59375,-.58984375,-.5859375,-.58203125,-.578125,-.57421875,-.5703125,-.56640625,-.5625,-.55859375,-.5546875,-.55078125,-.546875,-.54296875,-.5390625,-.53515625,-.53125,-.52734375,-.5234375,-.51953125,-.515625,-.51171875,-.5078125,-.50390625,-.5,-.49609375,-.4921875,-.48828125,-.484375,-.48046875,-.4765625,-.47265625,-.46875,-.46484375,-.4609375,-.45703125,-.453125,-.44921875,-.4453125,-.44140625,-.4375,-.43359375,-.4296875,-.42578125,-.421875,-.41796875,-.4140625,-.41015625,-.40625,-.40234375,-.3984375,-.39453125,-.390625,-.38671875,-.3828125,-.37890625,-.375,-.37109375,-.3671875,-.36328125,-.359375,-.35546875,-.3515625,-.34765625,-.34375,-.33984375,-.3359375,-.33203125,-.328125,-.32421875,-.3203125,-.31640625,-.3125,-.30859375,-.3046875,-.30078125,-.296875,-.29296875,-.2890625,-.28515625,-.28125,-.27734375,-.2734375,-.26953125,-.265625,-.26171875,-.2578125,-.25390625,-.25,-.24609375,-.2421875,-.23828125,-.234375,-.23046875,-.2265625,-.22265625,-.21875,-.21484375,-.2109375,-.20703125,-.203125,-.19921875,-.1953125,-.19140625,-.1875,-.18359375,-.1796875,-.17578125,-.171875,-.16796875,-.1640625,-.16015625,-.15625,-.15234375,-.1484375,-.14453125,-.140625,-.13671875,-.1328125,-.12890625,-.125,-.12109375,-.1171875,-.11328125,-.109375,-.10546875,-.1015625,-.09765625,-.09375,-.08984375,-.0859375,-.08203125,-.078125,-.07421875,-.0703125,-.06640625,-.0625,-.05859375,-.0546875,-.05078125,-.046875,-.04296875,-.0390625,-.03515625,-.03125,-.02734375,-.0234375,-.01953125,-.015625,-.01171875,-.0078125,-.00390625])},{name:"lemmbox HD rounded",expression:1,samples:h([0,.01,.02,.04,.05,.06,.07,.09,.1,.11,.12,.13,.15,.16,.17,.18,.2,.21,.22,.23,.24,.25,.27,.28,.29,.3,.31,.33,.34,.35,.36,.37,.38,.39,.41,.42,.43,.44,.45,.46,.47,.48,.49,.5,.51,.52,.53,.55,.56,.57,.58,.59,.6,.61,.62,.62,.63,.64,.65,.66,.67,.68,.69,.7,.71,.72,.72,.73,.74,.75,.76,.77,.77,.78,.79,.8,.8,.81,.82,.82,.83,.84,.84,.85,.86,.86,.87,.88,.88,.89,.89,.9,.9,.91,.91,.92,.92,.93,.93,.94,.94,.95,.95,.95,.96,.96,.96,.97,.97,.97,.98,.98,.98,.98,.99,.99,.99,.99,.99,.99,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99,.99,.99,.99,.99,.99,.98,.98,.98,.98,.97,.97,.97,.96,.96,.96,.95,.95,.95,.94,.94,.93,.93,.92,.92,.91,.91,.9,.9,.89,.89,.88,.88,.87,.86,.86,.85,.84,.84,.83,.82,.82,.81,.8,.8,.79,.78,.77,.77,.76,.75,.74,.73,.72,.72,.71,.7,.69,.68,.67,.66,.65,.64,.63,.62,.62,.61,.6,.59,.58,.57,.56,.55,.53,.52,.51,.5,.49,.48,.47,.46,.45,.44,.43,.42,.41,.39,.38,.37,.36,.35,.34,.33,.31,.3,.29,.28,.27,.25,.24,.23,.22,.21,.2,.18,.17,.16,.15,.13,.12,.11,.1,.09,.07,.06,.05,.04,.02,.01,0,-.01,-.02,-.04,-.05,-.06,-.07,-.09,-.1,-.11,-.12,-.13,-.15,-.16,-.17,-.18,-.2,-.21,-.22,-.23,-.24,-.25,-.27,-.28,-.29,-.3,-.31,-.33,-.34,-.35,-.36,-.37,-.38,-.39,-.41,-.42,-.43,-.44,-.45,-.46,-.47,-.48,-.49,-.5,-.51,-.52,-.53,-.55,-.56,-.57,-.58,-.59,-.6,-.61,-.62,-.62,-.63,-.64,-.65,-.66,-.67,-.68,-.69,-.7,-.71,-.72,-.72,-.73,-.74,-.75,-.76,-.77,-.77,-.78,-.79,-.8,-.8,-.81,-.82,-.82,-.83,-.84,-.84,-.85,-.86,-.86,-.87,-.88,-.88,-.89,-.89,-.9,-.9,-.91,-.91,-.92,-.92,-.93,-.93,-.94,-.94,-.95,-.95,-.95,-.96,-.96,-.96,-.97,-.97,-.97,-.98,-.98,-.98,-.98,-.99,-.99,-.99,-.99,-.99,-.99,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.99,-.99,-.99,-.99,-.99,-.99,-.98,-.98,-.98,-.98,-.97,-.97,-.97,-.96,-.96,-.96,-.95,-.95,-.95,-.94,-.94,-.93,-.93,-.92,-.92,-.91,-.91,-.9,-.9,-.89,-.89,-.88,-.88,-.87,-.86,-.86,-.85,-.84,-.84,-.83,-.82,-.82,-.81,-.8,-.8,-.79,-.78,-.77,-.77,-.76,-.75,-.74,-.73,-.72,-.72,-.71,-.7,-.69,-.68,-.67,-.66,-.65,-.64,-.63,-.62,-.62,-.61,-.6,-.59,-.58,-.57,-.56,-.55,-.53,-.52,-.51,-.5,-.49,-.48,-.47,-.46,-.45,-.44,-.43,-.42,-.41,-.39,-.38,-.37,-.36,-.35,-.34,-.33,-.31,-.3,-.29,-.28,-.27,-.25,-.24,-.23,-.22,-.21,-.2,-.18,-.17,-.16,-.15,-.13,-.12,-.11,-.1,-.09,-.07,-.06,-.05,-.04,-.02,-.01])},{name:"lemmbox trapasquare",expression:1,samples:h([0,.012271538285719925,.024541228522912288,.03680722294135883,.049067674327418015,.06132073630220858,.07356456359966743,.0857973123444399,.0980171403295606,.11022220729388306,.1224106751992162,.13458070850712617,.14673047445536175,.15885814333386145,.17096188876030122,.18303988795514095,.19509032201612825,.20711137619221856,.2191012401568698,.2310581082806711,.24298017990326387,.25486565960451457,.26671275747489837,.27851968938505306,.29028467725446233,.3020059493192281,.3136817403988915,.3253102921622629,.33688985339222005,.34841868024943456,.3598950365349881,.3713171939518375,.3826834323650898,.3939920400610481,.40524131400498986,.41642956009763715,.4275550934302821,.43861623853852766,.44961132965460654,.46053871095824,.47139673682599764,.4821837720791227,.49289819222978404,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.49289819222978415,.4821837720791229,.47139673682599786,.4605387109582402,.4496113296546069,.43861623853852755,.42755509343028203,.41642956009763715,.4052413140049899,.39399204006104815,.3826834323650899,.3713171939518377,.35989503653498833,.3484186802494348,.33688985339222033,.32531029216226326,.3136817403988914,.30200594931922803,.2902846772544624,.27851968938505317,.2667127574748985,.2548656596045147,.24298017990326407,.23105810828067133,.21910124015687005,.20711137619221884,.1950903220161286,.1830398879551409,.17096188876030122,.15885814333386147,.1467304744553618,.13458070850712628,.12241067519921635,.11022220729388324,.09801714032956083,.08579731234444016,.07356456359966773,.06132073630220849,.049067674327417966,.03680722294135883,.024541228522912326,.012271538285720007,12246467991473532e-32,-.012271538285719762,-.02454122852291208,-.03680722294135858,-.049067674327417724,-.061320736302208245,-.0735645635996675,-.08579731234443992,-.09801714032956059,-.110222207293883,-.1224106751992161,-.13458070850712606,-.14673047445536158,-.15885814333386122,-.17096188876030097,-.18303988795514065,-.19509032201612836,-.2071113761922186,-.2191012401568698,-.23105810828067108,-.24298017990326382,-.25486565960451446,-.26671275747489825,-.2785196893850529,-.2902846772544621,-.3020059493192278,-.3136817403988912,-.325310292162263,-.33688985339222005,-.34841868024943456,-.3598950365349881,-.37131719395183743,-.38268343236508967,-.39399204006104793,-.4052413140049897,-.41642956009763693,-.4275550934302818,-.4386162385385273,-.44961132965460665,-.46053871095824006,-.47139673682599764,-.48218377207912266,-.4928981922297839,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.49289819222978426,-.4821837720791226,-.4713967368259979,-.46053871095823995,-.449611329654607,-.43861623853852766,-.42755509343028253,-.41642956009763726,-.4052413140049904,-.39399204006104827,-.3826834323650904,-.3713171939518378,-.359895036534988,-.3484186802494349,-.33688985339222,-.32531029216226337,-.3136817403988915,-.3020059493192286,-.2902846772544625,-.27851968938505367,-.2667127574748986,-.2548656596045144,-.24298017990326418,-.231058108280671,-.21910124015687016,-.20711137619221853,-.19509032201612872,-.183039887955141,-.17096188876030177,-.15885814333386158,-.1467304744553624,-.13458070850712642,-.12241067519921603,-.11022220729388336,-.0980171403295605,-.08579731234444028,-.07356456359966741,-.06132073630220906,-.04906767432741809,-.036807222941359394,-.024541228522912448,-.012271538285720572])}]),c.chipWaves=function(e){const t=new Array(e.length),n={};for(let i=0;i<t.length;i++){t[i]=Object.assign([],e[i]);const a=t[i];a.index=i,n[a.name]=a}for(let e in n)n[e].samples=d(n[e].samples);const i=t;return i.dictionary=n,i}(t.rawChipWaves),c.rawRawChipWaves=t.rawChipWaves,c.firstIndexForSamplesInChipWaveList=t.chipWaves.length,c.chipNoises=S([{name:"retro",expression:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",expression:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",expression:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",expression:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",expression:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",expression:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",expression:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"static",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit white",expression:.5,basePitch:74.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit metallic",expression:.5,basePitch:86.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"crackling",expression:.9,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"pink",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"brownian",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null}]),c.filterFreqStep=1/4,c.filterFreqRange=34,c.filterFreqReferenceSetting=28,c.filterFreqReferenceHz=8e3,c.filterFreqMaxHz=t.filterFreqReferenceHz*Math.pow(2,t.filterFreqStep*(t.filterFreqRange-1-t.filterFreqReferenceSetting)),c.filterFreqMinHz=8,c.filterGainRange=15,c.filterGainCenter=7,c.filterGainStep=.5,c.filterMaxPoints=12,c.filterTypeNames=["low-pass","high-pass","peak"],c.filterMorphCount=10,c.filterSimpleCutRange=11,c.filterSimplePeakRange=8,c.fadeInRange=10,c.fadeOutTicks=[-24,-12,-6,-3,-1,6,12,24,48,72,96],c.fadeOutNeutral=4,c.drumsetFadeOutTicks=48,c.transitions=S([{name:"normal",isSeamless:!1,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!1},{name:"interrupt",isSeamless:!0,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"continue",isSeamless:!0,continues:!0,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide in pattern",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!1}]),c.vibratos=S([{name:"none",amplitude:0,type:0,delayTicks:0},{name:"light",amplitude:.15,type:0,delayTicks:0},{name:"delayed",amplitude:.3,type:0,delayTicks:37},{name:"heavy",amplitude:.45,type:0,delayTicks:0},{name:"shaky",amplitude:.1,type:1,delayTicks:0}]),c.vibratoTypes=S([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,.17798,.33],period:266.97}]),c.arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8],c.unisons=S([{name:"none",voices:1,spread:0,offset:0,expression:1.4,sign:1},{name:"shimmer",voices:2,spread:.018,offset:0,expression:.8,sign:1},{name:"hum",voices:2,spread:.045,offset:0,expression:1,sign:1},{name:"honky tonk",voices:2,spread:.09,offset:0,expression:1,sign:1},{name:"dissonant",voices:2,spread:.25,offset:0,expression:.9,sign:1},{name:"piano",voices:2,spread:.01,offset:0,expression:1,sign:.7},{name:"spinner",voices:2,spread:.02,offset:0,expression:1,sign:1},{name:"recurve",voices:2,spread:.005,offset:0,expression:1,sign:1},{name:"vary",voices:2,spread:.002,offset:0,expression:.85,sign:1.6},{name:"bowed",voices:2,spread:.02,offset:0,expression:1,sign:-1},{name:"hold",voices:2,spread:.003,offset:0,expression:.8,sign:-2.5},{name:"chorus",voices:9,spread:.22,offset:0,expression:.15,sign:1},{name:"bow",voices:9,spread:.006,offset:0,expression:.15,sign:.5},{name:"octave",voices:2,spread:6,offset:6,expression:.8,sign:1},{name:"double octave",voices:3,spread:12,offset:0,expression:.63,sign:1},{name:"triple octave",voices:4,spread:18,offset:6,expression:.5,sign:1},{name:"weird octave",voices:2,spread:5.85,offset:5.85,expression:.75,sign:1},{name:"fluctuate",voices:2,spread:12,offset:0,expression:1,sign:1},{name:"fifth",voices:2,spread:3.5,offset:3.5,expression:.9,sign:1},{name:"alternate fifth",voices:2,spread:2.5,offset:-2.5,expression:.9,sign:1},{name:"lone fifth",voices:1,spread:0,offset:7,expression:1.4,sign:1},{name:"fourth",voices:2,spread:4,offset:4,expression:.95,sign:1},{name:"warbled",voices:2,spread:.25,offset:.05,expression:.9,sign:-.8},{name:"hecking gosh",voices:2,spread:6.25,offset:-6,expression:.8,sign:-.7},{name:"detune",voices:1,spread:0,offset:.25,expression:1,sign:1},{name:"rising",voices:2,spread:1,offset:.7,expression:.95,sign:1},{name:"vibrate",voices:2,spread:3.5,offset:7,expression:.975,sign:1},{name:"bass",voices:1,spread:0,offset:-7,expression:1,sign:1},{name:"dirty",voices:2,spread:0,offset:.1,expression:.975,sign:1},{name:"stationary",voices:2,spread:3.5,offset:0,expression:.9,sign:1},{name:"voiced",voices:2,spread:9.5,offset:0,expression:1,sign:1},{name:"inject",voices:2,spread:6,offset:.4,expression:1,sign:1},{name:"askewed",voices:2,spread:0,offset:.42,expression:.7,sign:1},{name:"resonance",voices:2,spread:.0025,offset:.1,expression:.8,sign:-1.5},{name:"augmented",voices:4,spread:6,offset:6,expression:.5,sign:1},{name:"diminished",voices:5,spread:6,offset:6,expression:.4,sign:1},{name:"block",voices:9,spread:6,offset:6,expression:.15,sign:.8},{name:"extraterrestrial",voices:6,spread:15.2,offset:-6,expression:.35,sign:.7},{name:"hyper",voices:2,spread:.03,offset:-.02,expression:.85,sign:.7},{name:"broke",voices:2,spread:0,offset:-.3,expression:.8,sign:1},{name:"energetic",voices:2,spread:6.15,offset:6.435,expression:.85,sign:.9},{name:"bent",voices:2,spread:9.5,offset:4.5,expression:.8,sign:-.6},{name:"offtune",voices:2,spread:.4,offset:.4,expression:.9,sign:1},{name:"peak",voices:2,spread:12.038,offset:12.01,expression:.85,sign:.9},{name:"deep shift",voices:2,spread:12.03,offset:-17.01,expression:.85,sign:1.2},{name:"buried",voices:2,spread:.036,offset:-36,expression:1.4,sign:1},{name:"corrupt",voices:2,spread:18,offset:48,expression:.7,sign:.7},{name:"thin",voices:1,spread:0,offset:50,expression:1,sign:1},{name:"FART",voices:2,spread:13,offset:-5,expression:1,sign:-3}]),c.effectNames=["reverb","chorus","panning","distortion","bitcrusher","note filter","echo","pitch shift","detune","vibrato","transition type","chord type","","ring mod","granular"],c.effectOrder=[2,10,11,7,8,9,5,14,3,4,1,6,0,13],c.noteSizeMax=6,c.volumeRange=50,c.volumeLogScale=.1428,c.panCenter=50,c.panMax=2*t.panCenter,c.panDelaySecondsMax=.001,c.ringModRange=8,c.ringModHzRange=64,c.ringModMinHz=20,c.ringModMaxHz=4400,c.rmHzOffsetCenter=200,c.rmHzOffsetMax=400,c.rmHzOffsetMin=0,c.granularRange=10,c.grainSizeMin=40,c.grainSizeMax=2e3,c.grainSizeStep=40,c.grainRangeMax=1600,c.grainAmountsMax=10,c.granularEnvelopeType=0,c.chorusRange=8,c.chorusPeriodSeconds=2,c.chorusDelayRange=.0034,c.chorusDelayOffsets=[[1.51,2.1,3.35],[1.47,2.15,3.25]],c.chorusPhaseOffsets=[[0,2.1,4.2],[3.2,5.3,1]],c.chorusMaxDelay=t.chorusDelayRange*(1+t.chorusDelayOffsets[0].concat(t.chorusDelayOffsets[1]).reduce(((e,t)=>Math.max(e,t)))),c.chords=S([{name:"simultaneous",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!1},{name:"strum",customInterval:!1,arpeggiates:!1,strumParts:1,singleTone:!1},{name:"arpeggio",customInterval:!1,arpeggiates:!0,strumParts:0,singleTone:!0},{name:"custom interval",customInterval:!0,arpeggiates:!1,strumParts:0,singleTone:!0},{name:"monophonic",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!0}]),c.maxChordSize=9,c.operatorCount=4,c.maxPitchOrOperatorCount=Math.max(t.maxChordSize,t.operatorCount+2),c.algorithms=S([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]},{name:"1←(2 3) 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[2,3],[4],[],[]]},{name:"1←(2 (3 (4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[2,3,4],[3,4],[4],[]]}]),c.algorithms6Op=S([{name:"Custom",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←2←3←4←5←6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2],[3],[4],[5],[6],[]]},{name:"1←3 2←4←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5],[6],[]]},{name:"1←3←4 2←5←6",carrierCount:2,associatedCarrier:[1,1,1,2,2,2],modulatedBy:[[3],[5],[4],[],[6],[]]},{name:"1←4 2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[5],[6],[],[],[]]},{name:"1←3 2←(4 5←6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[],[6],[]]},{name:"1←(3 4) 2←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[5],[],[],[6],[]]},{name:"1←3 2←(4 5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5,6],[],[],[],[]]},{name:"1←3 2←(4 5)←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[6],[6],[]]},{name:"1←3 2←4←(5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5,6],[],[]]},{name:"1←(2 3 4 5 6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←(2 3←5 4←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[5],[6],[],[]]},{name:"1←(2 3 4←5←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[],[5],[6],[]]},{name:"1←4←5 (2 3)←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[6],[6],[5],[],[]]},{name:"1←(3 4)←5 2←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[6],[5],[5],[],[]]},{name:"(1 2)←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[4],[5,6],[],[],[]]},{name:"(1 2)←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[5],[6],[6],[],[]]},{name:"(1 2 3)←(4 5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4,5,6],[4,5,6],[4,5,6],[],[],[]]},{name:"1←5 (2 3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[6],[6],[6],[],[]]},{name:"1 2←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[6],[6],[],[]]},{name:"1 2 (3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[6],[6],[6],[]]},{name:"1 2 3 (4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[6],[6],[]]},{name:"1 2←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[],[4],[5,6],[],[],[]]},{name:"1←4 2←(5 6) 3",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[4],[5,6],[],[],[],[]]},{name:"1 2 3←5 4←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5],[6],[],[]]},{name:"1 (2 3)←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[5],[],[6],[]]},{name:"1 2 3←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5,6],[],[],[]]},{name:"(1 2 3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[6],[6],[6],[6],[6],[]]},{name:"1 2 3 4 5←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[],[6],[]]},{name:"1 2 3 4 5 6",carrierCount:6,associatedCarrier:[1,2,3,4,5,6],modulatedBy:[[],[],[],[],[],[]]},{name:"1←(2 (3 (4 (5 (6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←(2(3(4(5(6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←4(2←5(3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[3,5],[6],[],[],[]]},{name:"1←4(2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[5],[6],[],[],[]]}]),c.operatorCarrierInterval=[0,.04,-.073,.091,.061,.024],c.operatorAmplitudeMax=15,c.operatorFrequencies=S([{name:"0.12×",mult:.125,hzOffset:0,amplitudeSign:1},{name:"0.25×",mult:.25,hzOffset:0,amplitudeSign:1},{name:"0.5×",mult:.5,hzOffset:0,amplitudeSign:1},{name:"0.75×",mult:.75,hzOffset:0,amplitudeSign:1},{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"3.5×",mult:3.5,hzOffset:-.05,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"~4×",mult:4,hzOffset:-2.4,amplitudeSign:-1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"10×",mult:10,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"12×",mult:12,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"14×",mult:14,hzOffset:0,amplitudeSign:1},{name:"15×",mult:15,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"17×",mult:17,hzOffset:0,amplitudeSign:1},{name:"18×",mult:18,hzOffset:0,amplitudeSign:1},{name:"19×",mult:19,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1},{name:"~20×",mult:20,hzOffset:-5,amplitudeSign:-1},{name:"25×",mult:25,hzOffset:0,amplitudeSign:1},{name:"50×",mult:50,hzOffset:0,amplitudeSign:1},{name:"75×",mult:75,hzOffset:0,amplitudeSign:1},{name:"100×",mult:100,hzOffset:0,amplitudeSign:1},{name:"128×",mult:128,hzOffset:0,amplitudeSign:1},{name:"256×",mult:250,hzOffset:0,amplitudeSign:1}]),c.envelopes=S([{name:"none",type:0,speed:1},{name:"note size",type:1,speed:1},{name:"pitch",type:2,speed:1},{name:"punch",type:4,speed:1},{name:"flare -1",type:5,speed:128},{name:"flare 1",type:5,speed:32},{name:"flare 2",type:5,speed:8},{name:"flare 3",type:5,speed:2},{name:"twang -1",type:6,speed:128},{name:"twang 1",type:6,speed:32},{name:"twang 2",type:6,speed:8},{name:"twang 3",type:6,speed:2},{name:"swell -1",type:7,speed:128},{name:"swell 1",type:7,speed:32},{name:"swell 2",type:7,speed:8},{name:"swell 3",type:7,speed:2},{name:"tremolo0",type:8,speed:8},{name:"tremolo1",type:8,speed:4},{name:"tremolo2",type:8,speed:2},{name:"tremolo3",type:8,speed:1},{name:"tremolo4",type:9,speed:4},{name:"tremolo5",type:9,speed:2},{name:"tremolo6",type:9,speed:1},{name:"decay -1",type:10,speed:40},{name:"decay 1",type:10,speed:10},{name:"decay 2",type:10,speed:7},{name:"decay 3",type:10,speed:4},{name:"wibble-1",type:11,speed:128},{name:"wibble 1",type:11,speed:24},{name:"wibble 2",type:11,speed:12},{name:"wibble 3",type:11,speed:4},{name:"linear-2",type:12,speed:256},{name:"linear-1",type:12,speed:128},{name:"linear 1",type:12,speed:32},{name:"linear 2",type:12,speed:8},{name:"linear 3",type:12,speed:2},{name:"rise -2",type:13,speed:256},{name:"rise -1",type:13,speed:128},{name:"rise 1",type:13,speed:32},{name:"rise 2",type:13,speed:8},{name:"rise 3",type:13,speed:2},{name:"flute 1",type:11,speed:16},{name:"flute 2",type:11,speed:8},{name:"flute 3",type:11,speed:4},{name:"tripolo1",type:8,speed:9},{name:"tripolo2",type:8,speed:6},{name:"tripolo3",type:8,speed:3},{name:"tripolo4",type:9,speed:9},{name:"tripolo5",type:9,speed:6},{name:"tripolo6",type:9,speed:3},{name:"pentolo1",type:8,speed:10},{name:"pentolo2",type:8,speed:5},{name:"pentolo3",type:8,speed:2.5},{name:"pentolo4",type:9,speed:10},{name:"pentolo5",type:9,speed:5},{name:"pentolo6",type:9,speed:2.5},{name:"flutter 1",type:8,speed:14},{name:"flutter 2",type:9,speed:11},{name:"water-y flutter",type:8,speed:9},{name:"blip 1",type:14,speed:6},{name:"blip 2",type:14,speed:16},{name:"blip 3",type:14,speed:32},{name:"fall 1",type:15,speed:8},{name:"fall 2",type:15,speed:4},{name:"fall 3",type:15,speed:2}]),c.newEnvelopes=S([{name:"none",type:0,speed:1},{name:"note size",type:1,speed:1},{name:"pitch",type:2,speed:1},{name:"random",type:3,speed:4},{name:"punch",type:4,speed:1},{name:"flare",type:5,speed:32},{name:"twang",type:6,speed:32},{name:"swell",type:7,speed:32},{name:"lfo",type:8,speed:4},{name:"decay",type:10,speed:10},{name:"wibble",type:11,speed:24},{name:"linear",type:12,speed:32},{name:"rise",type:13,speed:32},{name:"blip",type:14,speed:6},{name:"fall",type:15,speed:2}]),c.feedbacks=S([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]},{name:"1↔2 3↔4",indices:[[2],[1],[4],[3]]},{name:"1↔4 2↔3",indices:[[4],[3],[2],[1]]},{name:"2→1→4→3→2",indices:[[2],[3],[4],[1]]},{name:"1→2→3→4→1",indices:[[4],[1],[2],[3]]},{name:"(1 2 3)→4",indices:[[],[],[],[1,2,3]]},{name:"ALL",indices:[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}]),c.feedbacks6Op=S([{name:"Custom",indices:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1⟲",indices:[[1],[],[],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[],[],[]]},{name:"3⟲",indices:[[],[],[3],[],[],[]]},{name:"4⟲",indices:[[],[],[],[4],[],[]]},{name:"5⟲",indices:[[],[],[],[],[5],[]]},{name:"6⟲",indices:[[],[],[],[],[],[6]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[],[],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲",indices:[[1],[2],[3],[4],[5],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲",indices:[[1],[2],[3],[4],[5],[6]]},{name:"1→2",indices:[[],[1],[],[],[],[]]},{name:"1→3",indices:[[],[],[1],[],[],[]]},{name:"1→4",indices:[[],[],[],[1],[],[]]},{name:"1→5",indices:[[],[],[],[],[1],[]]},{name:"1→6",indices:[[],[],[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[],[],[]]},{name:"2→4",indices:[[],[],[],[2],[],[]]},{name:"3→4",indices:[[],[],[],[3],[],[]]},{name:"4→5",indices:[[],[],[],[],[4],[]]},{name:"1→4 2→5 3→6",indices:[[],[],[],[1],[2],[3]]},{name:"1→5 2→6 3→4",indices:[[],[],[],[3],[1],[2]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"2→1→6→5→4→3→2",indices:[[2],[3],[4],[5],[6],[1]]},{name:"1→2→3→4→5→6→1",indices:[[6],[1],[2],[3],[4],[5]]},{name:"1↔2 3↔4 5↔6",indices:[[2],[1],[4],[3],[6],[5]]},{name:"1↔4 2↔5 3↔6",indices:[[4],[5],[6],[1],[2],[3]]},{name:"(1,2,3,4,5)→6",indices:[[],[],[],[],[],[1,2,3,4,5]]},{name:"ALL",indices:[[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6]]}]),c.chipNoiseLength=32768,c.spectrumNoiseLength=32768,c.spectrumBasePitch=24,c.spectrumControlPoints=30,c.spectrumControlPointsPerOctave=7,c.spectrumControlPointBits=3,c.spectrumMax=(1<<t.spectrumControlPointBits)-1,c.harmonicsControlPoints=28,c.harmonicsRendered=64,c.harmonicsRenderedForPickedString=256,c.harmonicsControlPointBits=3,c.harmonicsMax=(1<<t.harmonicsControlPointBits)-1,c.harmonicsWavelength=2048,c.pulseWidthRange=50,c.pulseWidthStepPower=.5,c.supersawVoiceCount=7,c.supersawDynamismMax=6,c.supersawSpreadMax=12,c.supersawShapeMax=6,c.pitchChannelCountMin=1,c.pitchChannelCountMax=60,c.noiseChannelCountMin=0,c.noiseChannelCountMax=60,c.modChannelCountMin=0,c.modChannelCountMax=60,c.noiseInterval=6,c.pitchesPerOctave=12,c.drumCount=12,c.pitchOctaves=8,c.modCount=6,c.maxPitch=t.pitchOctaves*t.pitchesPerOctave,c.maximumTonesPerChannel=2*t.maxChordSize,c.justIntonationSemitones=[.5,8/15,9/16,.6,5/8,2/3,32/45,3/4,.8,5/6,8/9,15/16,1,16/15,9/8,1.2,5/4,4/3,45/32,1.5,1.6,5/3,16/9,15/8,2].map((e=>Math.log2(e)*t.pitchesPerOctave)),c.pitchShiftRange=t.justIntonationSemitones.length,c.pitchShiftCenter=t.pitchShiftRange>>1,c.detuneCenter=200,c.detuneMax=400,c.detuneMin=0,c.songDetuneMin=0,c.songDetuneMax=500,c.unisonVoicesMin=1,c.unisonVoicesMax=9,c.unisonSpreadMin=-96,c.unisonSpreadMax=96,c.unisonOffsetMin=-96,c.unisonOffsetMax=96,c.unisonExpressionMin=-2,c.unisonExpressionMax=2,c.unisonSignMin=-2,c.unisonSignMax=2,c.sineWaveLength=256,c.sineWaveMask=t.sineWaveLength-1,c.sineWave=t.generateSineWave(),c.perEnvelopeSpeedIndices=[0,.01,.02,.03,.04,.05,.06,.07,.08,.09,.1,.2,.25,.3,.3333,.4,.5,.6,.6667,.7,.75,.8,.9,1,1.25,1.3333,1.5,1.6667,1.75,2,2.25,2.5,2.75,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,11,12,13,14,15,16,17,18,19,20,24,32,40,64,128,256],c.perEnvelopeSpeedToIndices={0:0,.01:1,.02:2,.03:3,.04:4,.05:5,.06:6,.07:7,.08:8,.09:9,.1:10,.2:11,.25:12,.3:13,.3333:14,.4:15,.5:16,.6:17,.6667:18,.7:19,.75:20,.8:21,.9:22,1:23,1.25:24,1.3333:25,1.5:26,1.6667:27,1.75:28,2:29,2.25:30,2.5:31,2.75:32,3:33,3.5:34,4:35,4.5:36,5:37,5.5:38,6:39,6.5:40,7:41,7.5:42,8:43,8.5:44,9:45,9.5:46,10:47,11:48,12:49,13:50,14:51,15:52,16:53,17:54,18:55,19:56,20:57,24:58,32:59,40:60,64:61,128:62,256:63},c.perEnvelopeBoundMin=0,c.perEnvelopeBoundMax=2,c.randomEnvelopeSeedMax=63,c.randomEnvelopeStepsMax=32,c.pickedStringDispersionCenterFreq=6e3,c.pickedStringDispersionFreqScale=.3,c.pickedStringDispersionFreqMult=4,c.pickedStringShelfHz=4e3,c.distortionRange=8,c.stringSustainRange=15,c.stringDecayRate=.12,c.enableAcousticSustain=!1,c.sustainTypeNames=["bright","acoustic"],c.bitcrusherFreqRange=14,c.bitcrusherOctaveStep=.5,c.bitcrusherQuantizationRange=8,c.maxEnvelopeCount=16,c.defaultAutomationRange=13,c.instrumentAutomationTargets=S([{name:"none",computeIndex:null,displayName:"none",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"noteVolume",computeIndex:0,displayName:"note volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"pulseWidth",computeIndex:2,displayName:"pulse width",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6,8]},{name:"stringSustain",computeIndex:3,displayName:"sustain",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[7]},{name:"unison",computeIndex:4,displayName:"unison",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[0,5,7,9,6,2,3,4]},{name:"operatorFrequency",computeIndex:5,displayName:"fm# freq",interleave:!0,isFilter:!1,maxCount:t.operatorCount+2,effect:null,compatibleInstruments:[1,11]},{name:"operatorAmplitude",computeIndex:11,displayName:"fm# volume",interleave:!1,isFilter:!1,maxCount:t.operatorCount+2,effect:null,compatibleInstruments:[1,11]},{name:"feedbackAmplitude",computeIndex:17,displayName:"fm feedback",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[1,11]},{name:"pitchShift",computeIndex:18,displayName:"pitch shift",interleave:!1,isFilter:!1,maxCount:1,effect:7,compatibleInstruments:null},{name:"detune",computeIndex:19,displayName:"detune",interleave:!1,isFilter:!1,maxCount:1,effect:8,compatibleInstruments:null},{name:"vibratoDepth",computeIndex:20,displayName:"vibrato depth",interleave:!1,isFilter:!1,maxCount:1,effect:9,compatibleInstruments:null},{name:"noteFilterAllFreqs",computeIndex:1,displayName:"n. filter freqs",interleave:!1,isFilter:!0,maxCount:1,effect:5,compatibleInstruments:null},{name:"noteFilterFreq",computeIndex:21,displayName:"n. filter # freq",interleave:!1,isFilter:!0,maxCount:t.filterMaxPoints,effect:5,compatibleInstruments:null},{name:"decimalOffset",computeIndex:37,displayName:"decimal offset",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6,8]},{name:"supersawDynamism",computeIndex:38,displayName:"dynamism",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"supersawSpread",computeIndex:39,displayName:"spread",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"supersawShape",computeIndex:40,displayName:"saw↔pulse",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"panning",computeIndex:41,displayName:"panning",interleave:!1,isFilter:!1,maxCount:1,effect:2,compatibleInstruments:null},{name:"distortion",computeIndex:42,displayName:"distortion",interleave:!1,isFilter:!1,maxCount:1,effect:3,compatibleInstruments:null},{name:"bitcrusherQuantization",computeIndex:43,displayName:"bitcrush",interleave:!1,isFilter:!1,maxCount:1,effect:4,compatibleInstruments:null},{name:"bitcrusherFrequency",computeIndex:44,displayName:"freq crush",interleave:!1,isFilter:!1,maxCount:1,effect:4,compatibleInstruments:null},{name:"chorus",computeIndex:45,displayName:"chorus",interleave:!1,isFilter:!1,maxCount:1,effect:1,compatibleInstruments:null},{name:"echoSustain",computeIndex:46,displayName:"echo",interleave:!1,isFilter:!1,maxCount:1,effect:6,compatibleInstruments:null},{name:"reverb",computeIndex:47,displayName:"reverb",interleave:!1,isFilter:!1,maxCount:1,effect:0,compatibleInstruments:null},{name:"arpeggioSpeed",computeIndex:48,displayName:"arpeggio speed",interleave:!1,isFilter:!1,maxCount:1,effect:11,compatibleInstruments:null},{name:"ringModulation",computeIndex:49,displayName:"ring mod",interleave:!1,isFilter:!1,maxCount:1,effect:13,compatibleInstruments:null},{name:"ringModulationHz",computeIndex:50,displayName:"ring mod hz",interleave:!1,isFilter:!1,maxCount:1,effect:13,compatibleInstruments:null},{name:"granular",computeIndex:51,displayName:"granular",interleave:!1,isFilter:!1,maxCount:1,effect:14,compatibleInstruments:null},{name:"grainFreq",computeIndex:52,displayName:"grain freq",interleave:!1,isFilter:!1,maxCount:1,effect:14,compatibleInstruments:null},{name:"grainSize",computeIndex:53,displayName:"grain size",interleave:!1,isFilter:!1,maxCount:1,effect:14,compatibleInstruments:null},{name:"grainRange",computeIndex:54,displayName:"grain range",interleave:!1,isFilter:!1,maxCount:1,effect:14,compatibleInstruments:null},{name:"echoDelay",computeIndex:55,displayName:"echo delay",interleave:!1,isFilter:!1,maxCount:1,effect:6,compatibleInstruments:null}]),c.operatorWaves=S([{name:"sine",samples:t.sineWave},{name:"triangle",samples:t.generateTriWave()},{name:"pulse width",samples:t.generateSquareWave(.5)},{name:"sawtooth",samples:t.generateSawWave()},{name:"ramp",samples:t.generateSawWave(!0)},{name:"trapezoid",samples:t.generateTrapezoidWave(2)},{name:"quasi-sine",samples:t.generateQuasiSineWave()}]),c.pwmOperatorWaves=S([{name:"1%",samples:t.generateSquareWave(.01)},{name:"5%",samples:t.generateSquareWave(.05)},{name:"12.5%",samples:t.generateSquareWave(.125)},{name:"25%",samples:t.generateSquareWave(.25)},{name:"33%",samples:t.generateSquareWave(1/3)},{name:"50%",samples:t.generateSquareWave(.5)},{name:"66%",samples:t.generateSquareWave(2/3)},{name:"75%",samples:t.generateSquareWave(.75)},{name:"87.5%",samples:t.generateSquareWave(.875)},{name:"95%",samples:t.generateSquareWave(.95)},{name:"99%",samples:t.generateSquareWave(.99)}]),c.barEditorHeight=10,c.modulators=S([{name:"none",pianoName:"None",maxRawVol:6,newNoteVol:6,forSong:!0,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"No Mod Setting",promptDesc:["No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.","[$LO - $HI]"]},{name:"song volume",pianoName:"Volume",maxRawVol:100,newNoteVol:100,forSong:!0,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Song Volume",promptDesc:["This setting affects the overall volume of the song, just like the main volume slider.","At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"tempo",pianoName:"Tempo",maxRawVol:t.tempoMax-t.tempoMin,newNoteVol:Math.ceil((t.tempoMax-t.tempoMin)/2),forSong:!0,convertRealFactor:t.tempoMin,associatedEffect:15,maxIndex:0,promptName:"Song Tempo",promptDesc:["This setting controls the speed your song plays at, just like the tempo slider.","When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.","Note that you can make a 'swing' effect by rapidly changing between two tempo values.","[OVERWRITING] [$LO - $HI] [BPM]"]},{name:"song reverb",pianoName:"Reverb",maxRawVol:2*t.reverbRange,newNoteVol:t.reverbRange,forSong:!0,convertRealFactor:-t.reverbRange,associatedEffect:15,maxIndex:0,promptName:"Song Reverb",promptDesc:["This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.","At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"next bar",pianoName:"Next Bar",maxRawVol:1,newNoteVol:1,forSong:!0,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Go To Next Bar",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.","This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.","You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.","[$LO - $HI]"]},{name:"note volume",pianoName:"Note Vol.",maxRawVol:t.volumeRange,newNoteVol:Math.ceil(t.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-t.volumeRange/2),associatedEffect:15,maxIndex:0,promptName:"Note Volume",promptDesc:["This setting affects the volume of your instrument as if its note size had been scaled.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.","This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.","For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"pan",pianoName:"Pan",maxRawVol:t.panMax,newNoteVol:Math.ceil(t.panMax/2),forSong:!1,convertRealFactor:0,associatedEffect:2,maxIndex:0,promptName:"Instrument Panning",promptDesc:["This setting controls the panning of your instrument, just like the panning slider.","At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"reverb",pianoName:"Reverb",maxRawVol:t.reverbRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:0,maxIndex:0,promptName:"Instrument Reverb",promptDesc:["This setting controls the reverb of your insturment, just like the reverb slider.","At $LO, your instrument will have no reverb. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"distortion",pianoName:"Distortion",maxRawVol:t.distortionRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:3,maxIndex:0,promptName:"Instrument Distortion",promptDesc:["This setting controls the amount of distortion for your instrument, just like the distortion slider.","At $LO, your instrument will have no distortion. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"fm slider 1",pianoName:"FM 1",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"FM Slider 1",promptDesc:["This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 2",pianoName:"FM 2",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"FM Slider 2",promptDesc:["This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 3",pianoName:"FM 3",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"FM Slider 3",promptDesc:["This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 4",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"FM Slider 4",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedbck",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"pulse width",pianoName:"Pulse Width",maxRawVol:t.pulseWidthRange,newNoteVol:t.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Pulse Width",promptDesc:["This setting controls the width of this instrument's pulse wave, just like the pulse width slider.","At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).","Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.","[OVERWRITING] [$LO - $HI] [%Duty]"]},{name:"detune",pianoName:"Detune",maxRawVol:t.detuneMax-t.detuneMin,newNoteVol:t.detuneCenter,forSong:!1,convertRealFactor:-t.detuneCenter,associatedEffect:8,maxIndex:0,promptName:"Instrument Detune",promptDesc:["This setting controls the detune for this instrument, just like the detune slider.","At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.","[OVERWRITING] [$LO - $HI] [cents]"]},{name:"vibrato depth",pianoName:"Vibrato Depth",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,maxIndex:0,promptName:"Vibrato Depth",promptDesc:["This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.","At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.","[OVERWRITING] [$LO - $HI] [pitch ÷25]"]},{name:"song detune",pianoName:"Detune",maxRawVol:t.songDetuneMax-t.songDetuneMin,newNoteVol:Math.ceil((t.songDetuneMax-t.songDetuneMin)/2),forSong:!0,convertRealFactor:-250,associatedEffect:15,maxIndex:0,promptName:"Song Detune",promptDesc:["This setting controls the overall detune of the entire song. There is no associated slider.","At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.","[MULTIPLICATIVE] [$LO - $HI] [cents x4]"]},{name:"vibrato speed",pianoName:"Vibrato Speed",maxRawVol:30,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,maxIndex:0,promptName:"Vibrato Speed",promptDesc:["This setting controls the speed your instrument will vibrato at, just like the slider.","A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"vibrato delay",pianoName:"Vibrato Delay",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,maxIndex:0,promptName:"Vibrato Delay",promptDesc:["This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.","A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).","[OVERWRITING] [$LO - $HI] [beats ÷24]"]},{name:"arp speed",pianoName:"Arp Speed",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,maxIndex:0,promptName:"Arpeggio Speed",promptDesc:["This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"pan delay",pianoName:"Pan Delay",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:2,maxIndex:0,promptName:"Panning Delay",promptDesc:["This setting controls the delay applied to panning for your instrument, just like the pan delay slider.","With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.","[OVERWRITING] [$LO - $HI]"]},{name:"reset arp",pianoName:"Reset Arp",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,maxIndex:0,promptName:"Reset Arpeggio",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.","This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.","[$LO - $HI]"]},{name:"eq filter",pianoName:"EQFlt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"EQ Filter",promptDesc:["This setting controls a few separate things for your instrument's EQ filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"note filter",pianoName:"N.Flt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,maxIndex:0,promptName:"Note Filter",promptDesc:["This setting controls a few separate things for your instrument's note filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"bit crush",pianoName:"Bitcrush",maxRawVol:t.bitcrusherQuantizationRange-1,newNoteVol:Math.round(t.bitcrusherQuantizationRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,maxIndex:0,promptName:"Instrument Bit Crush",promptDesc:["This setting controls the bit crush of your instrument, just like the bit crush slider.","At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"freq crush",pianoName:"Freq Crush",maxRawVol:t.bitcrusherFreqRange-1,newNoteVol:Math.round(t.bitcrusherFreqRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,maxIndex:0,promptName:"Instrument Frequency Crush",promptDesc:["This setting controls the frequency crush of your instrument, just like the freq crush slider.","At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo",pianoName:"Echo",maxRawVol:t.echoSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,maxIndex:0,promptName:"Instrument Echo Sustain",promptDesc:["This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.","At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo delay",pianoName:"Echo Delay",maxRawVol:t.echoDelayRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,maxIndex:0,promptName:"Instrument Echo Delay",promptDesc:["This setting controls the echo delay of your instrument, just like the echo delay slider.","At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.","[OVERWRITING] [$LO - $HI] [~beats ÷12]"]},{name:"chorus",pianoName:"Chorus",maxRawVol:t.chorusRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:1,maxIndex:0,promptName:"Instrument Chorus",promptDesc:["This setting controls the chorus strength of your instrument, just like the chorus slider.","At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt cut",pianoName:"EQFlt Cut",maxRawVol:t.filterSimpleCutRange-1,newNoteVol:t.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"EQ Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt peak",pianoName:"EQFlt Peak",maxRawVol:t.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"EQ Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt cut",pianoName:"N.Flt Cut",maxRawVol:t.filterSimpleCutRange-1,newNoteVol:t.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:5,maxIndex:0,promptName:"Note Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt peak",pianoName:"N.Flt Peak",maxRawVol:t.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,maxIndex:0,promptName:"Note Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pitch shift",pianoName:"Pitch Shift",maxRawVol:t.pitchShiftRange-1,newNoteVol:t.pitchShiftCenter,forSong:!1,convertRealFactor:-t.pitchShiftCenter,associatedEffect:7,maxIndex:0,promptName:"Pitch Shift",promptDesc:["This setting controls the pitch offset of your instrument, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[OVERWRITING] [$LO - $HI] [pitch]"]},{name:"sustain",pianoName:"Sustain",maxRawVol:t.stringSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Picked String Sustain",promptDesc:["This setting controls the sustain of your picked string instrument, just like the sustain slider.","At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"mix volume",pianoName:"Mix Vol.",maxRawVol:t.volumeRange,newNoteVol:Math.ceil(t.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-t.volumeRange/2),associatedEffect:15,maxIndex:0,promptName:"Mix Volume",promptDesc:["This setting affects the volume of your instrument as if its volume slider had been moved.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.","Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"fm slider 5",pianoName:"FM 5",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"FM Slider 5",promptDesc:["This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 6",pianoName:"FM 6",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"FM Slider 6",promptDesc:["This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"decimal offset",pianoName:"Decimal Offset",maxRawVol:99,newNoteVol:0,forSong:!1,convertRealFactor:0,invertSliderIndicator:!0,associatedEffect:15,maxIndex:0,promptName:"Decimal Offset",promptDesc:["This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.","[$LO - $HI]"]},{name:"envelope speed",pianoName:"EnvelopeSpd",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Envelope Speed",promptDesc:["This setting controls how fast all of the envelopes for the instrument play.","At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"dynamism",pianoName:"Dynamism",maxRawVol:t.supersawDynamismMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Supersaw Dynamism",promptDesc:["This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.","At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"spread",pianoName:"Spread",maxRawVol:t.supersawSpreadMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Supersaw Spread",promptDesc:["This setting controls the supersaw spread of your instrument, just like the spread slider.","At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"saw shape",pianoName:"Saw Shape",maxRawVol:t.supersawShapeMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Supersaw Shape",promptDesc:["This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.","As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.","[OVERWRITING] [$LO - $HI] [%]"]},{name:"individual envelope speed",pianoName:"IndvEnvSpd",maxRawVol:63,newNoteVol:23,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:t.maxEnvelopeCount-1,promptName:"Individual Envelope Speed",promptDesc:["This setting controls how fast the specified envelope of the instrument will play.","At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:","[0-4]: x0, x0.01, x0.02, x0.03, x0.04,","[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,","[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,","[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,","[20-24]: x0.75, x0.8, x0.9, x1, x1.25,","[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,","[30-34]: x2.25, x2.5, x2.75, x3, x3.5,","[35-39]: x4, x4.5, x5, x5.5, x6,","[40-44]: x6.5, x7, x7.5, x8, x8.5,","[45-49]: x9, x9.5, x10, x11, x12","[50-54]: x13, x14, x15, x16, x17","[55-59]: x18, x19, x20, x24, x32","[60-63]: x40, x64, x128, x256","[OVERWRITING] [$LO - $HI]"]},{name:"song eq",pianoName:"Song EQ",maxRawVol:10,newNoteVol:0,forSong:!0,convertRealFactor:0,associatedEffect:15,maxIndex:0,promptName:"Song EQ Filter",promptDesc:["This setting overwrites every instrument's eq filter. You can do this in a few separate ways, similar to the per instrument eq filter modulator.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"reset envelope",pianoName:"ResetEnv",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:t.maxEnvelopeCount-1,promptName:"Reset Envelope",promptDesc:["This setting functions a lot like the reset arp modulator. Wherever a note is placed, the envelope of this instrument at the specified index will reset at the very start of that note. ","[$LO - $HI]"]},{name:"ring modulation",pianoName:"Ring Mod",maxRawVol:t.ringModRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:13,maxIndex:0,promptName:"Ring Modulation",promptDesc:["This setting controls the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"ring mod hertz",pianoName:"Ring Mod(Hz)",maxRawVol:t.ringModHzRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:13,maxIndex:0,promptName:"Ring Modulation (Hertz)",promptDesc:["This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"granular",pianoName:"Granular",maxRawVol:t.granularRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:14,maxIndex:0,promptName:"Granular",promptDesc:["This setting controls the granular effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"grain freq",pianoName:"Grain #",maxRawVol:t.grainAmountsMax,newNoteVol:8,forSong:!1,convertRealFactor:0,associatedEffect:14,maxIndex:0,promptName:"Grain Count",promptDesc:["This setting controls the density of grains for the granular effect on your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"grain size",pianoName:"Grain Size",maxRawVol:t.grainSizeMax/t.grainSizeStep,newNoteVol:t.grainSizeMin/t.grainSizeStep,forSong:!1,convertRealFactor:0,associatedEffect:14,maxIndex:0,promptName:"Grain Size",promptDesc:["This setting controls the grain size of the granular effect in your instrument.","The number shown in the mod channel is multiplied by "+t.grainSizeStep+" to get the actual grain size.","[OVERWRITING] [$LO - $HI]"]},{name:"grain range",pianoName:"Grain Range",maxRawVol:t.grainRangeMax/t.grainSizeStep,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:14,maxIndex:0,promptName:"Grain Range",promptDesc:["This setting controls the range of values for your grain size of the granular effect in your instrument, from no variation to a lot","The number shown in the mod channel is multiplied by "+t.grainSizeStep+" to get the actual grain size.","[OVERWRITING] [$LO - $HI]"]},{name:"individual envelope lower bound",pianoName:"IndvEnvLow",maxRawVol:10*t.perEnvelopeBoundMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:t.maxEnvelopeCount-1,promptName:"Individual Envelope Lower Bound",promptDesc:["This setting controls the envelope lower bound","At $LO, your the envelope will output an upper envelope bound to 0, and at $HI your envelope will output an upper envelope bound to 2.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]},{name:"individual envelope upper bound",pianoName:"IndvEnvUp",maxRawVol:10*t.perEnvelopeBoundMax,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:15,maxIndex:t.maxEnvelopeCount-1,promptName:"Individual Envelope Upper Bound",promptDesc:["This setting controls the envelope upper bound","At $LO, your the envelope will output a 0 to lower envelope bound, and at $HI your envelope will output a 2 to lower envelope bound.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]}]),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);class W{static valueToPreset(e){var t;const n=e>>6,i=63&e;return null===(t=W.presetCategories[n])||void 0===t?void 0:t.presets[i]}static midiProgramToPresetValue(e){for(let t=0;t<W.presetCategories.length;t++){const n=W.presetCategories[t];for(let i=0;i<n.presets.length;i++){const a=n.presets[i];if(a.generalMidi&&a.midiProgram==e)return(t<<6)+i}}return null}static nameToPresetValue(e){for(let t=0;t<W.presetCategories.length;t++){const n=W.presetCategories[t];for(let i=0;i<n.presets.length;i++){if(n.presets[i].name==e)return(t<<6)+i}}return null}static instrumentToPreset(e){var t;return null===(t=W.presetCategories[0].presets.dictionary)||void 0===t?void 0:t[null==i?void 0:i[e]]}}function C(e,t){for(let n=0;n<e.length;n++)e[n]*=t}function O(e){if(!function(e){return!(!e||e&e-1)}(e))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(e)/Math.log(2))}function L(e,t){const n=O(t);if(t<4)throw new Error("FFT array length must be at least 4.");for(let i=n-1;i>=2;i--){const n=1<<i,a=n>>1,s=n<<1,o=2*Math.PI/s,r=Math.cos(o),l=Math.sin(o),p=2*r;for(let i=0;i<t;i+=s){const t=i,s=t+a,o=t+n,u=o+a,c=o+n,h=e[t],f=e[o];e[t]=h+f,e[s]*=2,e[o]=h-f,e[u]*=2;let d=r,m=-l,v=1,y=0;for(let n=1;n<a;n++){const i=t+n,a=o-n,s=o+n,r=c-n,l=e[i],u=e[a],h=e[s],f=e[r],g=l-u,S=h+f;e[i]=l+u,e[a]=f-h,e[s]=g*d-S*m,e[r]=S*d+g*m;const b=p*d-v,w=p*m-y;v=d,y=m,d=b,m=w}}}for(let n=0;n<t;n+=4){const t=n+1,i=n+2,a=n+3,s=e[n],o=2*e[t],r=e[i],l=2*e[a],p=s+r,u=s-r;e[n]=p+o,e[t]=p-o,e[i]=u+l,e[a]=u-l}!function(e,t){const n=O(t);if(n>16)throw new Error("FFT array length must not be greater than 2^16.");const i=16-n;for(let n=0;n<t;n++){let t;if(t=(43690&n)>>1|(21845&n)<<1,t=(52428&t)>>2|(13107&t)<<2,t=(61680&t)>>4|(3855&t)<<4,t=(t>>8|(255&t)<<8)>>i,t>n){let i=e[n];e[n]=e[t],e[t]=i}}}(e,t)}W.version="0.0.0",W.versionDisplayName="JukeBox "+W.version,W.releaseNotesURL="./patch_notes.html",W.isOnMac=/^Mac/i.test(navigator.platform)||/Mac OS X/i.test(navigator.userAgent)||/^(iPhone|iPad|iPod)/i.test(navigator.platform)||/(iPhone|iPad|iPod)/i.test(navigator.userAgent),W.ctrlSymbol=W.isOnMac?"⌘":"Ctrl+",W.ctrlName=W.isOnMac?"command":"control",W.presetCategories=S([{name:"Custom Instruments",presets:S([{name:i[0],customType:0},{name:i[1],customType:1},{name:i[2],customType:2},{name:i[3],customType:3},{name:i[4],customType:4},{name:i[5],customType:5},{name:i[6],customType:6},{name:i[7],customType:7},{name:i[8],customType:8},{name:i[9],customType:9},{name:i[11],customType:11}])},{name:"Retro Presets",presets:S([{name:"square wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"square",unison:"none",envelopes:[]}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"triangle",unison:"none",envelopes:[]}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"square",unison:"hum",envelopes:[]}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"sawtooth",unison:"shimmer",envelopes:[]}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1}],effects:["vibrato","aliasing"],vibrato:"light",transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[]}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:["aliasing"],chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"supersaw lead",midiProgram:81,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:2}],effects:["reverb"],reverb:67,fadeInSeconds:0,fadeOutTicks:-6,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}},{name:"FM twang",midiProgram:32,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:11},{frequency:"1×",amplitude:7},{frequency:"1×",amplitude:9},{frequency:"20×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",eqFilter:[],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:14},{frequency:"2×",amplitude:14},{frequency:"1×",amplitude:11},{frequency:"2×",amplitude:11}],envelopes:[]}},{name:"FM sine",midiProgram:55,settings:{type:"FM",eqFilter:[],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:[],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine"},{frequency:"1×",amplitude:0,waveform:"sine"},{frequency:"1×",amplitude:0,waveform:"sine"},{frequency:"1×",amplitude:0,waveform:"sine"}],envelopes:[]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",vibrato:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}},{name:"Sunsoft Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[24,24,15,15,9,9,-4,-4,0,0,-13,-13,-19,-19,-24,-24,-24,-24,-10,-10,0,0,-7,-7,-7,-7,0,0,6,6,-4,-4,3,3,-4,-4,3,3,3,3,9,9,15,15,15,15,6,6,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,3,3,12,12,24,24]}}])},{name:"Keyboard Presets",presets:S([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:148.65,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:1.4142}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],unison:"piano",stringSustain:86,envelopes:[]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"1/8 pulse",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],unison:"honky tonk",stringSustain:71,envelopes:[]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:9},{frequency:"16×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"peak",cutoffHz:11313.71,linearGain:2.8284}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],unison:"none",stringSustain:79,envelopes:[]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"3⟲",feedbackAmplitude:6,operators:[{frequency:"3×",amplitude:15},{frequency:"~1×",amplitude:6},{frequency:"8×",amplitude:4},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],unison:"piano",stringSustain:79,envelopes:[]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"grand piano 3",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:1681.79,linearGain:4},{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"peak",cutoffHz:3363.59,linearGain:4},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.0884}],reverb:67,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:86,stringSustainType:"acoustic",envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:1}]}}])},{name:"Idiophone Presets",presets:S([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:6,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"3×",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:193,effects:["chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,operators:[{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],unison:"none",stringSustain:64,envelopes:[]}},{name:"music box 2",midiProgram:10,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.7071}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],unison:"none",stringSustain:29,envelopes:[]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:9,envelope:"custom"},{frequency:"9×",amplitude:3,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:197,effects:["chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:198,effects:["chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"11×",amplitude:9,envelope:"custom"},{frequency:"20×",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:96,chord:"strum",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:86,envelopes:[]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:10,envelope:"custom"},{frequency:"7×",amplitude:6,envelope:"twang 3"},{frequency:"20×",amplitude:1,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:7,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"16×",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:205,effects:["chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1 2 3 4",feedbackType:"1→4",feedbackAmplitude:15,operators:[{frequency:"2×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Guitar Presets",presets:S([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"5×",amplitude:2,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"Picked String",eqFilter:[],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:4,envelope:"twang 3"},{frequency:"4×",amplitude:4,envelope:"twang 2"},{frequency:"16×",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:S([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:1,envelope:"twang 3"},{frequency:"1×",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"13×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲ 4⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 1"},{frequency:"~1×",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1→2",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"steady"},{frequency:"3×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"dubstep yoi yoi",midiProgram:87,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["note filter","bitcrusher"],noteFilter:[{type:"low-pass",cutoffHz:594.6,linearGain:11.3137}],bitcrusherOctave:1.5,bitcrusherQuantization:0,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"flare 2",index:0}]}}])},{name:"Picked String Presets",presets:S([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:11,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 3"},{frequency:"9×",amplitude:3,envelope:"twang 3"},{frequency:"16×",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"11×",amplitude:3,envelope:"twang 3"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"9×",amplitude:4,envelope:"twang 2"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"steady"},{frequency:"16×",amplitude:4,envelope:"twang 3"},{frequency:"1×",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"twang 3"},{frequency:"~2×",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:S([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["note filter","distortion"],noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1e3,linearGain:.25}],effects:["note filter","distortion","reverb"],noteFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:2e3,linearGain:1}],distortion:86,reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2→3→4",feedbackAmplitude:8,operators:[{frequency:"3×",amplitude:13},{frequency:"~1×",amplitude:5},{frequency:"4×",amplitude:6},{frequency:"3×",amplitude:7}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"4×",amplitude:12},{frequency:"16×",amplitude:5},{frequency:"1×",amplitude:2},{frequency:"~1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:3}]}},{name:"PWM overdrive",midiProgram:29,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:17.67767,envelopes:[{target:"pulseWidth",envelope:"punch"}]}},{name:"PWM distortion",midiProgram:30,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2}],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:50,envelopes:[{target:"pulseWidth",envelope:"swell 1"}]}},{name:"FM overdrive",midiProgram:29,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:2,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"~2×",amplitude:6},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3},{target:"feedbackAmplitude",envelope:"punch"}]}},{name:"FM distortion",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:4,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:11},{frequency:"1×",amplitude:9},{frequency:"~2×",amplitude:4}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3}]}}])},{name:"Bellows Presets",presets:S([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:515,effects:["vibrato","note filter","chorus","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],chorus:100,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,operators:[{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"6×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:S([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"delayed",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1→2",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:9},{frequency:"3×",amplitude:9},{frequency:"2×",amplitude:7},{frequency:"7×",amplitude:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],reverb:67,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:12,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"16×",amplitude:5},{frequency:"~1×",amplitude:10},{frequency:"1×",amplitude:9},{frequency:"6×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16×",amplitude:5,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"6×",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←(3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"16×",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["note filter","chorus","reverb"],noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768}],chorus:100,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:12,operators:[{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"7×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"3×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:10,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3×",amplitude:6,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"twang 3"},{frequency:"2×",amplitude:15,envelope:"flare 3"},{frequency:"4×",amplitude:15,envelope:"flare 2"},{frequency:"8×",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"light",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:588,effects:["vibrato","note filter","chorus","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],chorus:100,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,operators:[{frequency:"1×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"3×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"supersaw string",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142},{type:"low-pass",cutoffHz:3363.59,linearGain:.1768}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:500,linearGain:.1768}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:6,pulseWidth:35.35534,dynamism:83,spread:8,shape:50,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"supersaw string 2",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],effects:["note filter","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],chorus:57,reverb:42,fadeInSeconds:.0575,fadeOutTicks:-6,pulseWidth:50,dynamism:67,spread:58,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"pulseWidth",envelope:"flare 2"}]}}])},{name:"Vocal Presets",presets:S([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25},{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:33,fadeInSeconds:.0413,fadeOutTicks:24,harmonics:[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:5.6569},{type:"peak",cutoffHz:594.6,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:8},{type:"high-pass",cutoffHz:210.22,linearGain:1.4142}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,transition:"normal",fadeInSeconds:.0263,fadeOutTicks:12,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1 2 3)←4",feedbackType:"1→2→3→4",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"9×",amplitude:5,envelope:"custom"},{frequency:"20×",amplitude:1,envelope:"custom"},{frequency:"~1×",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"delayed",reverb:33,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"2×",amplitude:15},{frequency:"1×",amplitude:7},{frequency:"~1×",amplitude:7},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:1},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["note filter","reverb"],noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:6,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:4}],reverb:0,fadeInSeconds:.0413,fadeOutTicks:6,algorithm:"1←2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:12,operators:[{frequency:"2×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"mouse",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"light",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,operators:[{frequency:"2×",amplitude:13},{frequency:"5×",amplitude:12},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:15,envelope:"punch"},{frequency:"4×",amplitude:15,envelope:"punch"},{frequency:"7×",amplitude:15,envelope:"punch"},{frequency:"1×",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:11,envelope:"custom"},{frequency:"~1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:2,envelope:"steady"},{frequency:"16×",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:S([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"flare 2"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:13},{frequency:"1×",amplitude:5},{frequency:"9×",amplitude:5},{frequency:"13×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1},{type:"peak",cutoffHz:2378.41,linearGain:2.8284}],effects:["reverb"],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:8}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"swell 1"},{frequency:"~1×",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"flare 1"},{frequency:"~1×",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"flare 1"},{frequency:"~1×",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:S([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"4×",amplitude:4,envelope:"swell 1"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"5×",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"4×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"8×",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"8×",amplitude:4,envelope:"steady"},{frequency:"4×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"punch"},{frequency:"8×",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:778,effects:["note filter","reverb"],noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:9,operators:[{frequency:"2×",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"feedbackAmplitude",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Flute Presets",presets:S([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,preset:832,eqSubFilters1:[],effects:["reverb"],reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"4⟲",feedbackAmplitude:7,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"4⟲",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←(2 3←4)",feedbackType:"3→4",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:4,envelope:"twang 1"},{frequency:"20×",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,fadeInSeconds:.0125,fadeOutTicks:-3,spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:4,envelope:"custom"},{frequency:"6×",amplitude:2,envelope:"custom"},{frequency:"11×",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",eqFilter:[],effects:["chord type","note filter","reverb"],chord:"strum",noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:.3536},{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:S([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"2×",amplitude:14},{frequency:"~1×",amplitude:4},{frequency:"6×",amplitude:3},{frequency:"13×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"feedbackAmplitude",envelope:"swell 3"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,operators:[{frequency:"1×",amplitude:14},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"},{target:"operatorAmplitude",envelope:"swell 1",index:1}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"honky tonk",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:8},{frequency:"3×",amplitude:7},{frequency:"11×",amplitude:2}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:12},{frequency:"3×",amplitude:7},{frequency:"7×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:13,operators:[{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:9},{frequency:"1×",amplitude:7},{frequency:"11×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"swell 2",index:2},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["chorus","reverb"],chorus:100,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",algorithm:"1←(2 3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:14},{frequency:"~1×",amplitude:10},{frequency:"3×",amplitude:7},{frequency:"1×",amplitude:7}],envelopes:[{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],unison:"octave",stringSustain:86,envelopes:[]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:11.3137}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"1×",amplitude:15},{frequency:"4×",amplitude:5},{frequency:"1×",amplitude:10},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"feedbackAmplitude",envelope:"flare 3"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:9513.66,linearGain:2.8284}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"~1×",amplitude:13},{frequency:"2×",amplitude:10},{frequency:"5×",amplitude:5},{frequency:"11×",amplitude:8}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"tremolo5",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13},{frequency:"5×",amplitude:7},{frequency:"7×",amplitude:5},{frequency:"~1×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:8}],effects:[],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"custom interval",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:15}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"supersaw pad",midiProgram:93,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768}],effects:["reverb"],reverb:100,fadeInSeconds:.0263,fadeOutTicks:24,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}}])},{name:"Drum Presets",presets:S([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.1768}],effects:["note filter","chorus","reverb"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],chorus:67,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:14},{frequency:"7×",amplitude:3},{frequency:"3×",amplitude:5},{frequency:"4×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"flare 1",index:1},{target:"operatorAmplitude",envelope:"flare 2",index:2},{target:"operatorAmplitude",envelope:"swell 2",index:3}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3←4",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"~1×",amplitude:12},{frequency:"2×",amplitude:15},{frequency:"4×",amplitude:14},{frequency:"~1×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"note size",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"flare 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:6727.17,linearGain:5.6569}],effects:["pitch shift","note filter","reverb"],pitchShiftSemitones:15,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},{name:"synth kick",midiProgram:47,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-6,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"8×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Novelty Presets",presets:S([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142}],chorus:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"}]}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],chorus:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["chord type","vibrato","reverb"],chord:"strum",vibrato:"heavy",reverb:67,fadeInSeconds:.0575,fadeOutTicks:-6,harmonics:[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"hum",envelopes:[{target:"noteVolume",envelope:"decay 1"}]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"arpeggio",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:12},{frequency:"1×",amplitude:4},{frequency:"20×",amplitude:1},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo4"},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:4}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",wave:"double saw",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"5×",amplitude:13},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:6},{frequency:"11×",amplitude:12}],envelopes:[]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2}],effects:["vibrato"],vibrato:"shaky",transition:"normal",fadeInSeconds:.0575,fadeOutTicks:-6,chord:"simultaneous",pulseWidth:4.41942,envelopes:[{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.7071}],effects:["vibrato","reverb"],vibrato:"heavy",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-6,chord:"simultaneous",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])},{name:"UltraBox Presets",presets:S([{name:"distorted pulse vocal",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],effects:["transition type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],bitcrusherOctave:6.5,bitcrusherQuantization:71,echoSustain:14,echoDelayBeats:.167,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"1/8 pulse",unison:"none",envelopes:[]}},{name:"dubstep bwah",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","chord type"],transition:"interrupt",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"note size",index:3}]}},{name:"FM cool bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],effects:["transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:11,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM funky bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768}],eqFilterType:!0,eqSimpleCut:5,eqSimplePeak:0,eqSubFilters1:[],effects:["transition type","reverb"],transition:"normal",clicklessTransition:!1,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"note size"}]}},{name:"talking bass",generalMidi:!1,settings:{type:"FM",eqFilter:[],effects:["chord type"],chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15},{frequency:"2×",amplitude:8},{frequency:"2×",amplitude:5},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"note size",index:3},{target:"feedbackAmplitude",envelope:"note size"}]}},{name:"synth marimba",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:1},{type:"peak",cutoffHz:4e3,linearGain:.5}],effects:["note filter","echo"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142}],echoSustain:71,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[86,100,29,29,0,0,0,100,0,0,0,86,29,0,14,100,0,0,0,0,0,14,0,0,14,0,0,86],unison:"fifth",stringSustain:7,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"}]}},{name:"italian accordian",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:1,eqSubFilters1:[],effects:["chorus","reverb"],chorus:71,reverb:45,fadeInSeconds:.0263,fadeOutTicks:-3,wave:"square",unison:"honky tonk",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:-24,39:-24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:-24,55:-24,56:-24,57:-24,58:-24,59:-24,60:-24,61:-24,62:-24,63:-24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"chip supersaw",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["transition type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,chorus:29,reverb:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"dissonant",customChipWave:{0:22,1:22,2:16,3:6,4:0,5:-3,6:-8,7:-10,8:-13,9:-16,10:-19,11:-19,12:-20,13:-22,14:-22,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:-24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:24,32:24,33:16,34:9,35:6,36:4,37:2,38:0,39:-1,40:-3,41:-4,42:-4,43:-6,44:-6,45:-6,46:-6,47:-5,48:-5,49:-4,50:-2,51:-2,52:1,53:4,54:6,55:8,56:10,57:12,58:14,59:16,60:18,61:19,62:22,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"fm supersaw",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],effects:["transition type","pitch shift","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],chorus:71,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4 5 6",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"~1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:10,waveform:"sawtooth",pulseWidth:5},{frequency:"3×",amplitude:7,waveform:"sawtooth",pulseWidth:5},{frequency:"4×",amplitude:9,waveform:"sawtooth",pulseWidth:5},{frequency:"8×",amplitude:6,waveform:"sawtooth",pulseWidth:5}],envelopes:[]}},{name:"wind",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:250.03,linearGain:11.3137}],eqFilterType:!0,eqSimpleCut:0,eqSimplePeak:7,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","reverb"],transition:"continue",clicklessTransition:!1,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1→3 2→4",feedbackAmplitude:15,operators:[{frequency:"16×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"mrow",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[],effects:["chord type","reverb"],chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,reverb:35,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:9,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"vocal why",generalMidi:!1,settings:{type:"harmonics",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:11.3137}],reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,harmonics:[100,86,29,29,14,14,0,14,14,43,71,100,100,86,71,71,57,57,43,43,43,43,43,0,0,0,0,0],unison:"octave",envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"Misc Modded Presets",presets:S([{name:"modbox theepsynth",settings:{type:"FM",effects:"none",transition:"hard",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:11,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"blackbox deep key",midiProgram:9,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:32,filterEnvelope:"twang 1",interval:"shimmer",vibrato:"light",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,30]}},{name:"blackbox ring ding",midiProgram:78,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1500,filterResonance:16,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"},{frequency:"12×",amplitude:9,envelope:"custom"},{frequency:"22×",amplitude:4,envelope:"twang 2"}]}},{name:"todbox accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"todbox accordian",interval:"honky tonk",vibrato:"none"}},{name:"todbox wind",generalMidi:!1,settings:{type:"FM",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:200,filterResonance:2950,filterEnvelope:"steady",vibrato:"none",algorithm:"1→3 2→4",feedbackType:"1→3 2→4",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"16×",amplitude:15,envelope:"steady"},{frequency:"16×",amplitude:0,envelope:"custom"},{frequency:"16×",amplitude:15,envelope:"steady"},{frequency:"16×",amplitude:0,envelope:"flare 2"}]}},{name:"Whastle (VoxBox)",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","detune","vibrato","note filter","bitcrusher","chorus","reverb"],detuneCents:24,vibrato:"custom",vibratoDepth:.24,vibratoDelay:19,vibratoSpeed:4,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],bitcrusherOctave:6.5,bitcrusherQuantization:0,pan:0,panDelay:10,chorus:100,reverb:32,fadeInSeconds:.0263,fadeOutTicks:-3,harmonics:[100,86,71,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"}],isDrum:!1}},{name:"Nastortion Guitar (VoxBox)",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","pitch shift","detune","note filter","bitcrusher","chorus","echo","reverb"],pitchShiftSemitones:12,detuneCents:22,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142}],bitcrusherOctave:5.5,bitcrusherQuantization:100,pan:0,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:35,fadeInSeconds:.0125,fadeOutTicks:-1,harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"octave",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"noteFilterAllFreqs",envelope:"note size"}],isDrum:!1}},{name:"Sawcoustic Bass (VoxBox)",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:17,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:1.4142}],effects:["panning","transition type","detune","note filter"],transition:"normal",clicklessTransition:!1,detuneCents:13,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"pulse width",pulseWidth:5},{frequency:"4×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopeInverse0:!1,envelopeInverse1:!1,envelopeInverse2:!1,envelopeInverse3:!1,envelopeInverse4:!1,envelopes:[{target:"noteVolume",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96},{target:"noteVolume",envelope:"twang 2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96},{target:"noteFilterAllFreqs",envelope:"twang 2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96},{target:"operatorAmplitude",envelope:"twang -1",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,index:2},{target:"operatorFrequency",envelope:"linear-1",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,index:3}],isDrum:!1}}])},{name:"Sandbox Presets",presets:S([{name:"sandbox abnormality",generalMidi:!1,midiSubharmonicOctaves:1,settings:{type:"chip",effects:"none",transition:"seamless",chord:"arpeggio",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",wave:"spiky",interval:"fifth",vibrato:"none"}},{name:"sandbox playstation",generalMidi:!1,midiSubharmonicOctaves:1,settings:{type:"chip",effects:"chorus",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"steady",wave:"glitch",interval:"shimmer",vibrato:"none"}},{name:"sandbox harmony pulse",generalMidi:!1,midiSubharmonicOctaves:1,settings:{type:"chip",effects:"chorus",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"punch",wave:"double pulse",interval:"union",vibrato:"none"}},{name:"sandbox pink ping",generalMidi:!1,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:3e3,filterResonance:0,filterEnvelope:"tripolo6",spectrum:[0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"sandbox clean pulse",generalMidi:!1,settings:{type:"custom chip",transition:"hard",effects:"none",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,24,24,24,24,24,24,1,1,1,1,1,1,1,1,1,1,1,1]}},{name:"sandbox snp chorus",generalMidi:!1,settings:{type:"FM",transition:"hard",effects:"chorus & reverb",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1→2→3→4",feedbackAmplitude:1,feedbackEnvelope:"flare 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:6,envelope:"custom"}]}},{name:"sandbox snp echo",generalMidi:!1,settings:{type:"FM",transition:"hard fade",effects:"chorus",chord:"strum",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:15,envelope:"custom"},{frequency:"20×",amplitude:9,envelope:"twang 1"},{frequency:"20×",amplitude:5,envelope:"twang 2"}]}},{name:"sandbox tori synth lead",generalMidi:!1,settings:{type:"harmonics",effects:"chorus",transition:"seamless",chord:"harmony",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,100,100,100,71,71,43,43,43,29,29,43,43,43,43,43,43,43,43,43,43,43,29,14,0,0,0,86]}},{name:"sandbox glorious piano 1",generalMidi:!1,settings:{type:"custom chip",transition:"hard fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[24,24,-16,-15,-15,-14,-13,-13,-12,-11,-11,-10,-9,-8,-8,-7,-6,-5,-5,-4,-3,-2,-2,23,22,22,21,20,20,19,19,18,18,17,16,15,15,14,13,12,12,11,0,-1,-1,-2,-3,-3,-4,-5,-5,-6,-20,-19,-17,-17,-14,-11,-8,-5,-2,-23,-24,-24]}},{name:"sandbox glorious piano 2",generalMidi:!1,settings:{type:"custom chip",transition:"hard fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",interval:"shimmer",vibrato:"light",customChipWave:[24,24,-16,-15,-15,-14,-13,-13,-12,12,9,5,2,-3,-7,-10,-6,-5,-5,-4,-3,-2,-2,23,22,22,21,20,20,19,19,18,18,17,16,15,15,0,4,8,15,21,0,-1,-1,-2,-3,-3,-4,-5,-5,-6,-20,-19,-17,-17,-2,-2,-8,2,-2,-5,-24,-24]}},{name:"sandbox muffled katrumpet",generalMidi:!1,settings:{type:"custom chip",transition:"cross fade",effects:"reverb",chord:"strum",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"light",customChipWave:[24,23,22,22,22,22,22,21,21,19,19,15,11,7,5,-2,-5,-11,-13,-14,-16,-17,-17,-17,-17,-17,-17,-17,-17,-13,-10,-1,4,6,8,10,11,14,15,15,16,16,16,16,16,16,16,16,15,15,14,11,8,4,2,-4,-7,-11,-12,-13,-14,-15,-15,-15]}},{name:"sandbox ehruthing",generalMidi:!1,settings:{type:"custom chip","hard fade":"seamless",effects:"reverb",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",customChipWave:[24,24,23,22,21,21,20,19,18,18,17,16,15,-22,-20,-18,-16,-14,-13,-11,-10,-7,-6,-4,-3,-2,0,2,4,17,16,15,13,12,11,9,8,6,5,4,3,2,1,-1,-1,-2,-3,-4,-6,-6,-7,-8,-8,-9,-10,-10,-11,-13,-15,-16,-17,-3,-4,-5]}},{name:"sandbox wurtz organ",generalMidi:!1,settings:{type:"FM",transition:"seamless",effects:"chorus",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"punch",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:3,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:14,envelope:"tremolo6"},{frequency:"2×",amplitude:9,envelope:"tripolo3"},{frequency:"4×",amplitude:5,envelope:"pentolo3"},{frequency:"8×",amplitude:2,envelope:"pentolo6"}]}}])},{name:"Midbox Misc Presets",presets:S([{name:"Broken Music Box",midiProgram:21,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142}],effects:["transition type","chord type","vibrato","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"custom",vibratoDepth:.72,vibratoDelay:19,vibratoSpeed:30,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:23,fadeInSeconds:0,fadeOutTicks:12,wave:"rounded",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"Enhanced Synth Kick",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:19027.31,linearGain:4},{type:"high-pass",cutoffHz:62.5,linearGain:2.8284},{type:"peak",cutoffHz:1681.79,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:19027.31,linearGain:4},{type:"high-pass",cutoffHz:62.5,linearGain:2.8284},{type:"peak",cutoffHz:1681.79,linearGain:.25}],effects:["pitch shift","vibrato","note filter","distortion","bitcrusher","chorus"],pitchShiftSemitones:24,vibrato:"custom",vibratoDepth:2,vibratoDelay:0,vibratoSpeed:30,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:148.65,linearGain:11.3137}],noteSubFilters0:[{type:"peak",cutoffHz:148.65,linearGain:11.3137}],distortion:71,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:57,panDelay:10,chorus:29,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:13,operators:[{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 3"},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"operatorAmplitude",envelope:"twang 1",index:1},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 2"}]}},{name:"Scratch String",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:176.78,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:176.78,linearGain:.25}],effects:["transition type","vibrato","note filter","distortion","echo","reverb"],transition:"normal",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:.3536}],distortion:100,aliases:!1,panDelay:10,echoSustain:29,echoDelayBeats:.75,reverb:29,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1←2←(3 4)",feedbackType:"1→4",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:3,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"Xylophone Saw",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:6727.17,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:6727.17,linearGain:.1768}],effects:["chord type","pitch shift","vibrato","bitcrusher","chorus","echo"],chord:"simultaneous",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:24,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:5.5,bitcrusherQuantization:14,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:.75,fadeInSeconds:0,fadeOutTicks:12,wave:"square",unison:"none",customChipWave:{0:0,1:0,2:0,3:0,4:0,5:0,6:24,7:24,8:24,9:24,10:24,11:-12,12:-12,13:-12,14:-12,15:-12,16:24,17:24,18:24,19:24,20:24,21:24,22:12,23:12,24:12,25:12,26:12,27:-24,28:-24,29:-24,30:-24,31:-24,32:0,33:0,34:0,35:0,36:0,37:0,38:24,39:24,40:24,41:24,42:24,43:-11,44:-11,45:-11,46:-11,47:-11,48:24,49:24,50:24,51:24,52:24,53:24,54:12,55:12,56:12,57:12,58:12,59:12,60:12,61:12,62:12,63:12},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteVolume",envelope:"twang 2"}]}},{name:"Bow Bass",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chord type","pitch shift","vibrato","note filter","bitcrusher","chorus","echo"],chord:"simultaneous",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:19,vibrato:"custom",vibratoDepth:.36,vibratoDelay:0,vibratoSpeed:30,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],bitcrusherOctave:6,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:.75,fadeInSeconds:0,fadeOutTicks:6,wave:"square",unison:"custom",unisonVoices:2,unisonSpread:12,unisonOffset:-12,unisonExpression:1,unisonSign:1,customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:24,7:24,8:24,9:24,10:24,11:24,12:24,13:24,14:24,15:24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:24,25:24,26:24,27:24,28:24,29:24,30:24,31:24,32:24,33:24,34:24,35:24,36:24,37:24,38:24,39:24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:24,49:24,50:24,51:24,52:24,53:24,54:24,55:24,56:24,57:24,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteFilterFreq",envelope:"twang 2",index:0},{target:"noteFilterFreq",envelope:"twang 2",index:1}]}},{name:"Depths",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:4e3,linearGain:.7071},{type:"peak",cutoffHz:840.9,linearGain:.3536},{type:"high-pass",cutoffHz:62.5,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:4e3,linearGain:.7071},{type:"peak",cutoffHz:840.9,linearGain:.3536},{type:"high-pass",cutoffHz:62.5,linearGain:2}],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:0,detuneCents:-52,vibrato:"custom",vibratoDepth:.56,vibratoDelay:0,vibratoSpeed:1,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884}],bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:100,reverb:71,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"ramp",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"tremolo4",index:0}]}},{name:"Disco Vocal Lead",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","pitch shift","note filter","distortion","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:125,linearGain:.0884},{type:"low-pass",cutoffHz:5656.85,linearGain:4}],noteSubFilters0:[{type:"high-pass",cutoffHz:125,linearGain:.0884},{type:"low-pass",cutoffHz:5656.85,linearGain:4}],distortion:100,aliases:!1,panDelay:10,chorus:100,echoSustain:29,echoDelayBeats:1,reverb:19,fadeInSeconds:0,fadeOutTicks:6,harmonics:[43,71,100,0,0,100,0,57,0,0,0,86,29,0,0,0,0,14,0,14,14,0,0,0,0,43,0,0],unison:"piano",stringSustain:93,envelopes:[]}},{name:"Blessed Piano",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"peak",cutoffHz:707.11,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:707.11,linearGain:4}],effects:["chord type","pitch shift","vibrato","note filter","distortion","bitcrusher","chorus"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,vibrato:"custom",vibratoDepth:.48,vibratoDelay:11,vibratoSpeed:16,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.0884}],distortion:14,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:29,panDelay:10,chorus:86,fadeInSeconds:0,fadeOutTicks:24,wave:"triangle",unison:"custom",unisonVoices:2,unisonSpread:6,unisonOffset:6.5,unisonExpression:.8,unisonSign:1,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"Sawtooth Pluck",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.25}],effects:["transition type","chord type","pitch shift","vibrato","note filter"],transition:"normal",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:24,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:8e3,linearGain:4}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:8e3,linearGain:4}],panDelay:10,fadeInSeconds:0,fadeOutTicks:12,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteFilterFreq",envelope:"swell 1",index:2}]}},{name:"Desolated Piano",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5}],effects:["pitch shift","vibrato","bitcrusher","chorus","reverb"],pitchShiftSemitones:24,vibrato:"custom",vibratoDepth:.6,vibratoDelay:1,vibratoSpeed:18,vibratoType:0,bitcrusherOctave:3.5,bitcrusherQuantization:0,panDelay:10,chorus:29,reverb:26,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,operators:[{frequency:"~1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"3×",amplitude:3,waveform:"trapezoid",pulseWidth:5},{frequency:"8×",amplitude:4,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"vibratoDepth",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"decay 1",index:1},{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:2}]}},{name:"Distorted Guitar 1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["note filter","distortion","chorus","echo","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:3363.59,linearGain:2},{type:"peak",cutoffHz:840.9,linearGain:11.3137},{type:"peak",cutoffHz:1681.79,linearGain:.1768}],noteSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:3363.59,linearGain:2},{type:"peak",cutoffHz:840.9,linearGain:11.3137},{type:"peak",cutoffHz:1681.79,linearGain:.1768}],distortion:71,aliases:!1,panDelay:10,chorus:14,echoSustain:43,echoDelayBeats:1,reverb:39,fadeInSeconds:0,fadeOutTicks:6,harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"Distorted Guitar 2",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.125},{type:"peak",cutoffHz:3363.59,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.125},{type:"peak",cutoffHz:3363.59,linearGain:.5}],effects:["note filter","bitcrusher","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:210.22,linearGain:4},{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters0:[{type:"peak",cutoffHz:210.22,linearGain:4},{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],bitcrusherOctave:6.5,bitcrusherQuantization:71,panDelay:10,chorus:43,reverb:52,fadeInSeconds:0,fadeOutTicks:24,algorithm:"(1 2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"2×",amplitude:14,waveform:"trapezoid",pulseWidth:5},{frequency:"~2×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:10,waveform:"pulse width",pulseWidth:5},{frequency:"8×",amplitude:3,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"Distorted Guitar 3",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"high-pass",cutoffHz:125,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:500,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"high-pass",cutoffHz:125,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:500,linearGain:4}],effects:["pitch shift","note filter","distortion","chorus","reverb"],pitchShiftSemitones:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:.7071},{type:"high-pass",cutoffHz:176.78,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:840.9,linearGain:.7071},{type:"high-pass",cutoffHz:176.78,linearGain:.3536}],distortion:100,aliases:!1,panDelay:10,chorus:14,reverb:6,fadeInSeconds:0,fadeOutTicks:24,harmonics:[100,0,86,0,43,0,100,43,0,29,0,100,0,0,0,71,43,0,0,0,14,0,0,0,0,0,0,29],unison:"none",stringSustain:0,envelopes:[{target:"noteVolume",envelope:"twang 1"}]}},{name:"High Pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:8}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:8}],effects:["pitch shift","vibrato","note filter","chorus"],pitchShiftSemitones:12,vibrato:"custom",vibratoDepth:.28,vibratoDelay:19,vibratoSpeed:30,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],panDelay:10,chorus:86,fadeInSeconds:.0125,fadeOutTicks:24,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:11,operators:[{frequency:"4×",amplitude:13,waveform:"pulse width",pulseWidth:3},{frequency:"0.12×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"3×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"twang 1",index:1},{target:"noteFilterAllFreqs",envelope:"swell 1"}]}},{name:"Magical Pulse",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.0884}],effects:["transition type","pitch shift","vibrato","chorus"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:24,vibrato:"custom",vibratoDepth:.56,vibratoDelay:27,vibratoSpeed:14,vibratoType:0,panDelay:10,chorus:57,fadeInSeconds:0,fadeOutTicks:6,wave:"sawtooth",unison:"custom",unisonVoices:2,unisonSpread:.03,unisonOffset:-.02,unisonExpression:.85,unisonSign:.7,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteVolume",envelope:"swell 3"}]}},{name:"Distorted Lead",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","distortion","bitcrusher","chorus"],transition:"normal",clicklessTransition:!1,distortion:29,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:0,panDelay:10,chorus:100,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:11,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"pulse width",pulseWidth:7},{frequency:"1×",amplitude:8,waveform:"ramp",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"FM Punch Bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2.8284}],effects:["note filter"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2.8284}],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:7,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"ramp",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"feedbackAmplitude",envelope:"punch"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"Rough Glistening Piano",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:210.22,linearGain:1.4142},{type:"high-pass",cutoffHz:125,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:210.22,linearGain:1.4142},{type:"high-pass",cutoffHz:125,linearGain:.1768}],effects:["chord type","note filter","chorus","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:23,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,71,43,29,29,14,14,43,0,43,0,57,71,0,71,43,0,0,57,0,57,0,71,0,71,0,57,0],unison:"honky tonk",envelopes:[{target:"noteFilterFreq",envelope:"twang 2",index:0}]}},{name:"Soft Glistening Piano",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.3536}],effects:["chord type","detune","note filter","chorus","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:-20,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],panDelay:10,chorus:29,reverb:97,fadeInSeconds:.135,fadeOutTicks:48,harmonics:[100,0,0,29,29,14,14,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,43,14,0,0,0,0],unison:"honky tonk",envelopes:[{target:"noteFilterFreq",envelope:"twang 2",index:0}]}},{name:"Jingle Bells",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.3536},{type:"high-pass",cutoffHz:707.11,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.3536},{type:"high-pass",cutoffHz:707.11,linearGain:2}],effects:["chord type","pitch shift","detune","note filter","bitcrusher","chorus","echo","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:8,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:2},{type:"high-pass",cutoffHz:176.78,linearGain:.5},{type:"peak",cutoffHz:2378.41,linearGain:.7071},{type:"peak",cutoffHz:1414.21,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:2},{type:"high-pass",cutoffHz:176.78,linearGain:.5},{type:"peak",cutoffHz:2378.41,linearGain:.7071},{type:"peak",cutoffHz:1414.21,linearGain:2.8284}],bitcrusherOctave:5,bitcrusherQuantization:0,panDelay:10,chorus:29,echoSustain:57,echoDelayBeats:1.667,reverb:77,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,29,57,71,0,0,0,0,0,0,0,14,43,14,0,0,0,0,0,0,14,0,14,14,0,0,0,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"twang 2"}]}},{name:"Odd Snare",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["pitch shift","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],pitchShiftSemitones:24,detuneCents:200,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:176.78,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:176.78,linearGain:2.8284}],distortion:29,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:.083,reverb:3,fadeInSeconds:0,fadeOutTicks:12,algorithm:"(1 2)←3←4",feedbackType:"2⟲ 3⟲ 4⟲",feedbackAmplitude:15,operators:[{frequency:"16×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"0.12×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"twang 3",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"pitchShift",envelope:"twang 3"},{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteFilterFreq",envelope:"swell 1",index:1},{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"operatorFrequency",envelope:"twang 1",index:0}]}},{name:"Otherworldly Kick",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["pitch shift","vibrato","distortion","bitcrusher","chorus"],pitchShiftSemitones:12,vibrato:"custom",vibratoDepth:.92,vibratoDelay:18,vibratoSpeed:30,vibratoType:0,distortion:29,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:57,panDelay:10,chorus:14,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"20×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 3"},{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"},{target:"operatorFrequency",envelope:"twang 1",index:0}]}},{name:"Bitcrushed Piano",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:1.4142},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:1.4142},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142}],effects:["transition type","chord type","pitch shift","vibrato","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,vibrato:"custom",vibratoDepth:.72,vibratoDelay:19,vibratoSpeed:30,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:29,echoDelayBeats:.75,reverb:23,fadeInSeconds:0,fadeOutTicks:12,wave:"triangle",unison:"custom",unisonVoices:2,unisonSpread:211e-6,unisonOffset:-.3,unisonExpression:.8,unisonSign:1,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"Boop Pad",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768}],effects:["transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],panDelay:10,reverb:48,fadeInSeconds:0,fadeOutTicks:96,wave:"square",unison:"custom",unisonVoices:2,unisonSpread:211e-6,unisonOffset:-.3,unisonExpression:.8,unisonSign:1,customChipWave:{0:-1,1:1,2:-1,3:-4,4:-6,5:-8,6:-11,7:-12,8:-15,9:-16,10:-18,11:-19,12:-21,13:-22,14:-24,15:-24,16:-24,17:-24,18:-23,19:-22,20:-21,21:-19,22:-17,23:-16,24:-14,25:-13,26:-10,27:-8,28:-6,29:-4,30:-2,31:-1,32:2,33:3,34:5,35:7,36:10,37:12,38:14,39:16,40:18,41:19,42:20,43:21,44:23,45:23,46:24,47:24,48:24,49:24,50:24,51:24,52:24,53:24,54:24,55:24,56:24,57:24,58:23,59:22,60:21,61:19,62:16,63:14},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteVolume",envelope:"twang 2"},{target:"noteFilterFreq",envelope:"twang 2",index:0}]}},{name:"Spectrum Pad",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:2,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["vibrato","distortion","bitcrusher","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,distortion:29,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,panDelay:10,reverb:26,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],envelopes:[]}},{name:"Countdown Pulse",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:2}],effects:["transition type","pitch shift","detune","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:16,detuneCents:196,panDelay:10,chorus:14,echoSustain:29,echoDelayBeats:.5,reverb:13,fadeInSeconds:0,fadeOutTicks:48,pulseWidth:42,decimalOffset:0,unison:"none",envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"Ambient Pulse 1",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:2.8284},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.3536},{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:2.8284},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.3536},{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],effects:["note filter","echo","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:2.8284}],panDelay:10,echoSustain:29,echoDelayBeats:1.333,reverb:35,fadeInSeconds:0,fadeOutTicks:96,algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"pulse width",pulseWidth:6},{frequency:"3×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"~2×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:2}]}},{name:"Saturn Pad",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:1},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],effects:["note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:.5}],panDelay:10,reverb:26,fadeInSeconds:0,fadeOutTicks:24,harmonics:[0,100,100,100,0,0,0,0,43,43,0,86,0,100,0,29,0,0,0,0,71,57,0,0,86,0,0,43],unison:"shimmer",stringSustain:93,envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo3"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Build-Up Pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:2.8284},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:2.8284},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.3536}],effects:["note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],panDelay:10,reverb:32,fadeInSeconds:0,fadeOutTicks:96,algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"pulse width",pulseWidth:6},{frequency:"3×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"~2×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:2}]}},{name:"Ambient Pulse 2",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:.7071},{type:"high-pass",cutoffHz:594.6,linearGain:1.4142},{type:"peak",cutoffHz:420.45,linearGain:8}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:.7071},{type:"high-pass",cutoffHz:594.6,linearGain:1.4142},{type:"peak",cutoffHz:420.45,linearGain:8}],effects:["chord type","note filter","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1681.79,linearGain:1}],panDelay:10,reverb:32,fadeInSeconds:0,fadeOutTicks:72,harmonics:[57,57,71,57,43,43,43,71,43,43,43,57,71,86,100,86,57,57,43,43,43,57,43,29,43,57,57,43],unison:"custom",unisonVoices:2,unisonSpread:.0018,unisonOffset:0,unisonExpression:.85,unisonSign:1.6,envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo5"}]}},{name:"Hyper Synth Saw",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"peak",cutoffHz:19027.31,linearGain:11.3137},{type:"peak",cutoffHz:1681.79,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:19027.31,linearGain:11.3137},{type:"peak",cutoffHz:1681.79,linearGain:1.4142}],effects:["chord type","detune","vibrato","distortion","chorus","echo","reverb"],chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:16,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,distortion:14,aliases:!1,panDelay:10,chorus:86,echoSustain:43,echoDelayBeats:1,reverb:58,fadeInSeconds:0,fadeOutTicks:96,wave:"sawtooth",unison:"custom",unisonVoices:2,unisonSpread:.0018,unisonOffset:0,unisonExpression:.85,unisonSign:1.6,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Mechanical Blip",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.25},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.25},{type:"peak",cutoffHz:1414.21,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.3536}],effects:["transition type","detune","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:500,linearGain:4},{type:"high-pass",cutoffHz:176.78,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:500,linearGain:4},{type:"high-pass",cutoffHz:176.78,linearGain:11.3137}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],bitcrusherOctave:4.5,bitcrusherQuantization:43,panDelay:10,chorus:43,echoSustain:57,echoDelayBeats:1.5,reverb:23,fadeInSeconds:0,fadeOutTicks:-1,wave:"rounded",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Another Piano",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:2378.41,linearGain:2},{type:"peak",cutoffHz:3363.59,linearGain:1.4142},{type:"high-pass",cutoffHz:88.39,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:2378.41,linearGain:2},{type:"peak",cutoffHz:3363.59,linearGain:1.4142},{type:"high-pass",cutoffHz:88.39,linearGain:1}],effects:["detune","note filter","reverb"],detuneCents:16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.125}],panDelay:10,reverb:26,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:44,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"noteVolume",envelope:"twang 2"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"}]}}])},{name:"Midbox Dubstep Presets",presets:S([{name:"Dubstep Bwayyyy",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.7071},{type:"peak",cutoffHz:420.45,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.7071},{type:"peak",cutoffHz:420.45,linearGain:.5}],effects:["transition type","vibrato","note filter","distortion","chorus","reverb"],transition:"continue",clicklessTransition:!1,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:11.3137}],distortion:100,aliases:!1,panDelay:10,chorus:71,reverb:32,fadeInSeconds:0,fadeOutTicks:12,pulseWidth:30,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"swell 3",index:0},{target:"noteFilterFreq",envelope:"swell 2",index:0}]}},{name:"Dubstep Bass Hum",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:2},{type:"peak",cutoffHz:420.45,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.5},{type:"peak",cutoffHz:16e3,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:2},{type:"peak",cutoffHz:420.45,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.5},{type:"peak",cutoffHz:16e3,linearGain:2}],effects:["transition type","pitch shift","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:11.3137}],distortion:29,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:14,panDelay:10,chorus:43,reverb:32,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:10,envelopes:[{target:"noteFilterFreq",envelope:"flare 1",index:0},{target:"noteFilterFreq",envelope:"flare 3",index:0}]}},{name:"Dubstep Yaa",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["transition type","pitch shift","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:11.3137}],bitcrusherOctave:2.5,bitcrusherQuantization:29,panDelay:10,chorus:86,reverb:10,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:8,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"swell 1",index:0}]}},{name:"Dubstep Yeoww",generalMidi:!1,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["transition type","chord type","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],transition:"normal",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:11.3137}],distortion:100,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:0,panDelay:10,chorus:86,reverb:35,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:40,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"twang 3",index:0},{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"Dubstep Lead",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:1189.21,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:1189.21,linearGain:.0884}],effects:["transition type","pitch shift","note filter","distortion","bitcrusher"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"low-pass",cutoffHz:1e3,linearGain:2}],noteSubFilters0:[{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"low-pass",cutoffHz:1e3,linearGain:2}],distortion:29,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:86,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"Dubstep Dyaii",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:125,linearGain:.5},{type:"low-pass",cutoffHz:3363.59,linearGain:.5},{type:"peak",cutoffHz:11313.71,linearGain:2.8284},{type:"peak",cutoffHz:1e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:125,linearGain:.5},{type:"low-pass",cutoffHz:3363.59,linearGain:.5},{type:"peak",cutoffHz:11313.71,linearGain:2.8284},{type:"peak",cutoffHz:1e3,linearGain:.0884}],effects:["transition type","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],transition:"slide",clicklessTransition:!1,vibrato:"custom",vibratoDepth:.44,vibratoDelay:23,vibratoSpeed:26,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:8},{type:"peak",cutoffHz:1414.21,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:707.11,linearGain:8},{type:"peak",cutoffHz:1414.21,linearGain:11.3137}],distortion:29,aliases:!1,bitcrusherOctave:3,bitcrusherQuantization:71,panDelay:10,chorus:71,reverb:32,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,0,71,86,0,0,100,86,86,71,57,57,29,14,57,71,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",stringSustain:100,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Dubstep Alarm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:1414.21,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:1414.21,linearGain:.5}],effects:["transition type","pitch shift","note filter","distortion","bitcrusher"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:1414.21,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:1414.21,linearGain:11.3137}],distortion:29,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:100,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:6,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0}]}}])},{name:"(compatable) AbyssBox Presets",presets:S([{name:"Demonic Bell",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071},{type:"high-pass",cutoffHz:353.55,linearGain:.7071},{type:"peak",cutoffHz:1414.21,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071},{type:"high-pass",cutoffHz:353.55,linearGain:.7071},{type:"peak",cutoffHz:1414.21,linearGain:.0884}],effects:["detune","distortion","bitcrusher","echo","reverb"],detuneCents:-52,distortion:29,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:29,panDelay:10,echoSustain:43,echoDelayBeats:1,reverb:68,fadeInSeconds:0,fadeOutTicks:96,harmonics:[43,71,71,100,86,100,43,86,71,57,86,29,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:64,envelopes:[]}},{name:"Spacey Triangle",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"high-pass",cutoffHz:176.78,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"high-pass",cutoffHz:176.78,linearGain:4}],effects:["transition type","vibrato","distortion","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,distortion:29,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,panDelay:10,chorus:86,echoSustain:43,echoDelayBeats:1,reverb:26,fadeInSeconds:0,fadeOutTicks:96,wave:"triangle",unison:"dirty",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Harmonic Piano",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.125},{type:"high-pass",cutoffHz:88.39,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:353.55,linearGain:.125},{type:"high-pass",cutoffHz:88.39,linearGain:1}],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,57,57,57,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"Organic Synth",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.1768}],effects:["chord type","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,panDelay:10,reverb:71,fadeInSeconds:.0263,fadeOutTicks:96,algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:3},{target:"noteVolume",envelope:"twang 2"}]}},{name:"Nokia Ringtone",generalMidi:!1,settings:{type:"FM",eqFilter:[],effects:["transition type","chord type"],transition:"interrupt",chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-1,algorithm:"(1 2)←(3 4)",feedbackType:"1→2",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:2},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15}],envelopes:[]}},{name:"Supersaw Pluck",generalMidi:!1,settings:{type:"supersaw",eqFilter:[],eqFilterType:!1,eqSimpleCut:9,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["chord type","note filter","chorus","echo","reverb"],chord:"simultaneous",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:3828.43,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:3828.43,linearGain:.5}],panDelay:10,chorus:14,echoSustain:29,echoDelayBeats:1,reverb:0,fadeInSeconds:0,fadeOutTicks:48,pulseWidth:40,decimalOffset:0,dynamism:67,spread:50,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"Credits Bass",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["transition type","chord type","note filter"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:9,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],noteSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"alto sax",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 1"}]}},{name:"FM Violin",generalMidi:!1,settings:{type:"FM6op",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","vibrato","distortion","chorus","echo"],transition:"normal",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,distortion:43,aliases:!1,panDelay:10,chorus:14,echoSustain:14,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:6,algorithm:"Custom",feedbackType:"Custom",feedbackAmplitude:4,customAlgorithm:{mods:[[6,2,3,4,5],[],[],[],[],[]],carrierCount:2},customFeedback:{mods:[[1],[],[],[],[],[]]},operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:12,waveform:"rounded",pulseWidth:5},{frequency:"6×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:7,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang 3"},{target:"noteVolume",envelope:"swell 2"}]}},{name:"Shamisen 2",generalMidi:!1,settings:{type:"FM6op",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"Custom",feedbackType:"Custom",feedbackAmplitude:4,customAlgorithm:{mods:[[6,2,3,4,5],[],[],[],[],[]],carrierCount:2},customFeedback:{mods:[[1],[],[],[],[],[]]},operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:12,waveform:"rounded",pulseWidth:5},{frequency:"6×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:7,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"Picked Dist Guitar",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["vibrato","note filter","distortion","bitcrusher"],vibrato:"custom",vibratoDepth:.32,vibratoDelay:19,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.7071},{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.7071},{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],distortion:43,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,panDelay:10,fadeInSeconds:0,fadeOutTicks:12,harmonics:[86,86,86,86,71,57,71,71,14,14,14,29,57,43,43,57,43,29,29,29,29,29,29,43,43,43,0,71],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"noteVolume",envelope:"punch"}]}},{name:"Future Keys (no phaser)",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:125,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:1,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:125,linearGain:.25}],effects:["chorus","echo","reverb","phaser"],phaserMix:100,phaserFreq:94,phaserFeedback:42,phaserStages:97,panDelay:10,chorus:43,echoSustain:43,echoDelayBeats:.75,reverb:19,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,100,100,86,86,86,71,71,57,29,14,14,14,0,29,57,29,0,29,43,57,57,29,14,14,29,43,29],unison:"none",envelopes:[{target:"noteVolume",envelope:"twang -1"}]}},{name:"Light Bell",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["reverb","ring modulation"],ringMod:71,ringModHz:90,rmWaveformIndex:0,rmPulseWidth:0,panDelay:10,reverb:39,fadeInSeconds:0,fadeOutTicks:24,harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,43],unison:"shimmer",stringSustain:71,envelopes:[{target:"noteVolume",envelope:"twang 3"}]}},{name:"Ghost House",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","vibrato","bitcrusher"],transition:"normal",clicklessTransition:!1,vibrato:"heavy",vibratoDepth:.45,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:3.5,bitcrusherQuantization:43,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"}]}},{name:"Chipwave Music Box",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["vibrato","note filter","bitcrusher","chorus","echo"],vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:4},{type:"high-pass",cutoffHz:88.39,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:4},{type:"high-pass",cutoffHz:88.39,linearGain:2.8284}],bitcrusherOctave:4.5,bitcrusherQuantization:14,panDelay:10,chorus:14,echoSustain:29,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:12,wave:"square",unison:"none",customChipWave:{0:24,1:24,2:24,3:23,4:23,5:22,6:21,7:19,8:17,9:14,10:11,11:7,12:3,13:-1,14:-5,15:-8,16:-10,17:-12,18:-14,19:-16,20:-17,21:-18,22:-19,23:-20,24:-21,25:-22,26:-23,27:-23,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-23,37:-23,38:-22,39:-21,40:-20,41:-19,42:-18,43:-17,44:-16,45:-14,46:-12,47:-10,48:-8,49:-5,50:-1,51:3,52:7,53:11,54:14,55:17,56:19,57:21,58:22,59:23,60:23,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"noteFilterFreq",envelope:"decay 3",index:1},{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"decay 3"}]}}])},{name:"Slarmoo's Box Presets",presets:S([{name:"radio fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],effects:["detune","vibrato","bitcrusher","reverb"],detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:6.5,bitcrusherQuantization:43,reverb:0,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"0.12×",amplitude:7,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5×",amplitude:10,waveform:"triangle",pulseWidth:5},{frequency:"~1×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"anguished underworld",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],effects:["note filter","distortion","bitcrusher","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters1:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],distortion:43,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,reverb:0,fadeInSeconds:.075,fadeOutTicks:6,algorithm:"1 2←4 3←(5 6)",feedbackType:"1→5 2→6 3→4",feedbackAmplitude:4,operators:[{frequency:"0.25×",amplitude:14,waveform:"triangle",pulseWidth:5},{frequency:"0.5×",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:12,waveform:"trapezoid",pulseWidth:5},{frequency:"8×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"0.75×",amplitude:3,waveform:"ramp",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"decay -1",index:5},{target:"feedbackAmplitude",envelope:"wibble 3"}],isDrum:!1}},{name:"faint sorrow",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["detune","vibrato","echo","reverb"],detuneCents:22,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,echoSustain:100,echoDelayBeats:.667,reverb:87,fadeInSeconds:.075,fadeOutTicks:48,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bright sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["chord type","note filter","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters1:[{type:"low-pass",cutoffHz:1414.21,linearGain:1.4142}],echoSustain:71,echoDelayBeats:1.333,reverb:61,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,operators:[{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"5×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"wet sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["vibrato","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,reverb:23,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"decay 3",index:2}],isDrum:!1}},{name:"scream fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],effects:["detune","note filter","distortion","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],distortion:0,aliases:!1,reverb:87,fadeInSeconds:.135,fadeOutTicks:-3,algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:11,operators:[{frequency:"4×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"7×",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"detune",envelope:"swell 1"},{target:"feedbackAmplitude",envelope:"tremolo4"}],isDrum:!1}},{name:"anguished radio fm pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:62.5,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqSubFilters4:[],effects:["detune","note filter","bitcrusher","chorus","echo","reverb"],detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters2:[{type:"low-pass",cutoffHz:105.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters4:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],bitcrusherOctave:5.5,bitcrusherQuantization:43,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:58,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1←3 2←4",feedbackType:"1→3",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"juicy kick",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:[],fadeInSeconds:0,fadeOutTicks:-6,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}],isDrum:!1}},{name:"good vibes supersaw",generalMidi:!1,settings:{type:"supersaw",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,pitchEnvelopeStart:37,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!0,eqSubFilters0:[],effects:["transition type","detune","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,chorus:14,reverb:23,fadeInSeconds:.0263,fadeOutTicks:12,pulseWidth:26,decimalOffset:0,dynamism:33,spread:33,shape:17,envelopes:[{target:"supersawShape",envelope:"pitch"},{target:"detune",envelope:"tremolo2"}],isDrum:!1}},{name:"ethereal",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:36,vibrato:"custom",vibratoDepth:.12,vibratoDelay:36,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],noteSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],bitcrusherOctave:4.5,bitcrusherQuantization:43,chorus:71,reverb:100,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[43,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteVolume",envelope:"note size"},{target:"detune",envelope:"tremolo3"},{target:"bitcrusherQuantization",envelope:"note size"}],isDrum:!1}},{name:"walrus wuh",generalMidi:!1,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],effects:["note filter","bitcrusher","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],bitcrusherOctave:4,bitcrusherQuantization:71,chorus:86,reverb:32,fadeInSeconds:.0263,fadeOutTicks:48,pulseWidth:50,decimalOffset:0,dynamism:100,spread:50,shape:0,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"bitcrusherQuantization",envelope:"decay 3"}],isDrum:!1}},{name:"saturnic",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["vibrato","chorus","echo","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,chorus:100,echoSustain:71,echoDelayBeats:.5,reverb:45,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"glassy harmonics",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["detune","note filter","chorus","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],chorus:14,reverb:29,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[100,0,43,29,0,100,0,0,0,0,0,0,0,0,14,29,14,0,14,0,0,0,0,100,0,0,14,0],unison:"none",envelopes:[],isDrum:!1}},{name:"plucked",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],effects:["transition type","echo","reverb"],transition:"interrupt",clicklessTransition:!1,echoSustain:100,echoDelayBeats:1.333,reverb:26,fadeInSeconds:0,fadeOutTicks:24,harmonics:[100,86,57,0,0,57,57,57,86,57,57,43,43,43,29,29,14,14,29,14,14,14,29,100,57,43,14,14],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"jungle bass",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],effects:["vibrato","note filter","chorus","reverb"],vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],chorus:14,reverb:3,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1←3 2←4",feedbackType:"1↔2 3↔4",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:12,pitchEnvelopeEnd2:28,envelopeInverse2:!1,envelopes:[{target:"operatorFrequency",envelope:"swell 3",index:0},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"noteFilterFreq",envelope:"pitch",index:0}],isDrum:!1}},{name:"beach tide",generalMidi:!1,isNoise:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],effects:["transition type","chord type","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],chorus:14,reverb:32,fadeInSeconds:.0938,fadeOutTicks:72,harmonics:[86,86,71,57,57,43,43,43,29,29,14,14,14,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"pitch"}],isDrum:!1}},{name:"starlight",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],effects:["transition type","vibrato","bitcrusher","echo","reverb"],transition:"continue",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:5.5,bitcrusherQuantization:29,echoSustain:29,echoDelayBeats:1,reverb:13,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"distant monument",generalMidi:!1,isNoise:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],effects:["transition type","chord type","detune","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,bitcrusherOctave:2.5,bitcrusherQuantization:14,chorus:86,echoSustain:71,echoDelayBeats:1,reverb:35,fadeInSeconds:.0413,fadeOutTicks:12,wave:"modbox pnryshk a (u5)",unison:"detune",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"twang 1"}],isDrum:!1}},{name:"mercurial",generalMidi:!1,isNoise:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:88.39,linearGain:2.8284},{type:"peak",cutoffHz:1189.21,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:88.39,linearGain:2.8284},{type:"peak",cutoffHz:1189.21,linearGain:.1768}],eqSubFilters1:[],effects:["distortion","chorus"],distortion:43,aliases:!1,chorus:43,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"Custom",feedbackType:"1⟲",feedbackAmplitude:8,customAlgorithm:{mods:[[3],[5],[4],[],[6],[]],carrierCount:2},operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:2,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"linear",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"distortion",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:20,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"spectral phaser",generalMidi:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:74.33,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:10,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["note filter","distortion","bitcrusher","chorus","echo","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:9513.66,linearGain:5.6569},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:4},{type:"peak",cutoffHz:1414.21,linearGain:.125},{type:"peak",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:148.65,linearGain:4},{type:"peak",cutoffHz:88.39,linearGain:.1768}],noteSubFilters0:[{type:"peak",cutoffHz:9513.66,linearGain:5.6569},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:4},{type:"peak",cutoffHz:1414.21,linearGain:.125},{type:"peak",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:148.65,linearGain:4},{type:"peak",cutoffHz:88.39,linearGain:.1768}],distortion:14,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:14,chorus:100,echoSustain:86,echoDelayBeats:1,reverb:32,fadeInSeconds:0,fadeOutTicks:48,spectrum:[86,0,0,0,57,0,0,71,0,0,0,86,0,0,57,0,43,0,43,0,0,43,0,29,0,29,14,14,29,14],unison:"piano",envelopes:[{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.07,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.06,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.05,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.04,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.09,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.08,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:5},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:6},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.03,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:7},{target:"distortion",envelope:"none",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:.3}],isDrum:!1}},{name:"distant sorrow",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:5656.85,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:5656.85,linearGain:.5}],effects:["transition type","detune","vibrato","note filter","echo","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:0,vibrato:"custom",vibratoDepth:.2,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],echoSustain:100,echoDelayBeats:1,reverb:74,fadeInSeconds:0,fadeOutTicks:24,harmonics:[86,71,57,43,43,29,57,0,14,0,29,29,29,29,29,43,43,43,43,43,57,57,57,0,57,57,0,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"fall",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteFilterAllFreqs",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:2}],isDrum:!1}},{name:"metallic kick",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:28,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],effects:[],panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1→2→3→4",feedbackAmplitude:15,operators:[{frequency:"8×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"256x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"128x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"256x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang",inverse:!1,perEnvelopeSpeed:16,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:3.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"chimes",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],effects:["chord type","detune","note filter","bitcrusher","chorus","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:2378.41,linearGain:1}],bitcrusherOctave:4,bitcrusherQuantization:29,panDelay:0,chorus:29,echoSustain:86,echoDelayBeats:.667,reverb:84,fadeInSeconds:0,fadeOutTicks:48,harmonics:[0,100,71,71,29,0,57,86,0,0,0,0,71,29,0,0,57,0,0,86,0,0,0,100,0,100,0,57],unison:"none",stringSustain:36,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"swell",inverse:!1,perEnvelopeSpeed:4.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"stringSustain",envelope:"random",inverse:!1,perEnvelopeSpeed:16,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1,steps:14,seed:2,waveform:0},{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96}],isDrum:!1}},{name:"supersaw bass",generalMidi:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["note filter","distortion","chorus","reverb"],noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],distortion:14,aliases:!1,chorus:29,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,pulseWidth:50,decimalOffset:0,dynamism:100,spread:67,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"ascension",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqSubFilters1:[],effects:["granular","chorus","reverb"],granular:7,grainSize:44,grainAmounts:9,grainRange:37,chorus:71,reverb:19,fadeInSeconds:0,fadeOutTicks:24,spectrum:[43,0,0,57,0,0,14,100,29,0,0,100,29,0,100,0,57,29,86,14,14,100,14,0,14,14,0,0,43,0],unison:"voiced",envelopes:[{target:"noteVolume",envelope:"swell",inverse:!1,perEnvelopeSpeed:.7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.3,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:2,steps:6}],isDrum:!1}},{name:"liminal",generalMidi:!1,isNoise:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"high-pass",cutoffHz:840.9,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"high-pass",cutoffHz:840.9,linearGain:.25}],effects:["detune","vibrato","note filter","granular","distortion","bitcrusher","chorus","reverb"],detuneCents:8,vibrato:"custom",vibratoDepth:.48,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],granular:6,grainSize:49,grainAmounts:10,grainRange:40,distortion:57,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:0,chorus:29,reverb:48,fadeInSeconds:0,fadeOutTicks:72,pulseWidth:30,decimalOffset:0,dynamism:17,spread:83,shape:67,envelopes:[{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:17,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"pulseWidth",envelope:"twang",inverse:!1,perEnvelopeSpeed:1.3333,perEnvelopeLowerBound:.1,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"random",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:.2,perEnvelopeUpperBound:1,discrete:!0,steps:8,seed:2,waveform:2},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.3333,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:2,steps:2},{target:"noteVolume",envelope:"swell",inverse:!1,perEnvelopeSpeed:18,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"granular",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}}])},{name:"Slarmoo's Box Chip Presets",presets:S([{name:"Slarmoo's Pulse",midiProgram:80,settings:{type:"PWM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","chord type","detune"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:24,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"detune",envelope:"pitch"}],isDrum:!1}},{name:"discovery square",midiProgram:80,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["bitcrusher"],bitcrusherOctave:5.5,bitcrusherQuantization:57,fadeInSeconds:0,fadeOutTicks:-3,wave:"square",unison:"octave",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"VRC6 Sawtooth alt",midiProgram:81,settings:{type:"custom chip",volume:0,eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],effects:["transition type","chord type","pitch shift","detune","vibrato","distortion"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,distortion:0,aliases:!1,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:-1,1:-1,2:-1,3:-1,4:-1,5:-1,6:-1,7:-1,8:-1,9:-5,10:-5,11:-5,12:-4,13:-4,14:-4,15:-3,16:-3,17:-3,18:-7,19:-7,20:-6,21:-6,22:-5,23:-5,24:-4,25:-4,26:-4,27:-7,28:-7,29:-6,30:-6,31:-5,32:-5,33:-4,34:-4,35:-4,36:-8,37:-8,38:-7,39:-7,40:-6,41:-6,42:-5,43:-5,44:-4,45:-4,46:21,47:20,48:18,49:17,50:16,51:14,52:13,53:12,54:11,55:7,56:6,57:6,58:5,59:5,60:5,61:4,62:4,63:4},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"pulse arps",midiProgram:80,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.125},{type:"high-pass",cutoffHz:840.9,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:7,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.125},{type:"high-pass",cutoffHz:840.9,linearGain:2}],effects:["transition type","chord type","detune","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:64,chorus:43,echoSustain:71,echoDelayBeats:.333,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96},{target:"pulseWidth",envelope:"pitch",inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:24,pitchEnvelopeEnd:83},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,waveform:0,steps:2},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"chorus",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Slarmoo's Box Instrumental Presets",presets:S([{name:"rusty flute",midiProgram:73,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],effects:["transition type","detune","distortion","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:-7,distortion:14,aliases:!1,reverb:100,fadeInSeconds:0,fadeOutTicks:96,algorithm:"1←2←3←4",feedbackType:"3→4",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bitcrushed piano",midiProgram:4,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],effects:["transition type","detune","distortion","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,detuneCents:0,distortion:29,aliases:!0,bitcrusherOctave:4,bitcrusherQuantization:43,panDelay:0,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!0,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:.6,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"detuned piano",midiProgram:3,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],effects:["transition type","detune","vibrato","note filter","bitcrusher"],transition:"continue",clicklessTransition:!1,detuneCents:44,vibrato:"custom",vibratoDepth:.04,vibratoDelay:13,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1}],bitcrusherOctave:4,bitcrusherQuantization:14,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[86,86,71,71,57,57,43,29,14,29,29,29,29,29,29,29,29,43,43,43,43,43,29,14,14,0,0,0],unison:"custom",unisonVoices:2,unisonSpread:.26,unisonOffset:0,unisonExpression:1,unisonSign:1,stringSustain:79,envelopes:[{target:"detune",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:49,waveform:1},{target:"noteVolume",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1.6667,perEnvelopeLowerBound:.4,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"unison",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:20,waveform:1},{target:"noteFilterAllFreqs",envelope:"pitch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0}],isDrum:!1}},{name:"pan flute 2",midiProgram:75,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],effects:["transition type","note filter","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],bitcrusherOctave:6,bitcrusherQuantization:57,reverb:16,fadeInSeconds:.0125,fadeOutTicks:-6,spectrum:[100,29,14,14,57,0,0,71,0,86,57,43,57,71,14,29,14,14,14,100,71,14,14,14,14,86,43,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"bitcrusherQuantization",envelope:"note size"},{target:"noteVolume",envelope:"note size"}],isDrum:!1}},{name:"trumpet 2",midiProgram:56,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3049.17,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["detune","vibrato","note filter","distortion","chorus","reverb"],detuneCents:-64,vibrato:"custom",vibratoDepth:.68,vibratoDelay:17,vibratoSpeed:12,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],distortion:29,aliases:!1,chorus:14,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:9,operators:[{frequency:"0.75×",amplitude:14,waveform:"pulse width",pulseWidth:2},{frequency:"1×",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteFilterFreq",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"detune",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"harp 2",midiProgram:46,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:2.8284},{type:"high-pass",cutoffHz:62.5,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:2.8284},{type:"high-pass",cutoffHz:62.5,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["detune","note filter","echo","reverb"],detuneCents:-23,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:2.8284}],echoSustain:29,echoDelayBeats:1.083,reverb:74,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←4 2←5 3←6",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"6×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:2,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"detune",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteFilterFreq",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"operatorAmplitude",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:8,perEnvelopeLowerBound:.4,perEnvelopeUpperBound:1,index:0},{target:"noteVolume",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"electric guitar 1",midiProgram:30,settings:{type:"FM",volume:0,eqFilter:[{type:"high-pass",cutoffHz:1189.21,linearGain:2},{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"high-pass",cutoffHz:1189.21,linearGain:2},{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:["chord type","vibrato","note filter","distortion","reverb"],chord:"monophonic",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:4},{type:"high-pass",cutoffHz:594.6,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:4},{type:"high-pass",cutoffHz:594.6,linearGain:1}],distortion:100,aliases:!1,panDelay:0,reverb:6,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:0,waveform:"sawtooth",pulseWidth:5},{frequency:"4×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"0.25×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"vibratoDepth",envelope:"rise",inverse:!1,perEnvelopeSpeed:9,perEnvelopeLowerBound:1,perEnvelopeUpperBound:2,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"electric guitar 2",midiProgram:30,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:5.6569},{type:"high-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:5.6569},{type:"high-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:5656.85,linearGain:2}],effects:["chord type","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],chord:"monophonic",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:0,vibrato:"custom",vibratoDepth:.68,vibratoDelay:22,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:2.8284}],distortion:43,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:71,panDelay:0,chorus:14,reverb:13,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise",inverse:!1,perEnvelopeSpeed:.3333,perEnvelopeLowerBound:.8,perEnvelopeUpperBound:1,discrete:!1},{target:"pulseWidth",envelope:"twang",inverse:!0,perEnvelopeSpeed:2.25,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:.9,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}}])},{name:"Slarmoo's Box Novelty Presets",presets:S([{name:"bitcrushed artifacts",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["distortion","bitcrusher","echo"],distortion:71,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:86,echoSustain:0,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-6,harmonics:[0,0,0,0,0,0,0,57,0,0,0,0,0,0,100,43,0,0,14,86,0,14,0,0,0,0,0,86],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"whistle 2",midiProgram:78,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2110.37,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","pitch shift","note filter","distortion","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:11,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],distortion:43,aliases:!1,echoSustain:57,echoDelayBeats:1.083,reverb:87,fadeInSeconds:.0575,fadeOutTicks:-1,harmonics:[57,0,0,0,0,0,0,0,0,86,57,0,0,0,0,0,0,0,86,0,0,0,57,29,0,29,100,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"decay 1"}],isDrum:!1}},{name:"frog wuh",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqSubFilters1:[],effects:["pitch shift","note filter"],pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],fadeInSeconds:0,fadeOutTicks:-3,spectrum:[100,29,14,29,0,14,0,71,0,43,14,71,0,0,71,14,100,0,71,0,43,86,43,0,43,0,0,43,29,29],envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"noteFilterAllFreqs",envelope:"twang 1"}],isDrum:!1}},{name:"stationary harmonics",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],effects:["transition type","chord type","vibrato"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,0,57,29,14,57,29,29,14,14,29,43,14,14,14,0,14,29,29,14,0,0,14,0,0,29,14,14],unison:"stationary",envelopes:[],isDrum:!1}},{name:"dead souls",generalMidi:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!0,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],effects:["transition type","chord type","pitch shift","detune","distortion","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:-200,distortion:100,aliases:!1,chorus:14,reverb:35,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,71,43,43,29,29,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,14,14,0,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:24,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1.2,steps:16,seed:37,waveform:0},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"detune",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"distortion",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0}],isDrum:!1}},{name:"flutter",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:1},{type:"peak",cutoffHz:6727.17,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:1},{type:"peak",cutoffHz:6727.17,linearGain:2.8284}],effects:["transition type","chorus","reverb","ring mod"],transition:"interrupt",clicklessTransition:!1,ringMod:100,ringModHz:100,ringModWaveformIndex:0,panDelay:0,chorus:14,reverb:10,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1←3 2←4",feedbackType:"1⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"ringModulationHz",envelope:"fall",inverse:!1,perEnvelopeSpeed:1.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1.9},{target:"noteVolume",envelope:"blip",inverse:!1,perEnvelopeSpeed:.25,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"vinyl",generalMidi:!1,settings:{type:"noise",volume:0,eqFilter:[{type:"high-pass",cutoffHz:1414.21,linearGain:.3536},{type:"low-pass",cutoffHz:1189.21,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:1414.21,linearGain:.3536},{type:"low-pass",cutoffHz:1189.21,linearGain:.25}],effects:["transition type","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:250,linearGain:.5},{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:.5},{type:"low-pass",cutoffHz:8e3,linearGain:1}],distortion:14,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,chorus:29,echoSustain:14,echoDelayBeats:.083,reverb:32,fadeInSeconds:0,fadeOutTicks:24,wave:"crackling",unison:"none",envelopes:[],isDrum:!1}}])},{name:"LemmBox Presets",presets:S([{name:"HD triangle wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"lemmbox HD triangle",unison:"none",envelopes:[]}},{name:"HD sawtooth wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"lemmbox HD sawtooth",unison:"none",envelopes:[]}},{name:"HD rounded wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"lemmbox HD rounded",unison:"none",envelopes:[]}},{name:"trapasquare",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"lemmbox trapasquare",unison:"none",envelopes:[]}},{name:"supersaw sax",midiProgram:65,generalMidi:!0,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.0884}],effects:["panning","vibrato","note filter","reverb"],vibrato:"custom",vibratoDepth:.08,vibratoDelay:20,vibratoSpeed:7,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],pan:0,panDelay:10,reverb:29,fadeInSeconds:.0263,fadeOutTicks:24,pulseWidth:16,decimalOffset:0,dynamism:83,spread:8,shape:33,envelopes:[{target:"pulseWidth",envelope:"swell -1"}],isDrum:!1}}])},{name:"Misc Modded Presets",presets:S([{name:"nes white (UltraBox)",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:[],fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit white",envelopes:[]}},{name:"nes ping (UltraBox)",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:[],fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit metallic",envelopes:[]}},{name:"sandbox netsky hollow",generalMidi:!1,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"arpeggio",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",spectrum:[100,100,100,100,100,100,100,100,100,100,100,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45]}},{name:"sandbox tv static",generalMidi:!1,isNoise:!0,midiSubharmonicOctaves:1,settings:{type:"noise",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:40,filterEnvelope:"steady",wave:"static"}},{name:"Hollow Retro Riser (MidBox)",isNoise:!0,generalMidi:!1,settings:{type:"noise",eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["bitcrusher","chorus","echo","reverb"],bitcrusherOctave:4,bitcrusherQuantization:43,panDelay:10,chorus:29,echoSustain:57,echoDelayBeats:.5,reverb:29,fadeInSeconds:0,fadeOutTicks:-3,wave:"hollow",unison:"none",envelopes:[]}},{name:"Heavy Knock (AbyssBox)",generalMidi:!1,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["vibrato","note filter","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:3828.43,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:3828.43,linearGain:.5}],panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,wave:"white",unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"spectrum wind (Slarmoo's Box)",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],reverb:87,fadeInSeconds:0,fadeOutTicks:12,spectrum:[29,0,0,0,0,0,0,71,0,0,0,14,57,14,0,57,57,0,0,57,0,71,14,29,100,71,0,100,14,86],unison:"none",envelopes:[],isDrum:!0}},{name:"hi-hat (Slarmoo's Box)",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters2:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters3:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],effects:[],fadeInSeconds:0,fadeOutTicks:-3,wave:"white",unison:"none",envelopes:[],isDrum:!0}},{name:"air hiss (Slarmoo's Box)",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["note filter","distortion","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],distortion:71,aliases:!1,reverb:6,fadeInSeconds:0,fadeOutTicks:-24,spectrum:[57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,57,71,86,100,100,100,100,86,71,71,43],unison:"none",envelopes:[],isDrum:!0}},{name:"shaker (Slarmoo's Box)",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"high-pass",cutoffHz:4e3,linearGain:5.6569},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"low-pass",cutoffHz:11313.71,linearGain:8},{type:"peak",cutoffHz:2378.41,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:4e3,linearGain:5.6569},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"low-pass",cutoffHz:11313.71,linearGain:8},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["transition type","detune","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,distortion:43,aliases:!1,bitcrusherOctave:2.5,bitcrusherQuantization:43,chorus:43,echoSustain:29,echoDelayBeats:1,reverb:23,fadeInSeconds:.0263,fadeOutTicks:96,wave:"deep",unison:"none",envelopes:[{target:"detune",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:12,inverse:!1,perEnvelopeSpeed:64,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!0}},{name:"White Noise (VoxBox)",isNoise:!0,settings:{type:"noise",volume:-5,eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"white",envelopes:[],isDrum:!0}}])},{name:"CoolTasDude's JukeBox Presets",presets:S([{name:"electrodonk",generalMidi:!1,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"high-pass",cutoffHz:210.22,linearGain:2},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,preset:1728,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"high-pass",cutoffHz:210.22,linearGain:2},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],effects:["panning","chord type","vibrato","note filter","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],noteSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],pan:-42,panDelay:0,reverb:19,fadeInSeconds:0,fadeOutTicks:-6,pulseWidth:38,decimalOffset:0,unison:"inject",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",inverse:!1,perEnvelopeSpeed:1.25,perEnvelopeLowerBound:1,perEnvelopeUpperBound:1.5,discrete:!1},{target:"pulseWidth",envelope:"punch",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:1,perEnvelopeUpperBound:0,discrete:!1},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:.9,discrete:!1,waveform:3,steps:2}],isDrum:!1}},{name:"epic space chip",generalMidi:!1,settings:{type:"custom chip",volume:2,eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142},{type:"high-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142},{type:"high-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:2.8284}],eqSubFilters1:[],effects:["panning","detune","chorus","reverb"],detuneCents:0,pan:-30,panDelay:10,chorus:86,reverb:45,fadeInSeconds:0,fadeOutTicks:-6,wave:"square",unison:"none",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:-24,24:-24,25:-24,26:-24,27:0,28:0,29:0,30:0,31:0,32:24,33:24,34:24,35:24,36:24,37:24,38:24,39:24,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:24,49:24,50:24,51:24,52:24,53:24,54:24,55:24,56:24,57:24,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"panning",envelope:"lfo",inverse:!0,perEnvelopeSpeed:.6,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:0,steps:2}],isDrum:!1}},{name:"deep bwah",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:1.4142}],eqSubFilters1:[],effects:["panning","pitch shift","distortion"],pitchShiftSemitones:13,distortion:57,aliases:!1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-24,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare",inverse:!0,perEnvelopeSpeed:7.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"pitchShift",envelope:"rise",inverse:!1,perEnvelopeSpeed:1.3333,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"night triangle pulse 1",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","chord type","note filter","chorus","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,strumParts:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],pan:0,panDelay:10,chorus:14,reverb:3,fadeInSeconds:0,fadeOutTicks:96,unison:"none",wave:"square",customChipWave:{0:16,1:17,2:17,3:17,4:17,5:17,6:17,7:12,8:11,9:9,10:8,11:7,12:5,13:3,14:1,15:0,16:-1,17:-3,18:-5,19:-6,20:-7,21:-9,22:-10,23:-12,24:-13,25:-14,26:-15,27:-16,28:-16,29:-16,30:-16,31:-16,32:-16,33:-16,34:-16,35:-16,36:-16,37:-15,38:-13,39:-12,40:-11,41:-9,42:-7,43:-6,44:-4,45:-3,46:-2,47:0,48:1,49:3,50:4,51:6,52:7,53:8,54:9,55:11,56:13,57:14,58:16,59:16,60:16,61:16,62:16,63:16},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"night triangle pulse 2",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","chord type","note filter","chorus","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,strumParts:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],pan:0,panDelay:10,chorus:43,reverb:19,fadeInSeconds:0,fadeOutTicks:96,unison:"none",wave:"square",customChipWave:{0:24,1:24,2:24,3:24,4:24,5:24,6:24,7:13,8:11,9:9,10:8,11:7,12:5,13:3,14:1,15:0,16:-1,17:-3,18:-5,19:-6,20:-7,21:-9,22:-10,23:-12,24:-13,25:-14,26:-15,27:-16,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:-16,37:-15,38:-13,39:-12,40:-11,41:-9,42:-7,43:-6,44:-4,45:-3,46:-2,47:0,48:1,49:3,50:4,51:6,52:7,53:8,54:9,55:11,56:13,57:14,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"neglected sawtooth",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],effects:["panning","transition type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,vibrato:"custom",vibratoDepth:.12,vibratoDelay:8,vibratoSpeed:4,vibratoType:0,pan:0,panDelay:10,chorus:14,reverb:19,fadeInSeconds:0,fadeOutTicks:-1,unison:"custom",unisonVoices:2,unisonSpread:4.894,unisonOffset:3,unisonExpression:.8,unisonSign:.5,unisonBuzzes:!1,wave:"1/4 pulse",customChipWave:{0:-24,1:-24,2:-23,3:-22,4:-21,5:-20,6:-19,7:-16,8:-12,9:-6,10:-2,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:-23,26:-20,27:-14,28:-9,29:-5,30:-5,31:-2,32:16,33:16,34:16,35:16,36:4,37:4,38:4,39:4,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:6,52:4,53:1,54:-2,55:-4,56:-7,57:-11,58:-13,59:-13,60:-13,61:-14,62:-14,63:-13},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"FM hard bass",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:62.5,linearGain:8},{type:"peak",cutoffHz:250,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:62.5,linearGain:8},{type:"peak",cutoffHz:250,linearGain:.7071}],effects:["panning","chord type","pitch shift","note filter"],chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,pitchShiftSemitones:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.0884}],pan:0,panDelay:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"(1 2)←(3 4)",feedbackType:"1→2→3→4",feedbackAmplitude:0,operators:[{frequency:"0.75×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"0.5×",amplitude:12,waveform:"pulse width",pulseWidth:6},{frequency:"~2×",amplitude:6,waveform:"sawtooth",pulseWidth:5},{frequency:"3×",amplitude:0,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"operatorAmplitude",envelope:"linear",inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:2},{target:"feedbackAmplitude",envelope:"flare",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"alien choir",generalMidi:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],effects:["panning","note filter","bitcrusher","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],bitcrusherOctave:2.5,bitcrusherQuantization:0,pan:0,panDelay:10,chorus:100,reverb:32,fadeInSeconds:.0263,fadeOutTicks:48,pulseWidth:50,decimalOffset:0,dynamism:100,spread:50,shape:0,envelopes:[{target:"noteVolume",envelope:"punch",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"bitcrusherQuantization",envelope:"decay",inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"FM Snare",generalMidi:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"peak",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:1.4142}],eqSubFilters1:[],effects:["panning","pitch shift","distortion"],pitchShiftSemitones:24,distortion:100,aliases:!1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←2←3←4←5←6",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"fall",inverse:!1,perEnvelopeSpeed:3.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"pitchShift",envelope:"fall",inverse:!1,perEnvelopeSpeed:13,perEnvelopeLowerBound:0,perEnvelopeUpperBound:2,discrete:!1},{target:"noteVolume",envelope:"linear",inverse:!1,perEnvelopeSpeed:64,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"fall",inverse:!1,perEnvelopeSpeed:64,perEnvelopeLowerBound:.1,perEnvelopeUpperBound:1.2,discrete:!1},{target:"noteVolume",envelope:"fall",inverse:!1,perEnvelopeSpeed:5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"subworld bass",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:.7071},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:840.9,linearGain:.7071},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],effects:["panning","transition type","chorus"],transition:"interrupt",clicklessTransition:!1,pan:0,panDelay:0,chorus:71,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"octave",customChipWave:{0:-20,1:-20,2:-20,3:-20,4:-14,5:-14,6:-14,7:-14,8:-8,9:-8,10:-8,11:-8,12:0,13:0,14:0,15:0,16:5,17:5,18:5,19:5,20:0,21:0,22:0,23:0,24:-4,25:-4,26:-4,27:-4,28:-4,29:-4,30:-4,31:-4,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:-24,39:-24,40:-24,41:-24,42:-24,43:-24,44:-24,45:-24,46:-24,47:-24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:-24,55:-24,56:-24,57:-24,58:-24,59:-24,60:-24,61:-24,62:-24,63:-24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"hypersonic pluck",generalMidi:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:4},{type:"low-pass",cutoffHz:4e3,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"high-pass",cutoffHz:353.55,linearGain:4},{type:"low-pass",cutoffHz:4e3,linearGain:1}],eqSubFilters1:[],effects:["panning","pitch shift","distortion","chorus","reverb"],pitchShiftSemitones:7,distortion:86,aliases:!1,pan:0,panDelay:10,chorus:57,reverb:23,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"Custom",feedbackType:"1⟲ 2⟲",feedbackAmplitude:15,customAlgorithm:{mods:[[3],[4],[],[5],[],[]],carrierCount:2},operators:[{frequency:"~1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"0.5×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"8×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"fall",inverse:!1,perEnvelopeSpeed:3.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"pitchShift",envelope:"fall",inverse:!1,perEnvelopeSpeed:64,perEnvelopeLowerBound:0,perEnvelopeUpperBound:2,discrete:!1},{target:"noteVolume",envelope:"linear",inverse:!1,perEnvelopeSpeed:6,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"fall",inverse:!1,perEnvelopeSpeed:64,perEnvelopeLowerBound:.1,perEnvelopeUpperBound:1.2,discrete:!1},{target:"noteVolume",envelope:"fall",inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"operatorAmplitude",envelope:"fall",inverse:!1,perEnvelopeSpeed:40,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:1}],isDrum:!1}},{name:"otherworldly wub",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:2828.43,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:2828.43,linearGain:.3536}],effects:["panning","transition type","chord type","vibrato","note filter","reverb"],transition:"slide",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,vibrato:"heavy",vibratoDepth:.45,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],pan:0,panDelay:10,reverb:6,fadeInSeconds:0,fadeOutTicks:48,wave:"haileybox test1",unison:"spinner",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:3,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"rise",inverse:!1,perEnvelopeSpeed:9,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"John Waveform",generalMidi:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:1469.4,linearGain:1}],eqFilterType:!0,eqSimpleCut:5,eqSimplePeak:3,envelopeSpeed:12,eqSubFilters1:[],effects:["panning","chorus"],pan:0,panDelay:0,chorus:100,fadeInSeconds:0,fadeOutTicks:-6,algorithm:"1 2←5 (3 4)←6",feedbackType:"1→2→3→4→5→6",feedbackAmplitude:0,operators:[{frequency:"0.75×",amplitude:8,waveform:"ramp",pulseWidth:5},{frequency:"1×",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:11,waveform:"trapezoid",pulseWidth:5},{frequency:"~1×",amplitude:9,waveform:"pulse width",pulseWidth:3},{frequency:"2×",amplitude:7,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:6,waveform:"pulse width",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"wibble",inverse:!1,perEnvelopeSpeed:.2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:5}],isDrum:!1}},{name:"space saw narrow",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,eqSubFilters1:[],effects:["panning","vibrato","chorus","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:0,chorus:29,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,wave:"zefbox saw narrow",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"space whisp",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:1},{type:"peak",cutoffHz:88.39,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:1},{type:"peak",cutoffHz:88.39,linearGain:.5}],effects:["panning","note filter","distortion","echo"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768}],noteSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768}],distortion:0,aliases:!1,pan:0,panDelay:0,echoSustain:57,echoDelayBeats:.917,fadeInSeconds:0,fadeOutTicks:6,wave:"modbox curved sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:4,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"linear",inverse:!1,perEnvelopeSpeed:20,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"star strings",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.25},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:2378.41,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.25},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:2378.41,linearGain:5.6569}],effects:["panning","note filter","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.7071}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:2828.43,linearGain:.1768}],noteSubFilters2:[{type:"low-pass",cutoffHz:2828.43,linearGain:.1768}],noteSubFilters3:[{type:"low-pass",cutoffHz:2828.43,linearGain:.1768}],pan:0,panDelay:10,chorus:43,reverb:32,fadeInSeconds:.0125,fadeOutTicks:-3,algorithm:"1 2 3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:1,operators:[{frequency:"0.5×",amplitude:15,waveform:"pulse width",pulseWidth:0},{frequency:"0.75×",amplitude:14,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:10,waveform:"triangle",pulseWidth:5},{frequency:"3.5×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:20,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"feedbackAmplitude",envelope:"decay",inverse:!1,perEnvelopeSpeed:.4,perEnvelopeLowerBound:.9,perEnvelopeUpperBound:1.3,discrete:!1}],isDrum:!1}},{name:"vibrate pulse 1",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],effects:["panning","pitch shift"],pitchShiftSemitones:13,pan:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:48,wave:"square",unison:"custom",unisonVoices:2,unisonSpread:3.5,unisonOffset:7,unisonExpression:.53,unisonSign:1,customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:24,12:24,13:24,14:24,15:24,16:24,17:24,18:24,19:24,20:24,21:24,22:-24,23:-24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:-24,32:24,33:24,34:24,35:24,36:24,37:24,38:24,39:24,40:24,41:24,42:24,43:-24,44:-24,45:-24,46:-24,47:-24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"pitchShift",envelope:"fall",inverse:!1,perEnvelopeSpeed:40,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"vibrate pulse 2",generalMidi:!1,settings:{type:"custom chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536}],effects:["panning","transition type","chord type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,pan:0,panDelay:0,chorus:29,reverb:19,fadeInSeconds:0,fadeOutTicks:48,wave:"square",unison:"vibrate",customChipWave:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:24,12:24,13:24,14:24,15:24,16:24,17:24,18:24,19:24,20:24,21:24,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:24,30:24,31:24,32:24,33:24,34:24,35:24,36:24,37:24,38:24,39:24,40:24,41:24,42:24,43:24,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:24,52:24,53:24,54:24,55:24,56:24,57:24,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"mechanical guitar",generalMidi:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:12,algorithm:"Custom",feedbackType:"Custom",feedbackAmplitude:12,customAlgorithm:{mods:[[3,4],[3],[5],[],[],[]],carrierCount:3},customFeedback:{mods:[[],[4],[],[],[],[]]},operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:14,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:14,waveform:"pulse width",pulseWidth:4},{frequency:"1×",amplitude:11,waveform:"triangle",pulseWidth:5},{frequency:"3.5×",amplitude:12,waveform:"quasi-sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"exosphere",generalMidi:!1,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4787.19,linearGain:1}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:2,envelopeSpeed:12,eqSubFilters1:[],effects:["panning","transition type","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.0884}],distortion:86,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:0,pan:0,panDelay:0,chorus:86,echoSustain:71,echoDelayBeats:.75,reverb:13,fadeInSeconds:0,fadeOutTicks:6,pulseWidth:50,decimalOffset:0,unison:"fifth",envelopes:[],isDrum:!1}},{name:"activated pulse",generalMidi:!1,settings:{type:"custom chip",volume:-2,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5},{type:"high-pass",cutoffHz:297.3,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5},{type:"high-pass",cutoffHz:297.3,linearGain:.25}],effects:["panning","transition type","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pan:0,panDelay:10,chorus:86,echoSustain:43,echoDelayBeats:.583,reverb:23,fadeInSeconds:0,fadeOutTicks:-1,wave:"double pulse",unison:"none",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:24,24:24,25:24,26:24,27:24,28:24,29:24,30:24,31:24,32:24,33:24,34:24,35:24,36:24,37:24,38:24,39:24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:24,49:24,50:24,51:24,52:24,53:24,54:24,55:24,56:24,57:24,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"dramatic strums",generalMidi:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],effects:["panning","chord type","detune","note filter","chorus","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,detuneCents:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:2378.41,linearGain:1}],pan:0,panDelay:10,chorus:71,echoSustain:86,echoDelayBeats:.667,reverb:84,fadeInSeconds:0,fadeOutTicks:48,pulseWidth:50,decimalOffset:0,dynamism:100,spread:50,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96}],isDrum:!1}},{name:"electric sand guitar",generalMidi:!1,settings:{type:"FM",volume:3,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125},{type:"high-pass",cutoffHz:297.3,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.125},{type:"high-pass",cutoffHz:297.3,linearGain:.1768}],effects:["panning","distortion","bitcrusher","reverb"],distortion:71,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:0,pan:0,panDelay:0,reverb:3,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1 2←(3 4)",feedbackType:"4⟲",feedbackAmplitude:0,operators:[{frequency:"0.5×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:14,waveform:"triangle",pulseWidth:5},{frequency:"15×",amplitude:4,waveform:"pulse width",pulseWidth:8},{frequency:"~1×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"fall",inverse:!1,perEnvelopeSpeed:5.5,perEnvelopeLowerBound:.1,perEnvelopeUpperBound:.9,discrete:!1,index:3}],isDrum:!1}},{name:"flattened pulse",generalMidi:!1,settings:{type:"PWM",volume:3,eqFilter:[{type:"low-pass",cutoffHz:2110.37,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:3,envelopeSpeed:12,eqSubFilters1:[],effects:["panning","chorus","reverb"],pan:0,panDelay:0,chorus:57,reverb:35,fadeInSeconds:0,fadeOutTicks:-3,pulseWidth:38,decimalOffset:0,unison:"detune",envelopes:[],isDrum:!1}},{name:"harmonic bass",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],effects:["panning","transition type","chord type","note filter","bitcrusher","reverb"],transition:"slide",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.1768}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.1768}],bitcrusherOctave:6,bitcrusherQuantization:71,pan:-38,panDelay:0,reverb:3,fadeInSeconds:0,fadeOutTicks:6,harmonics:[86,71,100,86,57,86,100,71,86,57,86,86,71,57,57,57,43,43,43,57,57,43,43,43,29,29,29,29],unison:"none",envelopes:[{target:"panning",envelope:"pitch",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:1,perEnvelopeUpperBound:.5,discrete:!1,pitchEnvelopeStart:14,pitchEnvelopeEnd:36},{target:"panning",envelope:"pitch",inverse:!0,perEnvelopeSpeed:1,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1,discrete:!1,pitchEnvelopeStart:14,pitchEnvelopeEnd:36}],isDrum:!1}},{name:"shell whistle",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"peak",cutoffHz:2378.41,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"peak",cutoffHz:2378.41,linearGain:.3536},{type:"peak",cutoffHz:594.6,linearGain:2}],effects:["panning","chord type","pitch shift","note filter","chorus","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,pitchShiftSemitones:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],pan:0,panDelay:0,chorus:86,reverb:3,fadeInSeconds:.0938,fadeOutTicks:12,harmonics:[71,0,0,0,43,0,14,86,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,100,0,57,0,14],unison:"inject",stringSustain:57,envelopes:[{target:"chorus",envelope:"swell",inverse:!0,perEnvelopeSpeed:10,perEnvelopeLowerBound:.9,perEnvelopeUpperBound:1.1,discrete:!1},{target:"none",envelope:"none",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"blent chip",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2},{type:"peak",cutoffHz:1414.21,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:28,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2},{type:"peak",cutoffHz:1414.21,linearGain:.7071}],effects:["panning","note filter","chorus","echo"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.0884}],pan:0,panDelay:0,chorus:57,echoSustain:29,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-6,wave:"glitch",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:224,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"linear",inverse:!1,perEnvelopeSpeed:.04,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"burnt speaker",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:.3536}],effects:["panning","note filter"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:.3536}],pan:0,panDelay:0,fadeInSeconds:.0938,fadeOutTicks:12,algorithm:"(1 2)←3←4",feedbackType:"1→2",feedbackAmplitude:3,operators:[{frequency:"0.25×",amplitude:14,waveform:"pulse width",pulseWidth:5},{frequency:"11×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:14,waveform:"pulse width",pulseWidth:5},{frequency:"6×",amplitude:1,waveform:"pulse width",pulseWidth:1},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",inverse:!1,perEnvelopeSpeed:5.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:1.6667,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:2},{target:"operatorFrequency",envelope:"punch",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:.3,perEnvelopeUpperBound:.6,discrete:!1,index:2},{target:"feedbackAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:4.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"slidey saw",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],effects:["panning","pitch shift","vibrato","note filter","distortion","chorus"],pitchShiftSemitones:0,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:5.6569},{type:"high-pass",cutoffHz:420.45,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:5.6569},{type:"high-pass",cutoffHz:420.45,linearGain:2}],distortion:100,aliases:!1,pan:0,panDelay:0,chorus:100,fadeInSeconds:0,fadeOutTicks:6,harmonics:[29,14,14,14,14,14,29,14,29,29,29,57,43,57,86,100,71,14,14,29,14,14,14,0,14,0,0,0],unison:"none",envelopes:[],isDrum:!1}},{name:"focused crystal",generalMidi:!1,settings:{type:"FM",volume:-11,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","vibrato","note filter","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],chorus:29,echoSustain:43,echoDelayBeats:1.083,reverb:68,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"6×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"feedbackAmplitude",envelope:"twang 1"}],isDrum:!1}},{name:"monument",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:2},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],effects:["panning","transition type","chord type","distortion","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,distortion:0,aliases:!1,pan:0,panDelay:10,chorus:86,echoSustain:29,echoDelayBeats:1,reverb:35,fadeInSeconds:.0413,fadeOutTicks:12,wave:"modbox pnryshk a (u5)",unison:"octave",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteVolume",envelope:"punch",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:.8,perEnvelopeUpperBound:1.4,discrete:!1},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:1,perEnvelopeUpperBound:1.3,discrete:!1}],isDrum:!1}},{name:"boosted synth kick",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],effects:["panning","detune"],detuneCents:0,pan:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"6×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang",inverse:!1,perEnvelopeSpeed:24,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:0},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"operatorFrequency",envelope:"note size",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:0}],isDrum:!1}},{name:"electric gitrumpet 2",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:1.4142}],eqSubFilters1:[],effects:["panning","detune","vibrato","note filter","distortion","chorus","reverb"],detuneCents:0,vibrato:"custom",vibratoDepth:.68,vibratoDelay:17,vibratoSpeed:12,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],distortion:100,aliases:!1,pan:0,panDelay:0,chorus:43,reverb:13,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:9,operators:[{frequency:"0.75×",amplitude:14,waveform:"pulse width",pulseWidth:2},{frequency:"1×",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare",inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:3},{target:"feedbackAmplitude",envelope:"swell",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"operatorFrequency",envelope:"decay",inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:0},{target:"noteFilterFreq",envelope:"swell",inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:2},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"detune",envelope:"note size",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"decimated kick",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:.5}],effects:["panning","pitch shift","vibrato","distortion","bitcrusher","chorus","echo","reverb"],pitchShiftSemitones:12,vibrato:"custom",vibratoDepth:.92,vibratoDelay:18,vibratoSpeed:30,vibratoType:0,distortion:29,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:57,pan:0,panDelay:10,chorus:0,echoSustain:43,echoDelayBeats:.5,reverb:0,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:0},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"pitchShift",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"pitchShift",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"operatorFrequency",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:0}],isDrum:!1}},{name:"epic vibes supersaw",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.3536},{type:"peak",cutoffHz:125,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:.3536},{type:"peak",cutoffHz:125,linearGain:1.4142}],effects:["panning","chord type","vibrato","note filter","distortion","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:4787.19,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:4787.19,linearGain:1}],distortion:71,aliases:!1,pan:0,panDelay:0,reverb:10,fadeInSeconds:.0125,fadeOutTicks:-6,wave:"zefbox saw wide",unison:"fifth",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"execute pulse",generalMidi:!1,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:2378.41,linearGain:2},{type:"peak",cutoffHz:3363.59,linearGain:1.4142},{type:"high-pass",cutoffHz:88.39,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:.3536},{type:"peak",cutoffHz:2378.41,linearGain:2},{type:"peak",cutoffHz:3363.59,linearGain:1.4142},{type:"high-pass",cutoffHz:88.39,linearGain:1}],effects:["panning","detune","note filter","reverb"],detuneCents:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.125}],pan:0,panDelay:17,reverb:26,fadeInSeconds:0,fadeOutTicks:24,unison:"custom",unisonVoices:1,unisonSpread:1,unisonOffset:1,unisonExpression:1.4,unisonSign:-.5,unisonBuzzes:!1,pulseWidth:44,decimalOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"noteVolume",envelope:"twang 2"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"},{target:"unison",envelope:"twang 1"}],isDrum:!1}},{name:"execute lead",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:0,eqSubFilters0:[],effects:["panning","transition type","chord type","vibrato","note filter","chorus"],transition:"normal",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:9,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],noteSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],pan:0,panDelay:10,chorus:29,fadeInSeconds:0,fadeOutTicks:72,unison:"custom",unisonVoices:2,unisonSpread:0,unisonOffset:0,unisonExpression:1,unisonSign:1,unisonBuzzes:!1,wave:"modbox pnryshk a (u5)",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"}],isDrum:!1}},{name:"execute whisp",generalMidi:!1,settings:{type:"chip",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[],effects:["panning","transition type","chord type","vibrato","note filter","chorus"],transition:"normal",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:9,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],noteSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],pan:0,panDelay:10,chorus:29,fadeInSeconds:.1575,fadeOutTicks:96,unison:"custom",unisonVoices:1,unisonSpread:0,unisonOffset:0,unisonExpression:1,unisonSign:1,unisonBuzzes:!1,wave:"zefbox pulse",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:9,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"}],isDrum:!1}},{name:"static guitar",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],effects:["panning","vibrato","note filter","distortion","chorus"],vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:5.6569},{type:"high-pass",cutoffHz:420.45,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:5.6569},{type:"high-pass",cutoffHz:420.45,linearGain:2}],distortion:100,aliases:!1,pan:0,panDelay:10,chorus:100,fadeInSeconds:0,fadeOutTicks:6,harmonics:[29,14,14,14,14,14,29,14,29,29,29,57,43,57,86,100,71,14,14,29,14,14,14,0,14,0,0,0],unison:"none",envelopes:[],isDrum:!1}}])},{name:"JukeBox Guest Presets",presets:S([{name:"enhanced supersaw - Perriot",generalMidi:!1,settings:{type:"FM",volume:-13,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[],effects:["panning","note filter"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:24,algorithm:"(1 2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"2×",amplitude:14,waveform:"trapezoid",pulseWidth:5},{frequency:"~2×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:10,waveform:"pulse width",pulseWidth:5},{frequency:"8×",amplitude:3,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"none",envelope:"none"}],isDrum:!1}},{name:"unnamed string - Perriot",generalMidi:!1,settings:{type:"Picked String",volume:-10,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[],effects:["panning","note filter","distortion","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:1.4142}],distortion:14,aliases:!1,pan:0,panDelay:10,chorus:29,reverb:6,fadeInSeconds:0,fadeOutTicks:96,harmonics:[71,86,86,86,71,71,57,43,43,43,43,43,71,71,71,71,71,71,71,71,57,43,43,43,43,43,43,29],unison:"none",stringSustain:50,envelopes:[],isDrum:!1}},{name:"heavenly choir - Perriot",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[],effects:["panning","chord type","note filter","chorus","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:1}],pan:0,panDelay:10,chorus:100,reverb:61,fadeInSeconds:.0413,fadeOutTicks:96,harmonics:[71,86,86,71,71,71,43,43,43,43,29,29,29,29,43,43,43,14,43,43,43,29,29,14,14,14,14,14],unison:"fifth",envelopes:[],isDrum:!1}},{name:"hollow shaft - Perriot",generalMidi:!1,settings:{type:"spectrum",volume:-8,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters1:[],effects:["panning","transition type","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],pan:0,panDelay:10,chorus:100,reverb:29,fadeInSeconds:.0263,fadeOutTicks:-3,unison:"custom",unisonVoices:2,unisonSpread:4,unisonOffset:4,unisonExpression:1,unisonSign:1,unisonBuzzes:!1,spectrum:[57,0,14,57,57,0,29,29,71,0,14,0,14,43,71,0,29,0,29,57,0,29,29,29,0,0,0,14,14,0],envelopes:[{target:"chorus",envelope:"swell 1"},{target:"chorus",envelope:"swell 1"},{target:"noteVolume",envelope:"swell -1"}],isDrum:!1}},{name:"expired glass - Perriot",generalMidi:!1,settings:{type:"FM",volume:-9,eqFilter:[{type:"peak",cutoffHz:1189.21,linearGain:2.8284},{type:"low-pass",cutoffHz:6727.17,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"peak",cutoffHz:1189.21,linearGain:2.8284},{type:"low-pass",cutoffHz:6727.17,linearGain:4}],effects:["panning","note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-24,algorithm:"(1 2)←3←4",feedbackType:"2⟲ 3⟲ 4⟲",feedbackAmplitude:0,operators:[{frequency:"100×",amplitude:4,waveform:"pulse width",pulseWidth:5},{frequency:"0.12×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"hardware kick - Mathiew",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[],effects:["panning","transition type","note filter","bitcrusher","reverb"],transition:"normal",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:2}],noteSubFilters1:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],bitcrusherOctave:6,bitcrusherQuantization:0,pan:2,panDelay:0,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"50×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"none",envelope:"note size",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:2},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,index:3},{target:"feedbackAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"bit wobble - LemonLime",generalMidi:!1,settings:{type:"chip",volume:4,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.5}],effects:["panning","transition type","chord type","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:17,pan:0,panDelay:10,echoSustain:29,echoDelayBeats:1.5,reverb:29,fadeInSeconds:.0125,fadeOutTicks:24,wave:"lemmbox trapasquare",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:512,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteVolume",envelope:"twang 3"}],isDrum:!1}},{name:"muffled pulse - LemonLime",generalMidi:!1,settings:{type:"custom chip",volume:-7,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.3536}],effects:["panning","transition type","vibrato","note filter","distortion","bitcrusher"],transition:"slide",clicklessTransition:!1,vibrato:"custom",vibratoDepth:.2,vibratoDelay:19,vibratoSpeed:4,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],distortion:29,aliases:!0,bitcrusherOctave:6.5,bitcrusherQuantization:29,pan:0,panDelay:0,fadeInSeconds:.0413,fadeOutTicks:24,wave:"square",unison:"none",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:24,25:24,26:24,27:24,28:24,29:24,30:24,31:24,32:24,33:24,34:24,35:24,36:24,37:24,38:24,39:24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:24,49:24,50:24,51:24,52:24,53:24,54:24,55:24,56:24,57:24,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[{target:"none",envelope:"swell -1"}],isDrum:!1}},{name:"cave oo - LemonLime",generalMidi:!1,settings:{type:"FM6op",volume:-6,eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:1.4142}],effects:["panning","transition type","chord type","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,echoSustain:57,echoDelayBeats:1.5,reverb:6,fadeInSeconds:.0125,fadeOutTicks:24,algorithm:"1←2←3←4←5←6",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang 3"}],isDrum:!1}},{name:"summoning bell - LemonLime",generalMidi:!1,settings:{type:"Picked String",volume:-15,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[],effects:["panning","chord type","detune","vibrato","chorus","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,strumParts:1,detuneCents:-40,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:29,reverb:100,fadeInSeconds:0,fadeOutTicks:96,harmonics:[100,0,0,100,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",stringSustain:71,envelopes:[],isDrum:!1}},{name:"void 1 - LemonLime",generalMidi:!1,settings:{type:"FM6op",volume:-23,eqFilter:[{type:"low-pass",cutoffHz:125,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:125,linearGain:2}],effects:["panning","vibrato","note filter","distortion","chorus","echo","reverb"],vibrato:"custom",vibratoDepth:.28,vibratoDelay:19,vibratoSpeed:2,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:1},{type:"high-pass",cutoffHz:420.45,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:840.9,linearGain:1},{type:"high-pass",cutoffHz:420.45,linearGain:1.4142}],distortion:0,aliases:!1,pan:0,panDelay:0,chorus:14,echoSustain:57,echoDelayBeats:1.5,reverb:58,fadeInSeconds:.0263,fadeOutTicks:-6,algorithm:"1 2 3 (4 5)←6",feedbackType:"3→4",feedbackAmplitude:0,operators:[{frequency:"0.5×",amplitude:6,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"0.12×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"0.25×",amplitude:6,waveform:"trapezoid",pulseWidth:5},{frequency:"16×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:5}],isDrum:!1}},{name:"void 2 - LemonLime",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters1:[],effects:["panning","vibrato","reverb"],vibrato:"custom",vibratoDepth:.32,vibratoDelay:19,vibratoSpeed:3,vibratoType:0,pan:0,panDelay:10,reverb:58,fadeInSeconds:.1575,fadeOutTicks:24,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"swell 1"}],isDrum:!1}},{name:"mellow triangle - LemonLime",generalMidi:!1,settings:{type:"custom chip",volume:-5,eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:.5}],effects:["panning","chord type","detune","vibrato","chorus","echo","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:-40,vibrato:"custom",vibratoDepth:.28,vibratoDelay:6,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:29,echoSustain:29,echoDelayBeats:.25,reverb:19,fadeInSeconds:0,fadeOutTicks:12,unison:"none",wave:"square",customChipWave:{0:-1,1:-1,2:-4,3:-4,4:-8,5:-8,6:-11,7:-11,8:-14,9:-14,10:-17,11:-17,12:-20,13:-20,14:-24,15:-24,16:-23,17:-23,18:-20,19:-20,20:-17,21:-17,22:-14,23:-14,24:-11,25:-11,26:-7,27:-7,28:-4,29:-4,30:-1,31:-1,32:2,33:2,34:5,35:5,36:8,37:8,38:12,39:12,40:15,41:15,42:18,43:18,44:21,45:21,46:24,47:24,48:24,49:24,50:21,51:21,52:18,53:18,54:15,55:15,56:12,57:12,58:8,59:8,60:5,61:5,62:2,63:2},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"jello kick - LemonLime",generalMidi:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"peak",cutoffHz:1189.21,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"peak",cutoffHz:1189.21,linearGain:.5}],effects:["panning","note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:2.8284}],pan:0,panDelay:0,reverb:3,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1←(2 3 4 5 6)",feedbackType:"1→4 2→5 3→6",feedbackAmplitude:0,operators:[{frequency:"0.12×",amplitude:15,waveform:"trapezoid",pulseWidth:5},{frequency:"5×",amplitude:8,waveform:"pulse width",pulseWidth:6},{frequency:"0.75×",amplitude:9,waveform:"pulse width",pulseWidth:6},{frequency:"7×",amplitude:3,waveform:"ramp",pulseWidth:5},{frequency:"0.75×",amplitude:11,waveform:"quasi-sine",pulseWidth:5},{frequency:"~1×",amplitude:14,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"wibble 1"},{target:"operatorAmplitude",envelope:"wibble 3",index:1},{target:"operatorAmplitude",envelope:"linear-1",index:3},{target:"operatorAmplitude",envelope:"swell -1",index:4},{target:"operatorAmplitude",envelope:"swell 1",index:5},{target:"feedbackAmplitude",envelope:"twang 2"}],isDrum:!1}},{name:"soggy frog - cach1rul0",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","pitch shift","note filter","echo","reverb"],pitchShiftSemitones:13,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.7071}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.7071}],pan:0,panDelay:10,echoSustain:14,echoDelayBeats:.833,reverb:10,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,100,100,86,86,71,57,57,43,43,29,29,14,14,14,14,14,14,14,14,14,14,14,29,29,14,14,14],unison:"none",envelopes:[{target:"pitchShift",envelope:"flare 1"},{target:"noteFilterAllFreqs",envelope:"swell 1"}],isDrum:!1}},{name:"doomsday bass - cach1rul0",generalMidi:!1,settings:{type:"FM",volume:10,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["chord type","pitch shift","detune","note filter","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[],echoSustain:0,echoDelayBeats:1,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←3 2←4",feedbackType:"3⟲ 4⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3},{target:"feedbackAmplitude",envelope:"twang 2"}],isDrum:!1}},{name:"sawtooth chirp - cach1rul0",generalMidi:!1,settings:{type:"chip",volume:5,eqFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:.125},{type:"peak",cutoffHz:19027.31,linearGain:2},{type:"low-pass",cutoffHz:16e3,linearGain:.5},{type:"peak",cutoffHz:353.55,linearGain:1.4142},{type:"peak",cutoffHz:2e3,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:.125},{type:"peak",cutoffHz:19027.31,linearGain:2},{type:"low-pass",cutoffHz:16e3,linearGain:.5},{type:"peak",cutoffHz:353.55,linearGain:1.4142},{type:"peak",cutoffHz:2e3,linearGain:1.4142}],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"custom",vibratoDepth:.12,vibratoDelay:0,vibratoSpeed:28,vibratoType:1,pan:0,panDelay:10,chorus:0,echoSustain:43,echoDelayBeats:1,reverb:6,fadeInSeconds:0,fadeOutTicks:-3,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"sonic-ish lead - cach1ru10",generalMidi:!1,settings:{type:"chip",volume:14,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["panning","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo","reverb"],detuneCents:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],distortion:0,aliases:!0,bitcrusherOctave:4.5,bitcrusherQuantization:29,pan:0,panDelay:10,chorus:0,echoSustain:43,echoDelayBeats:.667,reverb:0,fadeInSeconds:0,fadeOutTicks:12,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!0,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"sonic bass - cach1ru10",generalMidi:!1,settings:{type:"FM6op",volume:10,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","chord type","note filter","distortion","bitcrusher","chorus","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.3536},{type:"peak",cutoffHz:9513.66,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.3536},{type:"peak",cutoffHz:9513.66,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:2378.41,linearGain:1}],distortion:0,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:29,pan:0,panDelay:10,chorus:14,reverb:13,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1←3←4 2←5←6",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"6×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:11,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"feedbackAmplitude",envelope:"twang 1"},{target:"none",envelope:"twang 3"}],isDrum:!1}},{name:"coolsaw - Hexefe",generalMidi:!1,settings:{type:"chip",volume:5,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[],effects:["transition type","vibrato","chorus","echo"],transition:"normal",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,chorus:71,echoSustain:43,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-1,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}}])}]);class A{constructor(){this.i=1,this.o=[void 0],this.l=0,this.p=0,this.u=0}pushFront(e){this.u>=this.i&&this.h(),this.p=this.p-1&this.l,this.o[this.p]=e,this.u++}pushBack(e){this.u>=this.i&&this.h(),this.o[this.p+this.u&this.l]=e,this.u++}popFront(){if(this.u<=0)throw new Error("No elements left to pop.");const e=this.o[this.p];return this.o[this.p]=void 0,this.p=this.p+1&this.l,this.u--,e}popBack(){if(this.u<=0)throw new Error("No elements left to pop.");this.u--;const e=this.p+this.u&this.l,t=this.o[e];return this.o[e]=void 0,t}peakFront(){if(this.u<=0)throw new Error("No elements left to pop.");return this.o[this.p]}peakBack(){if(this.u<=0)throw new Error("No elements left to pop.");return this.o[this.p+this.u-1&this.l]}count(){return this.u}set(e,t){if(e<0||e>=this.u)throw new Error("Invalid index");this.o[this.p+e&this.l]=t}get(e){if(e<0||e>=this.u)throw new Error("Invalid index");return this.o[this.p+e&this.l]}remove(e){if(e<0||e>=this.u)throw new Error("Invalid index");if(e<=this.u>>1){for(;e>0;)this.set(e,this.get(e-1)),e--;this.popFront()}else{for(e++;e<this.u;)this.set(e-1,this.get(e)),e++;this.popBack()}}h(){if(this.i>=1073741824)throw new Error("Capacity too big.");this.i=this.i<<1;const e=this.o,t=new Array(this.i),n=0|this.u,i=0|this.p;for(let a=0;a<n;a++)t[a]=e[i+a&this.l];for(let e=n;e<this.i;e++)t[e]=void 0;this.p=0,this.o=t,this.l=this.i-1}}const B=new class{constructor(){this.activeEvents=[],this.listeners={},this.activeEvents=[],this.listeners={}}raise(e,t,n){if(null!=this.listeners[e]){this.activeEvents.push(e);for(let i=0;i<this.listeners[e].length;i++)this.listeners[e][i](t,n);this.activeEvents.pop()}}listen(e,t){null==this.listeners[e]&&(this.listeners[e]=[]),this.listeners[e].push(t)}unlisten(e,t){if(null==this.listeners[e])return;const n=this.listeners[e].indexOf(t);-1!=n&&this.listeners[e].splice(n,1)}unlistenAll(e){null!=this.listeners[e]&&(this.listeners[e]=[])}};class R{constructor(){this.a=[1],this.b=[1],this.order=0}linearGain0thOrder(e){this.b[0]=e,this.order=0}lowPass1stOrderButterworth(e){const t=1/Math.tan(.5*e),n=1+t;this.a[1]=(1-t)/n,this.b[1]=this.b[0]=1/n,this.order=1}lowPass1stOrderSimplified(e){const t=2*Math.sin(.5*e);this.a[1]=t-1,this.b[0]=t,this.b[1]=0,this.order=1}highPass1stOrderButterworth(e){const t=1/Math.tan(.5*e),n=1+t;this.a[1]=(1-t)/n,this.b[0]=t/n,this.b[1]=-t/n,this.order=1}highShelf1stOrder(e,t){const n=Math.tan(.5*e),i=Math.sqrt(t),a=(n*i-1)/(n*i+1);this.a[1]=a/1,this.b[0]=(1+a+t*(1-a))/2,this.b[1]=(1+a-t*(1-a))/2,this.order=1}allPass1stOrderInvertPhaseAbove(e){const t=(Math.sin(e)-1)/Math.cos(e);this.a[1]=t,this.b[0]=t,this.b[1]=1,this.order=1}allPass1stOrderFractionalDelay(e){const t=(1-e)/(1+e);this.a[1]=t,this.b[0]=t,this.b[1]=1,this.order=1}lowPass2ndOrderButterworth(e,t){const n=Math.sin(e)/(2*t),i=Math.cos(e),a=1+n;this.a[1]=-2*i/a,this.a[2]=(1-n)/a,this.b[2]=this.b[0]=(1-i)/(2*a),this.b[1]=(1-i)/a,this.order=2}lowPass2ndOrderSimplified(e,t){const n=2*Math.sin(e/2),i=1-1/(2*t),a=i+i/(1-n);this.a[1]=2*n+(n-1)*n*a-2,this.a[2]=(n-1)*(n-n*a-1),this.b[0]=n*n,this.b[1]=0,this.b[2]=0,this.order=2}highPass2ndOrderButterworth(e,t){const n=Math.sin(e)/(2*t),i=Math.cos(e),a=1+n;this.a[1]=-2*i/a,this.a[2]=(1-n)/a,this.b[2]=this.b[0]=(1+i)/(2*a),this.b[1]=-(1+i)/a,this.order=2}highShelf2ndOrder(e,t,n){const i=Math.sqrt(t),a=Math.cos(e),s=i+1,o=i-1,r=.5*Math.sin(e)*Math.sqrt(s/i*(1/n-1)+2),l=2*Math.sqrt(i)*r,p=s-o*a+l;this.a[1]=2*(o-s*a)/p,this.a[2]=(s-o*a-l)/p,this.b[0]=i*(s+o*a+l)/p,this.b[1]=-2*i*(o+s*a)/p,this.b[2]=i*(s+o*a-l)/p,this.order=2}peak2ndOrder(e,t,n){const i=Math.sqrt(t),a=n*e/(i>=1?i:1/i),s=Math.tan(.5*a),o=1+s/i;this.b[0]=(1+s*i)/o,this.b[1]=this.a[1]=-2*Math.cos(e)/o,this.b[2]=(1-s*i)/o,this.a[2]=(1-s/i)/o,this.order=2}}class N{constructor(){this.real=0,this.imag=0,this.denom=1}analyze(e,t){this.analyzeComplex(e,Math.cos(t),Math.sin(t))}analyzeComplex(e,t,n){const i=e.a,a=e.b,s=t,o=-n;let r=a[0]+a[1]*s,l=a[1]*o,p=1+i[1]*s,u=i[1]*o,c=s,h=o;for(let t=2;t<=e.order;t++){const e=c*o+h*s;c=c*s-h*o,h=e,r+=a[t]*c,l+=a[t]*h,p+=i[t]*c,u+=i[t]*h}this.denom=p*p+u*u,this.real=r*p+l*u,this.imag=l*p-r*u}magnitude(){return Math.sqrt(this.real*this.real+this.imag*this.imag)/this.denom}angle(){return Math.atan2(this.imag,this.real)}}class V{constructor(){this.a1=0,this.a2=0,this.b0=1,this.b1=0,this.b2=0,this.a1Delta=0,this.a2Delta=0,this.b0Delta=0,this.b1Delta=0,this.b2Delta=0,this.output1=0,this.output2=0,this.useMultiplicativeInputCoefficients=!1}resetOutput(){this.output1=0,this.output2=0}loadCoefficientsWithGradient(e,t,n,i){if(2!=e.order||2!=t.order)throw new Error;this.a1=e.a[1],this.a2=e.a[2],this.b0=e.b[0],this.b1=e.b[1],this.b2=e.b[2],this.a1Delta=(t.a[1]-e.a[1])*n,this.a2Delta=(t.a[2]-e.a[2])*n,i?(this.b0Delta=Math.pow(t.b[0]/e.b[0],n),this.b1Delta=Math.pow(t.b[1]/e.b[1],n),this.b2Delta=Math.pow(t.b[2]/e.b[2],n)):(this.b0Delta=(t.b[0]-e.b[0])*n,this.b1Delta=(t.b[1]-e.b[1])*n,this.b2Delta=(t.b[2]-e.b[2])*n),this.useMultiplicativeInputCoefficients=i}}function U(e){return 2*Math.atan(.5*e)}const $=2654435761,j=2246822519,Q=3266489917,_=668265263,K=374761393;let J;function Y(e,t=0){const n="string"==typeof e?(J??=new TextEncoder).encode(e):e,i=n;let a=t+K&4294967295,s=0;if(i.length>=16){const e=[t+$+j&4294967295,t+j&4294967295,t+0&4294967295,t-$&4294967295],i=n,o=i.length-16;let r=0;for(s=0;(4294967280&s)<=o;s+=4){const t=s,n=i[t+0]+(i[t+1]<<8),a=i[t+2]+(i[t+3]<<8),o=n*j+(a*j<<16);let l=e[r]+o&4294967295;l=l<<13|l>>>19;const p=65535&l,u=l>>>16;e[r]=p*$+(u*$<<16)&4294967295,r=r+1&3}a=(e[0]<<1|e[0]>>>31)+(e[1]<<7|e[1]>>>25)+(e[2]<<12|e[2]>>>20)+(e[3]<<18|e[3]>>>14)&4294967295}a=a+n.length&4294967295;const o=n.length-4;for(;s<=o;s+=4){const e=s,t=i[e+0]+(i[e+1]<<8),n=i[e+2]+(i[e+3]<<8);a=a+(t*Q+(n*Q<<16))&4294967295,a=a<<17|a>>>15,a=(65535&a)*_+((a>>>16)*_<<16)&4294967295}for(;s<i.length;++s){a+=i[s]*K,a=a<<11|a>>>21,a=(65535&a)*$+((a>>>16)*$<<16)&4294967295}return a^=a>>>15,a=((65535&a)*j&4294967295)+((a>>>16)*j<<16),a^=a>>>13,a=((65535&a)*Q&4294967295)+((a>>>16)*Q<<16),a^=a>>>16,a<0?a+4294967296:a}const Z=1e-24;function X(e,t,n){return n<=(t-=1)?n>=e?n:e:t}function ee(e,t,n){if(e<=n&&n<=t)return n;throw new Error(`Value ${n} not in range [${e}, ${t}]`)}function te(e,t){let n=parseFloat(e);return Number.isNaN(n)&&(n=t),n}function ne(e,t){let n=parseInt(e);return Number.isNaN(n)&&(n=t),n}function ie(e,t){e.push(re[t>>>30&3]),e.push(re[t>>>24&63]),e.push(re[t>>>18&63]),e.push(re[t>>>12&63]),e.push(re[t>>>6&63]),e.push(re[t>>>0&63])}function ae(e,t){let n=0;return n|=le[e.charCodeAt(t++)]<<30,n|=le[e.charCodeAt(t++)]<<24,n|=le[e.charCodeAt(t++)]<<18,n|=le[e.charCodeAt(t++)]<<12,n|=le[e.charCodeAt(t++)]<<6,n|=le[e.charCodeAt(t++)]<<0,n}function se(e,t,n,i,a,s){e.push(re[t]),e.push(re[Number(n>0)]);let o=Math.round(1e3*Math.abs(n)),r=Math.floor(o/63);e.push(re[o%63],re[r%63],re[Math.floor(r/63)]),e.push(re[Number(i>0)]);let l=Math.round(1e3*Math.abs(i)),p=Math.floor(l/63);e.push(re[l%63],re[p%63],re[Math.floor(p/63)]),e.push(re[Number(a>0)]);let u=Math.round(1e3*Math.abs(a));e.push(re[u%63],re[Math.floor(u/63)]),e.push(re[Number(s>0)]);let c=Math.round(1e3*Math.abs(s));e.push(re[c%63],re[Math.floor(c/63)])}function oe(e){let t=X(0,c.keys.length,e),n=0;return 12===e?(t=0,n=1):13===e?(t=6,n=-1):14===e?(t=0,n=-1):15===e&&(t=5,n=-1),[t,n]}const re=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],le=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class pe{constructor(e,t,n){this.m=[],this.v=0;for(let i=t;i<n;i++){const t=le[e.charCodeAt(i)];this.m.push(t>>5&1),this.m.push(t>>4&1),this.m.push(t>>3&1),this.m.push(t>>2&1),this.m.push(t>>1&1),this.m.push(1&t)}}read(e){let t=0;for(;e>0;)t<<=1,t+=this.m[this.v++],e--;return t}readLongTail(e,t){let n=e,i=t;for(;this.m[this.v++];)n+=1<<i,i++;for(;i>0;)i--,this.m[this.v++]&&(n+=1<<i);return n}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class ue{constructor(){this.g=0,this.m=[]}clear(){this.g=0}write(e,t){for(e--;e>=0;)this.m[this.g++]=t>>>e&1,e--}writeLongTail(e,t,n){if(n<e)throw new Error("value out of bounds");n-=e;let i=t;for(;n>=1<<i;)this.m[this.g++]=1,n-=1<<i,i++;for(this.m[this.g++]=0;i>0;)i--,this.m[this.g++]=n>>>i&1}writePartDuration(e){this.writeLongTail(1,3,e)}writePinCount(e){this.writeLongTail(1,0,e)}writePitchInterval(e){e<0?(this.write(1,1),this.writeLongTail(1,3,-e)):(this.write(1,0),this.writeLongTail(1,3,e))}concat(e){for(let t=0;t<e.g;t++)this.m[this.g++]=e.m[t]}encodeBase64(e){for(let t=0;t<this.g;t+=6){const n=this.m[t]<<5|this.m[t+1]<<4|this.m[t+2]<<3|this.m[t+3]<<2|this.m[t+4]<<1|this.m[t+5];e.push(re[n])}return e}lengthBase64(){return Math.ceil(this.g/6)}}function ce(e,t,n){return{interval:e,time:t,size:n}}class he{constructor(e,t,n,i,a=!1){this.pitches=[e],this.pins=[ce(0,0,i),ce(0,n-t,a?0:i)],this.start=t,this.end=n,this.continuesLastPattern=!1}pickMainInterval(){let e=0,t=0;for(let n=1;n<this.pins.length;n++){const i=this.pins[n-1],a=this.pins[n];if(i.interval==a.interval){const n=a.time-i.time;e<n&&(e=n,t=i.interval)}}if(0==e){let e=0;for(let n=0;n<this.pins.length;n++){const i=this.pins[n];e<i.size&&(e=i.size,t=i.interval)}}return t}clone(){const e=new he(-1,this.start,this.end,3);e.pitches=this.pitches.concat(),e.pins=[];for(const t of this.pins)e.pins.push(ce(t.interval,t.time,t.size));return e.continuesLastPattern=this.continuesLastPattern,e}getEndPinIndex(e){let t;for(t=1;t<this.pins.length-1&&!(this.pins[t].time+this.start>e);t++);return t}}class fe{constructor(){this.notes=[],this.instruments=[0]}cloneNotes(){const e=[];for(const t of this.notes)e.push(t.clone());return e}reset(){this.notes.length=0,this.instruments[0]=0,this.instruments.length=1}toJsonObject(e,t,n){const i=[];for(const a of this.notes){let s=t.instruments[this.instruments[0]],o=Math.max(0,c.modCount-a.pitches[0]-1),r=e.getVolumeCapForSetting(n,s.modulators[o],s.modFilterTypes[o]);const l=[];for(const t of a.pins){let i=n?Math.round(t.size):Math.round(100*t.size/r);l.push({tick:(t.time+a.start)*c.rhythms[e.rhythm].stepsPerBeat/c.partsPerBeat,pitchBend:t.interval,volume:i,forMod:n})}const p={pitches:a.pitches,points:l};0==a.start&&(p.continuesLastPattern=a.continuesLastPattern),i.push(p)}const a={notes:i};return e.patternInstruments&&(a.instruments=this.instruments.map((e=>e+1))),a}fromJsonObject(e,t,n,i,a,s,o="auto"){const r=o.toLowerCase();if(t.patternInstruments)if(Array.isArray(e.instruments)){const i=e.instruments,a=X(c.instrumentCountMin,t.getMaxInstrumentsPerPatternForChannel(n)+1,i.length);for(let e=0;e<a;e++)this.instruments[e]=X(0,n.instruments.length,(0|i[e])-1);this.instruments.length=a}else this.instruments[0]=X(0,n.instruments.length,(0|e.instrument)-1),this.instruments.length=1;if(e.notes&&e.notes.length>0){const o=Math.min(t.beatsPerBar*c.partsPerBeat*(s?c.modCount:1),e.notes.length>>>0);for(let l=0;l<e.notes.length&&!(l>=o);l++){const o=e.notes[l];if(!(o&&o.pitches&&o.pitches.length>=1&&o.points&&o.points.length>=2))continue;const p=new he(0,0,0,0);p.pitches=[],p.pins=[];for(let e=0;e<o.pitches.length;e++){const t=0|o.pitches[e];if(-1==p.pitches.indexOf(t)&&(p.pitches.push(t),p.pitches.length>=c.maxChordSize))break}if(p.pitches.length<1)continue;let u=0,h=n.instruments[this.instruments[0]],f=Math.max(0,c.modCount-p.pitches[0]-1);for(let e=0;e<o.points.length;e++){const n=o.points[e];if(null==n||null==n.tick)continue;const a=null==n.pitchBend?0:0|n.pitchBend,r=Math.round(+n.tick*c.partsPerBeat/i);let l,d=t.getVolumeCapForSetting(s,h.modulators[f],h.modFilterTypes[f]);l=null==n.volume?d:null==n.forMod?Math.max(0,Math.min(d,Math.round((0|n.volume)*d/100))):(0|n.forMod)>0?Math.round(0|n.volume):Math.max(0,Math.min(d,Math.round((0|n.volume)*d/100))),r>t.beatsPerBar*c.partsPerBeat||(0==p.pins.length&&(p.start=r,u=a),p.pins.push(ce(a-u,r-p.start,l)))}if(p.pins.length<2)continue;p.end=p.pins[p.pins.length-1].time+p.start;const d=a?c.drumCount-1:c.maxPitch;let m=d,v=0;for(let e=0;e<p.pitches.length;e++)p.pitches[e]+=u,(p.pitches[e]<0||p.pitches[e]>d)&&(p.pitches.splice(e,1),e--),p.pitches[e]<m&&(m=p.pitches[e]),p.pitches[e]>v&&(v=p.pitches[e]);if(!(p.pitches.length<1)){for(let e=0;e<p.pins.length;e++){const t=p.pins[e];t.interval+m<0&&(t.interval=-m),t.interval+v>d&&(t.interval=d-v),e>=2&&t.interval==p.pins[e-1].interval&&t.interval==p.pins[e-2].interval&&t.size==p.pins[e-1].size&&t.size==p.pins[e-2].size&&(p.pins.splice(e-1,1),e--)}if(0==p.start?p.continuesLastPattern=!0===o.continuesLastPattern:p.continuesLastPattern=!1,"ultrabox"!=r&&"slarmoosbox"!=r&&h.modulators[f]==c.modulators.dictionary.tempo.index)for(const e of p.pins){const t=30,n=1,i=e.size+t;e.size=i-n}this.notes.push(p)}}}}}class de{constructor(e){this.frequency=4,this.amplitude=0,this.waveform=0,this.pulseWidth=.5,this.reset(e)}reset(e){this.frequency=4,this.amplitude=e<=1?c.operatorAmplitudeMax:0,this.waveform=0,this.pulseWidth=5}copy(e){this.frequency=e.frequency,this.amplitude=e.amplitude,this.waveform=e.waveform,this.pulseWidth=e.pulseWidth}}class me{constructor(){this.name="",this.carrierCount=0,this.modulatedBy=[[],[],[],[],[],[]],this.associatedCarrier=[],this.fromPreset(1)}set(e,t){this.reset(),this.carrierCount=e;for(let n=0;n<this.modulatedBy.length;n++){this.modulatedBy[n]=t[n],n<e&&(this.associatedCarrier[n]=n+1),this.name+=n+1;for(let i=0;i<t[n].length;i++)this.name+=t[n][i],t[n][i]>e-1&&(this.associatedCarrier[t[n][i]-1]=n+1),this.name+=",";this.name+=n<e?"|":"."}}reset(){this.name="",this.carrierCount=1,this.modulatedBy=[[2,3,4,5,6],[],[],[],[],[]],this.associatedCarrier=[1,1,1,1,1,1]}copy(e){this.name=e.name,this.carrierCount=e.carrierCount,this.modulatedBy=e.modulatedBy,this.associatedCarrier=e.associatedCarrier}fromPreset(e){this.reset();let t=c.algorithms6Op[e];this.name=t.name,this.carrierCount=t.carrierCount;for(var n=0;n<t.modulatedBy.length;n++)this.modulatedBy[n]=Array.from(t.modulatedBy[n]),this.associatedCarrier[n]=t.associatedCarrier[n]}}class ve{constructor(){this.name="",this.indices=[[],[],[],[],[],[]],this.fromPreset(1)}set(e){this.reset();for(let t=0;t<this.indices.length;t++){this.indices[t]=e[t];for(let n=0;n<e[t].length;n++)this.name+=e[t][n],this.name+=",";this.name+="."}}reset(){this.reset,this.name="",this.indices=[[1],[],[],[],[],[]]}copy(e){this.name=e.name,this.indices=e.indices}fromPreset(e){this.reset();let t=c.feedbacks6Op[e];for(var n=0;n<t.indices.length;n++){this.indices[n]=Array.from(t.indices[n]);for(let e=0;e<t.indices[n].length;e++)this.name+=t.indices[n][e],this.name+=",";this.name+="."}}}class ye{constructor(e){this.spectrum=[],this.hash=-1,this.reset(e)}reset(e){for(let t=0;t<c.spectrumControlPoints;t++)if(e)this.spectrum[t]=Math.round(c.spectrumMax*(1/Math.sqrt(1+t/3)));else{const e=0==t||7==t||11==t||14==t||16==t||18==t||21==t||23==t||t>=25;this.spectrum[t]=e?Math.max(0,Math.round(c.spectrumMax*(1-t/30))):0}this.markCustomWaveDirty()}markCustomWaveDirty(){const e=Ge.fittingPowerOfTwo(c.spectrumMax+2)-1;let t=0;for(const n of this.spectrum)t=t*e+n>>>0;this.hash=t}}class ge{constructor(){this.wave=null,this.S=-1}getCustomWave(e,t){if(this.S==e.hash)return this.wave;this.S=e.hash;const n=c.spectrumNoiseLength;null!=this.wave&&this.wave.length==n+1||(this.wave=new Float32Array(n+1));const i=this.wave;for(let e=0;e<n;e++)i[e]=0;const a=[0,1/7,Math.log2(5/4),3/7,Math.log2(1.5),5/7,6/7];function s(e){return t+Math.floor(e/c.spectrumControlPointsPerOctave)+a[(e+c.spectrumControlPointsPerOctave)%c.spectrumControlPointsPerOctave]}let o=1;for(let t=0;t<c.spectrumControlPoints+1;t++){const a=t<=0?0:e.spectrum[t-1],r=t>=c.spectrumControlPoints?e.spectrum[c.spectrumControlPoints-1]:e.spectrum[t],l=s(t-1);let p=s(t);t>=c.spectrumControlPoints&&(p=14+.25*(p-14)),0==a&&0==r||(o+=.02*y(i,n,l,p,a/c.spectrumMax,r/c.spectrumMax,-.5))}return e.spectrum[c.spectrumControlPoints-1]>0&&(o+=.02*y(i,n,14+.25*(s(c.spectrumControlPoints)-14),14,e.spectrum[c.spectrumControlPoints-1]/c.spectrumMax,0,-.5)),L(i,n),C(i,5/(Math.sqrt(n)*Math.pow(o,.75))),i[n]=i[0],i}}class Se{constructor(){this.harmonics=[],this.hash=-1,this.reset()}reset(){for(let e=0;e<c.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=c.harmonicsMax,this.harmonics[3]=c.harmonicsMax,this.harmonics[6]=c.harmonicsMax,this.markCustomWaveDirty()}markCustomWaveDirty(){const e=Ge.fittingPowerOfTwo(c.harmonicsMax+2)-1;let t=0;for(const n of this.harmonics)t=t*e+n>>>0;this.hash=t}}class be{constructor(){this.wave=null,this.S=-1}getCustomWave(e,t){if(this.S==e.hash&&this.k==t)return this.wave;this.S=e.hash,this.k=t;const n=7==t?c.harmonicsRenderedForPickedString:c.harmonicsRendered,i=c.harmonicsWavelength,a=v(0,null,null);null!=this.wave&&this.wave.length==i+1||(this.wave=new Float32Array(i+1));const s=this.wave;for(let e=0;e<i;e++)s[e]=0;let o=1;for(let t=0;t<n;t++){const r=t+1;let l=t<c.harmonicsControlPoints?e.harmonics[t]:e.harmonics[c.harmonicsControlPoints-1];t>=c.harmonicsControlPoints&&(l*=1-(t-c.harmonicsControlPoints)/(n-c.harmonicsControlPoints));const p=l/c.harmonicsMax;let u=Math.pow(2,l-c.harmonicsMax+1)*Math.sqrt(p);t<c.harmonicsControlPoints&&(o+=u),u*=Math.pow(r,-.25),u*=a[t+589],s[i-r]=u}L(s,i);const r=1/Math.pow(o,.7);for(let e=0;e<s.length;e++)s[e]*=r;return function(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n];e[n]=t,t+=i}}(s),s[i]=s[0],s}}class we{constructor(){this.delayLinePosition=0,this.ageInSamples=0,this.maxAgeInSamples=0,this.delay=0,this.parabolicEnvelopeAmplitude=0,this.parabolicEnvelopeSlope=0,this.parabolicEnvelopeCurve=0,this.rcbEnvelopeAmplitude=0,this.rcbEnvelopeAttackIndex=0,this.rcbEnvelopeReleaseIndex=0,this.rcbEnvelopeSustain=0}initializeParabolicEnvelope(e,t){this.parabolicEnvelopeAmplitude=0;const n=1/e,i=n*n;this.parabolicEnvelopeSlope=4*t*(n-i),this.parabolicEnvelopeCurve=-8*t*i}updateParabolicEnvelope(){this.parabolicEnvelopeAmplitude+=this.parabolicEnvelopeSlope,this.parabolicEnvelopeSlope+=this.parabolicEnvelopeCurve}initializeRCBEnvelope(e,t){this.rcbEnvelopeAttackIndex=Math.floor(e/6),this.rcbEnvelopeSustain=t,this.rcbEnvelopeReleaseIndex=Math.floor(5*e/6)}updateRCBEnvelope(){this.ageInSamples<this.rcbEnvelopeAttackIndex?this.rcbEnvelopeAmplitude=1+Math.cos(Math.PI+Math.PI*(this.ageInSamples/this.rcbEnvelopeAttackIndex)*(this.rcbEnvelopeSustain/2)):this.ageInSamples>this.rcbEnvelopeReleaseIndex&&(this.rcbEnvelopeAmplitude=1+Math.cos(Math.PI*((this.ageInSamples-this.rcbEnvelopeReleaseIndex)/this.rcbEnvelopeAttackIndex))*(this.rcbEnvelopeSustain/2))}addDelay(e){this.delay=e}}class Fe{constructor(){this.freq=0,this.gain=c.filterGainCenter,this.type=2}set(e,t){this.freq=e,this.gain=t}getHz(){return Fe.getHzFromSettingValue(this.freq)}static getHzFromSettingValue(e){return c.filterFreqReferenceHz*Math.pow(2,(e-c.filterFreqReferenceSetting)*c.filterFreqStep)}static getSettingValueFromHz(e){return Math.log2(e/c.filterFreqReferenceHz)/c.filterFreqStep+c.filterFreqReferenceSetting}static getRoundedSettingValueFromHz(e){return Math.max(0,Math.min(c.filterFreqRange-1,Math.round(Fe.getSettingValueFromHz(e))))}getLinearGain(e=1){const t=(this.gain-c.filterGainCenter)*c.filterGainStep,n=2==this.type?0:-.5,i=n+(t-n)*e;return Math.pow(2,i)}static getRoundedSettingValueFromLinearGain(e){return Math.max(0,Math.min(c.filterGainRange-1,Math.round(Math.log2(e)/c.filterGainStep+c.filterGainCenter)))}toCoefficients(e,t,n=1,i=1){const a=2*Math.PI*Math.max(c.filterFreqMinHz,Math.min(c.filterFreqMaxHz,n*this.getHz()))/t,s=this.getLinearGain(i);switch(this.type){case 0:e.lowPass2ndOrderButterworth(a,s);break;case 1:e.highPass2ndOrderButterworth(a,s);break;case 2:e.peak2ndOrder(a,s,1);break;default:throw new Error}}getVolumeCompensationMult(){const e=(this.freq-c.filterFreqReferenceSetting)*c.filterFreqStep,t=(this.gain-c.filterGainCenter)*c.filterGainStep;switch(this.type){case 0:const n=Math.pow(2,e)*c.filterFreqReferenceHz/8e3,i=(Math.sqrt(1+4*n)-1)/2,a=Math.log2(i);return Math.pow(.5,.2*Math.max(0,t+1)+Math.min(0,Math.max(-3,.595*a+.35*Math.min(0,t+1))));case 1:return Math.pow(.5,.125*Math.max(0,t+1)+Math.min(0,.3*(-e-Math.log2(c.filterFreqReferenceHz/125))+.2*Math.min(0,t+1)));case 2:const s=e+Math.log2(c.filterFreqReferenceHz/2e3),o=Math.pow(1/(1+Math.pow(s/3,2)),2);return Math.pow(.5,.125*Math.max(0,t)+.1*o*Math.min(0,t));default:throw new Error}}}class ke{constructor(){this.controlPoints=[],this.controlPointCount=0,this.reset()}reset(){this.controlPointCount=0}addPoint(e,t,n){let i;this.controlPoints.length<=this.controlPointCount?(i=new Fe,this.controlPoints[this.controlPointCount]=i):i=this.controlPoints[this.controlPointCount],this.controlPointCount++,i.type=e,i.set(t,n)}toJsonObject(){const e=[];for(let t=0;t<this.controlPointCount;t++){const n=this.controlPoints[t];e.push({type:c.filterTypeNames[n.type],cutoffHz:Math.round(100*n.getHz())/100,linearGain:Math.round(1e4*n.getLinearGain())/1e4})}return e}fromJsonObject(e){if(this.controlPoints.length=0,e)for(const t of e){const e=new Fe;e.type=c.filterTypeNames.indexOf(t.type),-1==e.type&&(e.type=2),null!=t.cutoffHz?e.freq=Fe.getRoundedSettingValueFromHz(t.cutoffHz):e.freq=0,null!=t.linearGain?e.gain=Fe.getRoundedSettingValueFromLinearGain(t.linearGain):e.gain=c.filterGainCenter,this.controlPoints.push(e)}this.controlPointCount=this.controlPoints.length}static filtersCanMorph(e,t){if(e.controlPointCount!=t.controlPointCount)return!1;for(let n=0;n<e.controlPointCount;n++)if(e.controlPoints[n].type!=t.controlPoints[n].type)return!1;return!0}static lerpFilters(e,t,n){let i=new ke;if(null==e)return e;if(null==t)return t;if(n=Math.max(0,Math.min(1,n)),this.filtersCanMorph(e,t)){for(let a=0;a<e.controlPointCount;a++)i.controlPoints[a]=new Fe,i.controlPoints[a].type=e.controlPoints[a].type,i.controlPoints[a].freq=e.controlPoints[a].freq+(t.controlPoints[a].freq-e.controlPoints[a].freq)*n,i.controlPoints[a].gain=e.controlPoints[a].gain+(t.controlPoints[a].gain-e.controlPoints[a].gain)*n;return i.controlPointCount=e.controlPointCount,i}return n>=1?t:e}convertLegacySettings(e,t,n){this.reset();const i=2*Math.asin(.475),a=t>1,s=0==t,o=10==e,r=5==n.type||6==n.type||10==n.type||1==n.type,l=48e3,p=8e3*Math.pow(2,.5*(e-10)),u=Math.min(i,2*Math.PI*p/l);if(0==n.type&&!a&&o);else if(s){const e=3.5,t=u*Math.pow(2,e),n=l*(t/(1+t/Math.PI))/(2*Math.PI),i=Fe.getRoundedSettingValueFromHz(n),a=Fe.getHzFromSettingValue(i),s=2*Math.PI*a/l,o=new R;o.lowPass1stOrderSimplified(u);const p=new N;p.analyze(o,s);const c=p.magnitude();let h=Math.log2(c);h=.82*(h+e)-e,r&&(h=Math.min(h,-1));const f=Math.pow(2,h),d=Fe.getRoundedSettingValueFromLinearGain(f);this.addPoint(0,i,d)}else{const e=.5/(1-.95*Math.sqrt(Math.max(0,t-1)/6)),n=.5/e,i=u+(u*(u/(2*Math.PI*8e3/l)*Math.pow(n,.9)+1)-u)*n;let s;s=r?l*Math.min(i,u*Math.pow(2,.25))/(2*Math.PI):l*i/(2*Math.PI);const o=Fe.getRoundedSettingValueFromHz(s);let p;if(r)p=e;else{const t=new R;t.lowPass2ndOrderSimplified(u,e);const n=new N;n.analyze(t,i),p=n.magnitude()}a||(p=Math.min(p,Math.sqrt(.5)));const c=Fe.getRoundedSettingValueFromLinearGain(p);this.addPoint(0,o,c)}this.controlPoints.length=this.controlPointCount}convertLegacySettingsForSynth(e,t,n=!1){this.reset();const i=2*Math.asin(.475),a=0==t&&n,s=48e3,o=8e3*Math.pow(2,.5*(e-10)),r=Math.min(i,2*Math.PI*o/s);if(a){const e=3.5,t=r*Math.pow(2,e),n=s*(t/(1+t/Math.PI))/(2*Math.PI),i=Fe.getRoundedSettingValueFromHz(n),a=Fe.getHzFromSettingValue(i),o=2*Math.PI*a/s,l=new R;l.lowPass1stOrderSimplified(r);const p=new N;p.analyze(l,o);const u=p.magnitude();let c=Math.log2(u);c=.82*(c+e)-e;const h=Math.pow(2,c),f=Fe.getRoundedSettingValueFromLinearGain(h);this.addPoint(0,i,f)}else{const e=.5/(1-.95*Math.sqrt(Math.max(0,t-1)/6)),n=.5/e,i=r+(r*(r/(2*Math.PI*8e3/s)*Math.pow(n,.9)+1)-r)*n;let a;a=s*i/(2*Math.PI);const o=Fe.getSettingValueFromHz(a);let l;const p=new R;p.lowPass2ndOrderSimplified(r,e);const u=new N;u.analyze(p,i),l=u.magnitude();const c=Fe.getRoundedSettingValueFromLinearGain(l);this.addPoint(0,o,c)}}}class qe{constructor(e){this.isNoiseEnvelope=e,this.target=0,this.index=0,this.envelope=0,this.perEnvelopeSpeed=c.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.tempEnvelopeLowerBound=null,this.tempEnvelopeUpperBound=null,this.steps=2,this.seed=2,this.waveform=0,this.discrete=!1,this.reset()}reset(){this.target=0,this.index=0,this.envelope=0,this.pitchEnvelopeStart=0,this.pitchEnvelopeEnd=this.isNoiseEnvelope?c.drumCount-1:c.maxPitch,this.inverse=!1,this.isNoiseEnvelope=!1,this.perEnvelopeSpeed=c.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.tempEnvelopeLowerBound=null,this.tempEnvelopeUpperBound=null,this.steps=2,this.seed=2,this.waveform=0,this.discrete=!1}toJsonObject(){const e={target:c.instrumentAutomationTargets[this.target].name,envelope:c.newEnvelopes[this.envelope].name,inverse:this.inverse,perEnvelopeSpeed:this.perEnvelopeSpeed,perEnvelopeLowerBound:this.perEnvelopeLowerBound,perEnvelopeUpperBound:this.perEnvelopeUpperBound,discrete:this.discrete};return c.instrumentAutomationTargets[this.target].maxCount>1&&(e.index=this.index),"pitch"==c.newEnvelopes[this.envelope].name?(e.pitchEnvelopeStart=this.pitchEnvelopeStart,e.pitchEnvelopeEnd=this.pitchEnvelopeEnd):"random"==c.newEnvelopes[this.envelope].name?(e.steps=this.steps,e.seed=this.seed,e.waveform=this.waveform):"lfo"==c.newEnvelopes[this.envelope].name&&(e.waveform=this.waveform,e.steps=this.steps),e}fromJsonObject(e,t){this.reset();let n=c.instrumentAutomationTargets.dictionary[e.target];null==n&&(n=c.instrumentAutomationTargets.dictionary.noteVolume),this.target=n.index;let i=c.envelopes.dictionary.none,a=!1;"slarmoosbox"==t?"tremolo2"==e.envelope?(i=c.newEnvelopes[8],a=!0):"tremolo"==e.envelope?(i=c.newEnvelopes[8],a=!1):i=c.newEnvelopes.dictionary[e.envelope]:9==c.envelopes.dictionary[e.envelope].type?(i=c.newEnvelopes[8],a=!0):i=c.newEnvelopes[Math.max(c.envelopes.dictionary[e.envelope].type-1,0)].index>8?c.newEnvelopes[c.envelopes.dictionary[e.envelope].type-1]:c.newEnvelopes[c.envelopes.dictionary[e.envelope].type],null==i&&(9==c.envelopes.dictionary[e.envelope].type?(i=c.newEnvelopes[8],a=!0):i=c.newEnvelopes[Math.max(c.envelopes.dictionary[e.envelope].type-1,0)].index>8?c.newEnvelopes[c.envelopes.dictionary[e.envelope].type-1]:c.newEnvelopes[c.envelopes.dictionary[e.envelope].type]),null==i&&(i=c.envelopes.dictionary.none),this.envelope=i.index,null!=e.index?this.index=X(0,c.instrumentAutomationTargets[this.target].maxCount,0|e.index):this.index=0,null!=e.pitchEnvelopeStart?this.pitchEnvelopeStart=X(0,this.isNoiseEnvelope?c.drumCount:c.maxPitch+1,e.pitchEnvelopeStart):this.pitchEnvelopeStart=0,null!=e.pitchEnvelopeEnd?this.pitchEnvelopeEnd=X(0,this.isNoiseEnvelope?c.drumCount:c.maxPitch+1,e.pitchEnvelopeEnd):this.pitchEnvelopeEnd=this.isNoiseEnvelope?c.drumCount:c.maxPitch,this.inverse=Boolean(e.inverse),null!=e.perEnvelopeSpeed?this.perEnvelopeSpeed=e.perEnvelopeSpeed:this.perEnvelopeSpeed=c.envelopes.dictionary[e.envelope].speed,null!=e.perEnvelopeLowerBound?this.perEnvelopeLowerBound=X(c.perEnvelopeBoundMin,c.perEnvelopeBoundMax+1,e.perEnvelopeLowerBound):this.perEnvelopeLowerBound=0,null!=e.perEnvelopeUpperBound?this.perEnvelopeUpperBound=X(c.perEnvelopeBoundMin,c.perEnvelopeBoundMax+1,e.perEnvelopeUpperBound):this.perEnvelopeUpperBound=1,a&&(this.inverse?(this.perEnvelopeUpperBound=Math.floor(this.perEnvelopeUpperBound/2*10)/10,this.perEnvelopeLowerBound=Math.floor(this.perEnvelopeLowerBound/2*10)/10):(this.perEnvelopeUpperBound=Math.floor(10*(.5+(this.perEnvelopeUpperBound-this.perEnvelopeLowerBound)/2))/10,this.perEnvelopeLowerBound=.5)),null!=e.steps?this.steps=X(1,c.randomEnvelopeStepsMax+1,e.steps):this.steps=2,null!=e.seed?this.seed=X(1,c.randomEnvelopeSeedMax+1,e.seed):this.seed=2,null!=e.waveform?this.waveform=e.waveform:this.waveform=0,null!=e.discrete?this.discrete=e.discrete:this.discrete=!1}}class Me{constructor(e,t){if(this.type=0,this.preset=0,this.chipWave=2,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=c.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0,this.chipNoise=1,this.eqFilter=new ke,this.eqFilterType=!1,this.eqFilterSimpleCut=c.filterSimpleCutRange-1,this.eqFilterSimplePeak=0,this.noteFilter=new ke,this.noteFilterType=!1,this.noteFilterSimpleCut=c.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.eqSubFilters=[],this.noteSubFilters=[],this.envelopes=[],this.fadeIn=0,this.fadeOut=c.fadeOutNeutral,this.envelopeCount=0,this.transition=c.transitions.dictionary.normal.index,this.pitchShift=0,this.detune=0,this.vibrato=0,this.interval=0,this.vibratoDepth=0,this.vibratoSpeed=10,this.vibratoDelay=0,this.vibratoType=0,this.envelopeSpeed=12,this.unison=0,this.unisonVoices=1,this.unisonSpread=0,this.unisonOffset=0,this.unisonExpression=1.4,this.unisonSign=1,this.effects=0,this.chord=1,this.volume=0,this.pan=c.panCenter,this.panDelay=0,this.arpeggioSpeed=12,this.monoChordTone=0,this.fastTwoNoteArp=!1,this.legacyTieOver=!1,this.clicklessTransition=!1,this.aliases=!1,this.pulseWidth=c.pulseWidthRange,this.decimalOffset=0,this.supersawDynamism=c.supersawDynamismMax,this.supersawSpread=Math.ceil(c.supersawSpreadMax/2),this.supersawShape=0,this.stringSustain=10,this.stringSustainType=1,this.distortion=0,this.bitcrusherFreq=0,this.bitcrusherQuantization=0,this.ringModulation=c.ringModRange>>1,this.ringModulationHz=c.ringModHzRange>>1,this.ringModWaveformIndex=0,this.ringModPulseWidth=c.pwmOperatorWaves.length>>1,this.ringModHzOffset=200,this.granular=4,this.grainSize=(c.grainSizeMax-c.grainSizeMin)/c.grainSizeStep,this.grainAmounts=c.grainAmountsMax,this.grainRange=40,this.chorus=0,this.reverb=0,this.echoSustain=0,this.echoDelay=0,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm=new me,this.customFeedbackType=new ve,this.feedbackAmplitude=0,this.customChipWave=new Float32Array(64),this.customChipWaveIntegral=new Float32Array(65),this.operators=[],this.harmonicsWave=new Se,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.modChannels=[],this.modInstruments=[],this.modulators=[],this.modFilterTypes=[],this.modEnvelopeNumbers=[],this.invalidModulators=[],this.isNoiseInstrument=!1,t)for(let e=0;e<c.modCount;e++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(c.modulators.dictionary.none.index);this.spectrumWave=new ye(e);for(let e=0;e<c.operatorCount+2;e++)this.operators[e]=new de(e);for(let e=0;e<c.drumCount;e++)this.drumsetEnvelopes[e]=c.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[e]=new ye(!0);for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let n=0;for(let e=0;e<this.customChipWave.length;e++)n+=this.customChipWave[e];const i=n/this.customChipWave.length;let a=0,s=0;for(let e=0;e<this.customChipWave.length;e++)a+=s,s=this.customChipWave[e]-i,this.customChipWaveIntegral[e]=a;this.customChipWaveIntegral[64]=0,this.isNoiseInstrument=e}setTypeAndReset(e,t,n){n&&(e=10),this.type=e,this.preset=e,this.volume=0,this.effects=4,this.chorus=c.chorusRange-1,this.reverb=0,this.echoSustain=Math.floor(.5*(c.echoSustainRange-1)),this.echoDelay=Math.floor(.5*(c.echoDelayRange-1)),this.eqFilter.reset(),this.eqFilterType=!1,this.eqFilterSimpleCut=c.filterSimpleCutRange-1,this.eqFilterSimplePeak=0;for(let e=0;e<c.filterMorphCount;e++)this.eqSubFilters[e]=null,this.noteSubFilters[e]=null;switch(this.noteFilter.reset(),this.noteFilterType=!1,this.noteFilterSimpleCut=c.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.distortion=Math.floor(.75*(c.distortionRange-1)),this.bitcrusherFreq=Math.floor(.5*(c.bitcrusherFreqRange-1)),this.bitcrusherQuantization=Math.floor(.5*(c.bitcrusherQuantizationRange-1)),this.ringModulation=c.ringModRange>>1,this.ringModulationHz=c.ringModHzRange>>1,this.ringModWaveformIndex=0,this.ringModPulseWidth=c.pwmOperatorWaves.length>>1,this.ringModHzOffset=200,this.granular=4,this.grainSize=(c.grainSizeMax-c.grainSizeMin)/c.grainSizeStep,this.grainAmounts=c.grainAmountsMax,this.grainRange=40,this.pan=c.panCenter,this.panDelay=0,this.pitchShift=c.pitchShiftCenter,this.detune=c.detuneCenter,this.vibrato=0,this.unison=0,this.stringSustain=10,this.stringSustainType=c.enableAcousticSustain?1:0,this.clicklessTransition=!1,this.arpeggioSpeed=12,this.monoChordTone=1,this.envelopeSpeed=12,this.legacyTieOver=!1,this.aliases=!1,this.fadeIn=0,this.fadeOut=c.fadeOutNeutral,this.transition=c.transitions.dictionary.normal.index,this.envelopeCount=0,this.isNoiseInstrument=t,e){case 0:this.chipWave=2,this.chord=c.chords.dictionary.arpeggio.index,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=c.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0;break;case 9:this.chipWave=2,this.chord=c.chords.dictionary.arpeggio.index;for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let n=0;for(let e=0;e<this.customChipWave.length;e++)n+=this.customChipWave[e];const i=n/this.customChipWave.length;let a=0,s=0;for(let e=0;e<this.customChipWave.length;e++)a+=s,s=this.customChipWave[e]-i,this.customChipWaveIntegral[e]=a;this.customChipWaveIntegral[64]=0;break;case 1:this.chord=c.chords.dictionary["custom interval"].index,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 11:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm.fromPreset(1),this.feedbackAmplitude=0;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 2:this.chipNoise=1,this.chord=c.chords.dictionary.arpeggio.index;break;case 3:this.chord=c.chords.dictionary.simultaneous.index,this.spectrumWave.reset(t);break;case 4:this.chord=c.chords.dictionary.simultaneous.index;for(let e=0;e<c.drumCount;e++)this.drumsetEnvelopes[e]=c.envelopes.dictionary["twang 2"].index,null==this.drumsetSpectrumWaves[e]&&(this.drumsetSpectrumWaves[e]=new ye(!0)),this.drumsetSpectrumWaves[e].reset(t);break;case 5:this.chord=c.chords.dictionary.simultaneous.index,this.harmonicsWave.reset();break;case 6:this.chord=c.chords.dictionary.arpeggio.index,this.pulseWidth=c.pulseWidthRange,this.decimalOffset=0;break;case 7:this.chord=c.chords.dictionary.strum.index,this.harmonicsWave.reset();break;case 10:this.transition=0,this.vibrato=0,this.interval=0,this.effects=0,this.chord=0,this.modChannels=[],this.modInstruments=[],this.modulators=[];for(let e=0;e<c.modCount;e++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(c.modulators.dictionary.none.index),this.invalidModulators[e]=!1,this.modFilterTypes[e]=0,this.modEnvelopeNumbers[e]=0;break;case 8:this.chord=c.chords.dictionary.arpeggio.index,this.supersawDynamism=c.supersawDynamismMax,this.supersawSpread=Math.ceil(c.supersawSpreadMax/2),this.supersawShape=0,this.pulseWidth=c.pulseWidthRange-1,this.decimalOffset=0;break;default:throw new Error("Unrecognized instrument type: "+e)}this.chord!=c.chords.dictionary.simultaneous.index&&(this.effects=2048|this.effects)}convertLegacySettings(e,t){let n=e.filterCutoff,i=e.filterResonance,a=e.filterEnvelope,s=e.pulseEnvelope,o=e.operatorEnvelopes,r=e.feedbackEnvelope;null==n&&(n=0==this.type?6:10),null==i&&(i=0),null==a&&(a=c.envelopes.dictionary.none),null==s&&(s=c.envelopes.dictionary[6==this.type?"twang 2":"none"]),null==o&&(o=[c.envelopes.dictionary[1==this.type?"note size":"none"],c.envelopes.dictionary.none,c.envelopes.dictionary.none,c.envelopes.dictionary.none]),null==r&&(r=c.envelopes.dictionary.none);10==n&&4==a.type&&(a=c.envelopes.dictionary.none);const l=c.algorithms[this.algorithm].carrierCount;let p=!0,u=!0,h=1==a.type||1==s.type;if(1==this.type||11==this.type){h=h||1==r.type;for(let e=0;e<o.length;e++)e<l?1!=o[e].type?u=!1:p=!1:h=h||1==o[e].type}this.envelopeCount=0,1!=this.type&&11!=this.type||(u&&h?this.addEnvelope(c.instrumentAutomationTargets.dictionary.noteVolume.index,0,c.envelopes.dictionary["note size"].index,!1):p&&!h&&this.addEnvelope(c.instrumentAutomationTargets.dictionary.none.index,0,c.envelopes.dictionary["note size"].index,!1)),0==a.type?(this.noteFilter.reset(),this.noteFilterType=!1,this.eqFilter.convertLegacySettings(n,i,a),this.effects&=-33,(t||this.eqFilterType)&&(this.eqFilterType=!0,this.eqFilterSimpleCut=n,this.eqFilterSimplePeak=i)):(this.eqFilter.reset(),this.eqFilterType=!1,this.noteFilterType=!1,this.noteFilter.convertLegacySettings(n,i,a),this.effects|=32,this.addEnvelope(c.instrumentAutomationTargets.dictionary.noteFilterAllFreqs.index,0,a.index,!1),(t||this.noteFilterType)&&(this.noteFilterType=!0,this.noteFilterSimpleCut=n,this.noteFilterSimplePeak=i)),0!=s.type&&this.addEnvelope(c.instrumentAutomationTargets.dictionary.pulseWidth.index,0,s.index,!1);for(let e=0;e<o.length;e++)e<l&&u||0!=o[e].type&&this.addEnvelope(c.instrumentAutomationTargets.dictionary.operatorAmplitude.index,e,o[e].index,!1);0!=r.type&&this.addEnvelope(c.instrumentAutomationTargets.dictionary.feedbackAmplitude.index,0,r.index,!1)}toJsonObject(){const e={type:c.instrumentTypeNames[this.type],volume:this.volume,eqFilter:this.eqFilter.toJsonObject(),eqFilterType:this.eqFilterType,eqSimpleCut:this.eqFilterSimpleCut,eqSimplePeak:this.eqFilterSimplePeak,envelopeSpeed:this.envelopeSpeed};this.preset!=this.type&&(e.preset=this.preset);for(let t=0;t<c.filterMorphCount;t++)null!=this.eqSubFilters[t]&&(e["eqSubFilters"+t]=this.eqSubFilters[t].toJsonObject());const t=[];for(const e of c.effectOrder)this.effects&1<<e&&t.push(c.effectNames[e]);if(e.effects=t,b(this.effects)&&(e.transition=c.transitions[this.transition].name,e.clicklessTransition=this.clicklessTransition),w(this.effects)&&(e.chord=this.getChord().name,e.fastTwoNoteArp=this.fastTwoNoteArp,e.arpeggioSpeed=this.arpeggioSpeed,e.monoChordTone=this.monoChordTone),F(this.effects)&&(e.pitchShiftSemitones=this.pitchShift),k(this.effects)&&(e.detuneCents=Ge.detuneToCents(this.detune)),q(this.effects)&&(-1==this.vibrato&&(this.vibrato=5),5!=this.vibrato?e.vibrato=c.vibratos[this.vibrato].name:e.vibrato="custom",e.vibratoDepth=this.vibratoDepth,e.vibratoDelay=this.vibratoDelay,e.vibratoSpeed=this.vibratoSpeed,e.vibratoType=this.vibratoType),M(this.effects)){e.noteFilterType=this.noteFilterType,e.noteSimpleCut=this.noteFilterSimpleCut,e.noteSimplePeak=this.noteFilterSimplePeak,e.noteFilter=this.noteFilter.toJsonObject();for(let t=0;t<c.filterMorphCount;t++)null!=this.noteSubFilters[t]&&(e["noteSubFilters"+t]=this.noteSubFilters[t].toJsonObject())}if(G(this.effects)&&(e.granular=this.granular,e.grainSize=this.grainSize,e.grainAmounts=this.grainAmounts,e.grainRange=this.grainRange),P(this.effects)&&(e.ringMod=Math.round(100*this.ringModulation/(c.ringModRange-1)),e.ringModHz=Math.round(100*this.ringModulationHz/(c.ringModHzRange-1)),e.ringModWaveformIndex=this.ringModWaveformIndex,e.ringModPulseWidth=Math.round(100*this.ringModPulseWidth/(c.pulseWidthRange-1)),e.ringModHzOffset=Math.round(100*this.ringModHzOffset/c.rmHzOffsetMax)),x(this.effects)&&(e.distortion=Math.round(100*this.distortion/(c.distortionRange-1)),e.aliases=this.aliases),z(this.effects)&&(e.bitcrusherOctave=(c.bitcrusherFreqRange-1-this.bitcrusherFreq)*c.bitcrusherOctaveStep,e.bitcrusherQuantization=Math.round(100*this.bitcrusherQuantization/(c.bitcrusherQuantizationRange-1))),T(this.effects)&&(e.pan=Math.round(100*(this.pan-c.panCenter)/c.panCenter),e.panDelay=this.panDelay),I(this.effects)&&(e.chorus=Math.round(100*this.chorus/(c.chorusRange-1))),E(this.effects)&&(e.echoSustain=Math.round(100*this.echoSustain/(c.echoSustainRange-1)),e.echoDelayBeats=Math.round(1e3*(this.echoDelay+1)*c.echoDelayStepTicks/(c.ticksPerPart*c.partsPerBeat))/1e3),H(this.effects)&&(e.reverb=Math.round(100*this.reverb/(c.reverbRange-1))),4!=this.type&&(e.fadeInSeconds=Math.round(1e4*Ge.fadeInSettingToSeconds(this.fadeIn))/1e4,e.fadeOutTicks=Ge.fadeOutSettingToTicks(this.fadeOut)),5==this.type||7==this.type){e.harmonics=[];for(let t=0;t<c.harmonicsControlPoints;t++)e.harmonics[t]=Math.round(100*this.harmonicsWave.harmonics[t]/c.harmonicsMax)}if(2==this.type)e.wave=c.chipNoises[this.chipNoise].name,e.unison=this.unison==c.unisons.length?"custom":c.unisons[this.unison].name,this.unison==c.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(3==this.type){e.spectrum=[];for(let t=0;t<c.spectrumControlPoints;t++)e.spectrum[t]=Math.round(100*this.spectrumWave.spectrum[t]/c.spectrumMax);e.unison=this.unison==c.unisons.length?"custom":c.unisons[this.unison].name,this.unison==c.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign)}else if(4==this.type){e.drums=[],e.unison=this.unison==c.unisons.length?"custom":c.unisons[this.unison].name,this.unison==c.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);for(let t=0;t<c.drumCount;t++){const n=[];for(let e=0;e<c.spectrumControlPoints;e++)n[e]=Math.round(100*this.drumsetSpectrumWaves[t].spectrum[e]/c.spectrumMax);e.drums[t]={filterEnvelope:this.getDrumsetEnvelope(t).name,spectrum:n}}}else if(0==this.type)e.wave=c.chipWaves[this.chipWave].name,e.unison=this.unison==c.unisons.length?"custom":c.unisons[this.unison].name,this.unison==c.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.isUsingAdvancedLoopControls=this.isUsingAdvancedLoopControls,e.chipWaveLoopStart=this.chipWaveLoopStart,e.chipWaveLoopEnd=this.chipWaveLoopEnd,e.chipWaveLoopMode=this.chipWaveLoopMode,e.chipWavePlayBackwards=this.chipWavePlayBackwards,e.chipWaveStartOffset=this.chipWaveStartOffset;else if(6==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.unison=this.unison==c.unisons.length?"custom":c.unisons[this.unison].name,this.unison==c.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(8==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.dynamism=Math.round(100*this.supersawDynamism/c.supersawDynamismMax),e.spread=Math.round(100*this.supersawSpread/c.supersawSpreadMax),e.shape=Math.round(100*this.supersawShape/c.supersawShapeMax);else if(7==this.type)e.unison=this.unison==c.unisons.length?"custom":c.unisons[this.unison].name,this.unison==c.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.stringSustain=Math.round(100*this.stringSustain/(c.stringSustainRange-1)),c.enableAcousticSustain&&(e.stringSustainType=c.sustainTypeNames[this.stringSustainType]);else if(5==this.type)e.unison=this.unison==c.unisons.length?"custom":c.unisons[this.unison].name,this.unison==c.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(1==this.type||11==this.type){const t=[];for(const e of this.operators)t.push({frequency:c.operatorFrequencies[e.frequency].name,amplitude:e.amplitude,waveform:c.operatorWaves[e.waveform].name,pulseWidth:e.pulseWidth});if(1==this.type)e.algorithm=c.algorithms[this.algorithm].name,e.feedbackType=c.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.operators=t;else{if(e.algorithm=c.algorithms6Op[this.algorithm6Op].name,e.feedbackType=c.feedbacks6Op[this.feedbackType6Op].name,e.feedbackAmplitude=this.feedbackAmplitude,0==this.algorithm6Op){const t={};t.mods=this.customAlgorithm.modulatedBy,t.carrierCount=this.customAlgorithm.carrierCount,e.customAlgorithm=t}if(0==this.feedbackType6Op){const t={};t.mods=this.customFeedbackType.indices,e.customFeedback=t}e.operators=t}}else if(9==this.type){e.wave=c.chipWaves[this.chipWave].name,e.unison=this.unison==c.unisons.length?"custom":c.unisons[this.unison].name,this.unison==c.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let t=0;t<this.customChipWave.length;t++)e.customChipWave[t]=this.customChipWave[t]}else{if(10!=this.type)throw new Error("Unrecognized instrument type");e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modFilterTypes=[],e.modEnvelopeNumbers=[];for(let t=0;t<c.modCount;t++)e.modChannels[t]=this.modChannels[t],e.modInstruments[t]=this.modInstruments[t],e.modSettings[t]=this.modulators[t],e.modFilterTypes[t]=this.modFilterTypes[t],e.modEnvelopeNumbers[t]=this.modEnvelopeNumbers[t]}const n=[];for(let e=0;e<this.envelopeCount;e++)n.push(this.envelopes[e].toJsonObject());return e.envelopes=n,e}fromJsonObject(e,t,n,i,a,s=0,o=c.jsonFormat){null==e&&(e={});const r=o.toLowerCase();let l=c.instrumentTypeNames.indexOf(e.type);if("synthbox"==r&&"FM"==e.type&&(l=c.instrumentTypeNames.indexOf("FM6op")),-1==l&&(l=n?10:t?2:0),this.setTypeAndReset(l,t,n),this.effects&=-5,null!=e.preset&&(this.preset=e.preset>>>0),null!=e.volume?this.volume="jummbox"==r||"midbox"==r||"synthbox"==r||"goldbox"==r||"paandorasbox"==r||"ultrabox"==r||"slarmoosbox"==r?X(-c.volumeRange/2,c.volumeRange/2+1,0|e.volume):Math.round(25*-X(0,8,Math.round(5-(0|e.volume)/20))/7):this.volume=0,this.envelopeSpeed=null!=e.envelopeSpeed?X(0,c.modulators.dictionary["envelope speed"].maxRawVol+1,0|e.envelopeSpeed):12,Array.isArray(e.effects)){let t=0;for(let n=0;n<e.effects.length;n++)t|=1<<c.effectNames.indexOf(e.effects[n]);this.effects=32767&t}else{const t=["none","reverb","chorus","chorus & reverb"];this.effects=t.indexOf(e.effects),-1==this.effects&&(this.effects=2==this.type?0:1)}this.transition=c.transitions.dictionary.normal.index;const p=e.transition||e.envelope;if(null!=p){let t=c.transitions.dictionary[p];if(null==e.fadeInSeconds||null==e.fadeOutTicks){const e={binary:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},seamless:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},sudden:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},hard:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},smooth:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},soft:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},slide:{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},"cross fade":{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},"hard fade":{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},"medium fade":{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},"soft fade":{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96}}[p];null!=e&&(t=c.transitions.dictionary[e.transition],this.fadeIn=Ge.secondsToFadeInSetting(e.fadeInSeconds),this.fadeOut=Ge.ticksToFadeOutSetting(e.fadeOutTicks))}null!=t&&(this.transition=t.index),this.transition!=c.transitions.dictionary.normal.index&&(this.effects=1024|this.effects)}null!=e.fadeInSeconds&&(this.fadeIn=Ge.secondsToFadeInSetting(+e.fadeInSeconds)),null!=e.fadeOutTicks&&(this.fadeOut=Ge.ticksToFadeOutSetting(+e.fadeOutTicks));{const t=e.chord,n={harmony:"simultaneous"},i=c.chords.dictionary[n[t]]||c.chords.dictionary[t];null!=i?this.chord=i.index:2==this.type?this.chord=c.chords.dictionary.arpeggio.index:7==this.type?this.chord=c.chords.dictionary.strum.index:0==this.type?this.chord=c.chords.dictionary.arpeggio.index:1==this.type||11==this.type?this.chord=c.chords.dictionary["custom interval"].index:this.chord=c.chords.dictionary.simultaneous.index}this.unison=c.unisons.dictionary.none.index;const u=e.unison||e.interval||e.chorus;if(null!=u){const e={union:"none",fifths:"fifth",octaves:"octave",error:"voiced"},t=c.unisons.dictionary[e[u]]||c.unisons.dictionary[u];null!=t&&(this.unison=t.index),"custom"==u&&(this.unison=c.unisons.length)}if(this.unisonVoices=null==e.unisonVoices?c.unisons[this.unison].voices:e.unisonVoices,this.unisonSpread=null==e.unisonSpread?c.unisons[this.unison].spread:e.unisonSpread,this.unisonOffset=null==e.unisonOffset?c.unisons[this.unison].offset:e.unisonOffset,this.unisonExpression=null==e.unisonExpression?c.unisons[this.unison].expression:e.unisonExpression,this.unisonSign=null==e.unisonSign?c.unisons[this.unison].sign:e.unisonSign,"custom harmony"==e.chorus&&(this.unison=c.unisons.dictionary.hum.index,this.chord=c.chords.dictionary["custom interval"].index),this.chord==c.chords.dictionary.simultaneous.index||Array.isArray(e.effects)||(this.effects=2048|this.effects),null!=e.pitchShiftSemitones&&(this.pitchShift=X(0,c.pitchShiftRange,Math.round(+e.pitchShiftSemitones))),null!=e.octoff){let t=e.octoff;this.effects=128|this.effects,this.pitchShift="+1 (octave)"==t||"+2 (2 octaves)"==t?24:"+1/2 (fifth)"==t||"+1 1/2 (octave and fifth)"==t?18:"-1 (octave)"==t||"-2 (2 octaves"==t?0:"-1/2 (fifth)"==t||"-1 1/2 (octave and fifth)"==t?6:12}null!=e.detuneCents&&(this.detune=X(c.detuneMin,c.detuneMax+1,Math.round(Ge.centsToDetune(+e.detuneCents)))),this.vibrato=c.vibratos.dictionary.none.index;const h=e.vibrato||e.effect;if(null!=h){const t={"vibrato light":"light","vibrato delayed":"delayed","vibrato heavy":"heavy"},n=c.vibratos.dictionary[t[u]]||c.vibratos.dictionary[h];null!=n?this.vibrato=n.index:"custom"==h&&(this.vibrato=c.vibratos.length),this.vibrato==c.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=c.vibratos[this.vibrato].amplitude,this.vibratoDelay=c.vibratos[this.vibrato].delayTicks/2,this.vibratoSpeed=10,this.vibratoType=c.vibratos[this.vibrato].type),n!=c.vibratos.dictionary.none&&(this.effects=512|this.effects)}if(null!=e.pan?this.pan=X(0,c.panMax+1,Math.round(c.panCenter+(0|e.pan)*c.panCenter/100)):null!=e.ipan?this.pan=X(0,c.panMax+1,c.panCenter+-50*e.ipan):this.pan=c.panCenter,this.pan!=c.panCenter&&(this.effects=4|this.effects),null!=e.panDelay?this.panDelay=0|e.panDelay:this.panDelay=0,null!=e.detune?this.detune=X(c.detuneMin,c.detuneMax+1,0|e.detune):null==e.detuneCents&&(this.detune=c.detuneCenter),null!=e.ringMod&&(this.ringModulation=X(0,c.ringModRange,Math.round((c.ringModRange-1)*(0|e.ringMod)/100))),null!=e.ringModHz&&(this.ringModulationHz=X(0,c.ringModHzRange,Math.round((c.ringModHzRange-1)*(0|e.ringModHz)/100))),null!=e.ringModWaveformIndex&&(this.ringModWaveformIndex=X(0,c.operatorWaves.length,e.ringModWaveformIndex)),null!=e.ringModPulseWidth&&(this.ringModPulseWidth=X(0,c.pulseWidthRange,Math.round((c.pulseWidthRange-1)*(0|e.ringModPulseWidth)/100))),null!=e.ringModHzOffset&&(this.ringModHzOffset=X(0,c.rmHzOffsetMax,Math.round((c.rmHzOffsetMax-1)*(0|e.ringModHzOffset)/100))),null!=e.granular&&(this.granular=e.granular),null!=e.grainSize&&(this.grainSize=e.grainSize),null!=e.grainAmounts&&(this.grainAmounts=e.grainAmounts),null!=e.grainRange&&(this.grainRange=X(0,c.grainRangeMax/c.grainSizeStep+1,e.grainRange)),null!=e.distortion&&(this.distortion=X(0,c.distortionRange,Math.round((c.distortionRange-1)*(0|e.distortion)/100))),null!=e.bitcrusherOctave&&(this.bitcrusherFreq=c.bitcrusherFreqRange-1-+e.bitcrusherOctave/c.bitcrusherOctaveStep),null!=e.bitcrusherQuantization&&(this.bitcrusherQuantization=X(0,c.bitcrusherQuantizationRange,Math.round((c.bitcrusherQuantizationRange-1)*(0|e.bitcrusherQuantization)/100))),null!=e.echoSustain&&(this.echoSustain=X(0,c.echoSustainRange,Math.round((c.echoSustainRange-1)*(0|e.echoSustain)/100))),null!=e.echoDelayBeats&&(this.echoDelay=X(0,c.echoDelayRange,Math.round(+e.echoDelayBeats*(c.ticksPerPart*c.partsPerBeat)/c.echoDelayStepTicks-1))),isNaN(e.chorus)||(this.chorus=X(0,c.chorusRange,Math.round((c.chorusRange-1)*(0|e.chorus)/100))),null!=e.reverb?this.reverb=X(0,c.reverbRange,Math.round((c.reverbRange-1)*(0|e.reverb)/100)):this.reverb=s,null!=e.pulseWidth?this.pulseWidth=X(1,c.pulseWidthRange+1,Math.round(e.pulseWidth)):this.pulseWidth=c.pulseWidthRange,null!=e.decimalOffset?this.decimalOffset=X(0,100,Math.round(e.decimalOffset)):this.decimalOffset=0,null!=e.dynamism?this.supersawDynamism=X(0,c.supersawDynamismMax+1,Math.round(c.supersawDynamismMax*(0|e.dynamism)/100)):this.supersawDynamism=c.supersawDynamismMax,null!=e.spread?this.supersawSpread=X(0,c.supersawSpreadMax+1,Math.round(c.supersawSpreadMax*(0|e.spread)/100)):this.supersawSpread=Math.ceil(c.supersawSpreadMax/2),null!=e.shape?this.supersawShape=X(0,c.supersawShapeMax+1,Math.round(c.supersawShapeMax*(0|e.shape)/100)):this.supersawShape=0,null!=e.harmonics){for(let t=0;t<c.harmonicsControlPoints;t++)this.harmonicsWave.harmonics[t]=Math.max(0,Math.min(c.harmonicsMax,Math.round(c.harmonicsMax*+e.harmonics[t]/100)));this.harmonicsWave.markCustomWaveDirty()}else this.harmonicsWave.reset();if(null!=e.spectrum)for(let t=0;t<c.spectrumControlPoints;t++)this.spectrumWave.spectrum[t]=Math.max(0,Math.min(c.spectrumMax,Math.round(c.spectrumMax*+e.spectrum[t]/100))),this.spectrumWave.markCustomWaveDirty();else this.spectrumWave.reset(t);null!=e.stringSustain?this.stringSustain=X(0,c.stringSustainRange,Math.round((c.stringSustainRange-1)*(0|e.stringSustain)/100)):this.stringSustain=10,this.stringSustainType=c.enableAcousticSustain?c.sustainTypeNames.indexOf(e.stringSustainType):0,-1==this.stringSustainType&&(this.stringSustainType=0),2==this.type&&(this.chipNoise=c.chipNoises.findIndex((t=>t.name==e.wave)),"pink noise"==e.wave&&(this.chipNoise=c.chipNoises.findIndex((e=>"pink"==e.name))),"brownian noise"==e.wave&&(this.chipNoise=c.chipNoises.findIndex((e=>"brownian"==e.name))),-1==this.chipNoise&&(this.chipNoise=1));const f={custom:"note size",steady:"none","pluck 1":"twang 1","pluck 2":"twang 2","pluck 3":"twang 3"},d=e=>null!=f[e]?c.envelopes.dictionary[f[e]]:c.envelopes.dictionary[e];if(4==this.type&&null!=e.drums)for(let t=0;t<c.drumCount;t++){const n=e.drums[t];if(null!=n){if(this.drumsetEnvelopes[t]=c.envelopes.dictionary["twang 2"].index,null!=n.filterEnvelope){const e=d(n.filterEnvelope);null!=e&&(this.drumsetEnvelopes[t]=e.index)}if(null!=n.spectrum)for(let e=0;e<c.spectrumControlPoints;e++)this.drumsetSpectrumWaves[t].spectrum[e]=Math.max(0,Math.min(c.spectrumMax,Math.round(c.spectrumMax*+n.spectrum[e]/100)));this.drumsetSpectrumWaves[t].markCustomWaveDirty()}}if(0==this.type){const t={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0},n={"10% pulse":22,"sunsoft bass":23,"loud pulse":24,sax:25,guitar:26,"atari bass":28,"atari pulse":29,"1% pulse":30,"curved sawtooth":31,viola:32,brass:33,"acoustic bass":34,lyre:35,"ramp pulse":36,piccolo:37,squaretooth:38,flatline:39,"pnryshk a (u5)":40,"pnryshk b (riff)":41},i={"shrill lute":42,"shrill bass":44,"nes pulse":45,"saw bass":46,euphonium:47,"shrill pulse":48,"r-sawtooth":49,recorder:50,"narrow saw":51,"deep square":52,"ring pulse":53,"double sine":54,contrabass:55,"double bass":56},a={"semi-square":63,"deep square":64,squaretal:40,"saw wide":65,"saw narrow ":66,"deep sawtooth":67,sawtal:68,pulse:69,"triple pulse":70,"high pulse":71,"deep pulse":72},s={test1:56,"pokey 4bit lfsr":57,"pokey 5step bass":58,"isolated spiky":59,"unnamed 1":60,"unnamed 2":61,"guitar string":75,intense:76,"buzz wave":77,"pokey square":57,"pokey bass":58,"banana wave":83,"test 1":84,"test 2":84,"real snare":85,"earthbound o. guitar":86},o={kick:87,snare:88,piano1:89,WOW:90,overdrive:91,trumpet:92,saxophone:93,orchestrahit:94,"detached violin":95,synth:96,sonic3snare:97,"come on":98,choir:99,overdriveguitar:100,flute:101,"legato violin":102,"tremolo violin":103,"amen break":104,"pizzicato violin":105,"tim allen grunt":106,tuba:107,loopingcymbal:108,standardkick:109,standardsnare:110,closedhihat:111,foothihat:112,openhihat:113,crashcymbal:114,pianoC4:115,"liver pad":116,marimba:117,susdotwav:118,wackyboxtts:119};this.chipWave=-1;const r=e.wave;for(const e of[t,n,i,a,s,o])if(-1==this.chipWave&&null!=e[r]&&null!=c.chipWaves[e[r]]){this.chipWave=e[r];break}if(-1==this.chipWave){const e=c.chipWaves.findIndex((e=>e.name==r));-1!=e&&(this.chipWave=e)}-1==this.chipWave&&(this.chipWave=1)}if(1==this.type||11==this.type){if(1==this.type)this.algorithm=c.algorithms.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=c.feedbacks.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType&&(this.feedbackType=0);else{if(this.algorithm6Op=c.algorithms6Op.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm6Op&&(this.algorithm6Op=1),0==this.algorithm6Op?this.customAlgorithm.set(e.customAlgorithm.carrierCount,e.customAlgorithm.mods):this.customAlgorithm.fromPreset(this.algorithm6Op),this.feedbackType6Op=c.feedbacks6Op.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType6Op){let t=S([{name:"2⟲ 3⟲",indices:[[],[2],[3],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"4⟲ 5⟲",indices:[[],[],[],[4],[5],[]]},{name:"5⟲ 6⟲",indices:[[],[],[],[],[5],[6]]},{name:"1⟲ 6⟲",indices:[[1],[],[],[],[],[6]]},{name:"1⟲ 3⟲",indices:[[1],[],[3],[],[],[]]},{name:"1⟲ 4⟲",indices:[[1],[],[],[4],[],[]]},{name:"1⟲ 5⟲",indices:[[1],[],[],[],[5],[]]},{name:"4⟲ 6⟲",indices:[[],[],[],[4],[],[6]]},{name:"2⟲ 6⟲",indices:[[],[2],[],[],[],[6]]},{name:"3⟲ 6⟲",indices:[[],[],[3],[],[],[6]]},{name:"4⟲ 5⟲ 6⟲",indices:[[],[],[],[4],[5],[6]]},{name:"1⟲ 3⟲ 6⟲",indices:[[1],[],[3],[],[],[6]]},{name:"2→5",indices:[[],[],[],[],[2],[]]},{name:"2→6",indices:[[],[],[],[],[],[2]]},{name:"3→5",indices:[[],[],[],[],[3],[]]},{name:"3→6",indices:[[],[],[],[],[],[3]]},{name:"4→6",indices:[[],[],[],[],[],[4]]},{name:"5→6",indices:[[],[],[],[],[],[5]]},{name:"1→3→4",indices:[[],[],[1],[],[3],[]]},{name:"2→5→6",indices:[[],[],[],[],[2],[5]]},{name:"2→4→6",indices:[[],[],[],[2],[],[4]]},{name:"4→5→6",indices:[[],[],[],[],[4],[5]]},{name:"3→4→5→6",indices:[[],[],[],[3],[4],[5]]},{name:"2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]}]),n=t[t.findIndex((t=>t.name==e.feedbackType))].indices;null!=n?(this.feedbackType6Op=0,this.customFeedbackType.set(n)):this.feedbackType6Op=1}0==this.feedbackType6Op&&null!=e.customFeedback?this.customFeedbackType.set(e.customFeedback.mods):this.customFeedbackType.fromPreset(this.feedbackType6Op)}null!=e.feedbackAmplitude?this.feedbackAmplitude=X(0,c.operatorAmplitudeMax+1,0|e.feedbackAmplitude):this.feedbackAmplitude=0;for(let t=0;t<c.operatorCount+(11==this.type?2:0);t++){const n=this.operators[t];let i;if(null!=e.operators&&(i=e.operators[t]),null==i&&(i={}),n.frequency=c.operatorFrequencies.findIndex((e=>e.name==i.frequency)),-1==n.frequency&&(n.frequency=0),null!=i.amplitude?n.amplitude=X(0,c.operatorAmplitudeMax+1,0|i.amplitude):n.amplitude=0,null!=i.waveform){if("goldbox"==r&&t>3){n.waveform=0;continue}n.waveform=c.operatorWaves.findIndex((e=>e.name==i.waveform)),-1==n.waveform&&("square"==i.waveform?(n.waveform=c.operatorWaves.dictionary["pulse width"].index,n.pulseWidth=5):"rounded"==i.waveform?n.waveform=c.operatorWaves.dictionary["quasi-sine"].index:n.waveform=0)}else n.waveform=0;null!=i.pulseWidth?n.pulseWidth=0|i.pulseWidth:n.pulseWidth=5}}else if(9==this.type){if(e.customChipWave){for(let t=0;t<64;t++)this.customChipWave[t]=e.customChipWave[t];let t=0;for(let e=0;e<this.customChipWave.length;e++)t+=this.customChipWave[e];const n=t/this.customChipWave.length;let i=0,a=0;for(let e=0;e<this.customChipWave.length;e++)i+=a,a=this.customChipWave[e]-n,this.customChipWaveIntegral[e]=i;this.customChipWaveIntegral[64]=0}}else if(10==this.type&&null!=e.modChannels)for(let t=0;t<c.modCount;t++)this.modChannels[t]=e.modChannels[t],this.modInstruments[t]=e.modInstruments[t],this.modulators[t]=e.modSettings[t],null!=e.modFilterTypes&&(this.modFilterTypes[t]=e.modFilterTypes[t]),null!=e.modEnvelopeNumbers&&(this.modEnvelopeNumbers[t]=e.modEnvelopeNumbers[t]);if(10!=this.type){this.chord==c.chords.dictionary.arpeggio.index&&null!=e.arpeggioSpeed?this.arpeggioSpeed=e.arpeggioSpeed:this.arpeggioSpeed=i?9:12,this.chord==c.chords.dictionary.monophonic.index&&null!=e.monoChordTone&&(this.monoChordTone=e.monoChordTone),null!=e.fastTwoNoteArp?this.fastTwoNoteArp=e.fastTwoNoteArp:this.fastTwoNoteArp=a,null!=e.clicklessTransition?this.clicklessTransition=e.clicklessTransition:this.clicklessTransition=!1,null!=e.aliases?this.aliases=e.aliases:"modbox"==r?(this.effects=8|this.effects,this.aliases=!0,this.distortion=0):this.aliases=!1,null!=e.noteFilterType&&(this.noteFilterType=e.noteFilterType),null!=e.noteSimpleCut&&(this.noteFilterSimpleCut=e.noteSimpleCut),null!=e.noteSimplePeak&&(this.noteFilterSimplePeak=e.noteSimplePeak),null!=e.noteFilter?this.noteFilter.fromJsonObject(e.noteFilter):this.noteFilter.reset();for(let t=0;t<c.filterMorphCount;t++)Array.isArray(e["noteSubFilters"+t])&&(this.noteSubFilters[t]=new ke,this.noteSubFilters[t].fromJsonObject(e["noteSubFilters"+t]));if(null!=e.eqFilterType&&(this.eqFilterType=e.eqFilterType),null!=e.eqSimpleCut&&(this.eqFilterSimpleCut=e.eqSimpleCut),null!=e.eqSimplePeak&&(this.eqFilterSimplePeak=e.eqSimplePeak),Array.isArray(e.eqFilter))this.eqFilter.fromJsonObject(e.eqFilter);else{this.eqFilter.reset();const t={},n=8e3,i=11,a=8;if(null!=e.filterCutoffHz?t.filterCutoff=X(0,i,Math.round(i-1+2*Math.log((0|e.filterCutoffHz)/n)/Math.LN2)):t.filterCutoff=0==this.type?6:10,null!=e.filterResonance?t.filterResonance=X(0,a,Math.round((a-1)*(0|e.filterResonance)/100)):t.filterResonance=0,t.filterEnvelope=d(e.filterEnvelope),t.pulseEnvelope=d(e.pulseEnvelope),t.feedbackEnvelope=d(e.feedbackEnvelope),Array.isArray(e.operators)){t.operatorEnvelopes=[];for(let n=0;n<c.operatorCount+(11==this.type?2:0);n++){let i;null!=e.operators[n]&&(i=d(e.operators[n].envelope)),t.operatorEnvelopes[n]=null!=i?i:c.envelopes.dictionary.none}}if(null!=e.filter){const n=[10,6,3,0,8,5,2],i=["none","none","none","none","decay 1","decay 2","decay 3"],a=["none","bright","medium","soft","decay bright","decay medium","decay soft"],s={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let o=null!=s[e.filter]?s[e.filter]:a.indexOf(e.filter);-1==o&&(o=0),t.filterCutoff=n[o],t.filterEnvelope=d(i[o]),t.filterResonance=0}this.convertLegacySettings(t,!0)}for(let t=0;t<c.filterMorphCount;t++)Array.isArray(e["eqSubFilters"+t])&&(this.eqSubFilters[t]=new ke,this.eqSubFilters[t].fromJsonObject(e["eqSubFilters"+t]));if(Array.isArray(e.envelopes)){const t=e.envelopes;for(let n=0;n<t.length&&!(this.envelopeCount>=c.maxEnvelopeCount);n++){const i=new qe(this.isNoiseInstrument);let a,s,o,l;i.fromJsonObject(t[n],r),a=null!=e.pitchEnvelopeStart&&null!=e.pitchEnvelopeStart?e.pitchEnvelopeStart:null!=e["pitchEnvelopeStart"+n]&&null!=e["pitchEnvelopeStart"+n]?e["pitchEnvelopeStart"+n]:i.pitchEnvelopeStart,s=null!=e.pitchEnvelopeEnd&&null!=e.pitchEnvelopeEnd?e.pitchEnvelopeEnd:null!=e["pitchEnvelopeEnd"+n]&&null!=e["pitchEnvelopeEnd"+n]?e["pitchEnvelopeEnd"+n]:i.pitchEnvelopeEnd,o=null!=e["envelopeInverse"+n]&&null!=e["envelopeInverse"+n]?e["envelopeInverse"+n]:null!=e.pitchEnvelopeInverse&&null!=e.pitchEnvelopeInverse&&"pitch"==c.envelopes[i.envelope].name?e.pitchEnvelopeInverse:i.inverse,l=null!=e.discreteEnvelope?e.discreteEnvelope:i.discrete,this.addEnvelope(i.target,i.index,i.envelope,!0,a,s,o,i.perEnvelopeSpeed,i.perEnvelopeLowerBound,i.perEnvelopeUpperBound,i.steps,i.seed,i.waveform,l)}}}0===l&&(null!=e.isUsingAdvancedLoopControls?(this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset):(this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=c.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0))}getLargestControlPointCount(e){let t;if(e){t=this.noteFilter.controlPointCount;for(let e=0;e<c.filterMorphCount;e++)null!=this.noteSubFilters[e]&&this.noteSubFilters[e].controlPointCount>t&&(t=this.noteSubFilters[e].controlPointCount)}else{t=this.eqFilter.controlPointCount;for(let e=0;e<c.filterMorphCount;e++)null!=this.eqSubFilters[e]&&this.eqSubFilters[e].controlPointCount>t&&(t=this.eqSubFilters[e].controlPointCount)}return t}static frequencyFromPitch(e){return 440*Math.pow(2,(e-69)/12)}addEnvelope(e,t,n,i,a=0,s=-1,o=!1,r=-1,l=0,p=1,u=2,h=2,f=0,d=!1){s=-1!=s?s:this.isNoiseInstrument?c.drumCount-1:c.maxPitch,r=-1!=r?r:i?1:c.envelopes[n].speed;let m=!1;if(this.supportsEnvelopeTarget(e,t)||(m=!0),this.envelopeCount>=c.maxEnvelopeCount)throw new Error;for(;this.envelopes.length<=this.envelopeCount;)this.envelopes[this.envelopes.length]=new qe(this.isNoiseInstrument);const v=this.envelopes[this.envelopeCount];v.target=m?c.instrumentAutomationTargets.dictionary.none.index:e,v.index=m?0:t,v.envelope=i?n:X(0,c.newEnvelopes.length,c.envelopes[n].type),v.pitchEnvelopeStart=a,v.pitchEnvelopeEnd=s,v.inverse=o,v.perEnvelopeSpeed=r,v.perEnvelopeLowerBound=l,v.perEnvelopeUpperBound=p,v.steps=u,v.seed=h,v.waveform=f,v.discrete=d,this.envelopeCount++}supportsEnvelopeTarget(e,t){const n=c.instrumentAutomationTargets[e];if(null==n.computeIndex&&"none"!=n.name)return!1;if(t>=n.maxCount)return!1;if(null!=n.compatibleInstruments&&-1==n.compatibleInstruments.indexOf(this.type))return!1;if(null!=n.effect&&0==(this.effects&1<<n.effect))return!1;if("arpeggioSpeed"==n.name)return w(this.effects)&&this.chord==c.chords.dictionary.arpeggio.index;if(n.isFilter){let e=this.noteFilter.controlPointCount;if(this.noteFilterType&&(e=1),t>=e)return!1}return"operatorFrequency"!=n.name&&"operatorAmplitude"!=n.name||!(t>=4+(11==this.type?2:0))}clearInvalidEnvelopeTargets(){for(let e=0;e<this.envelopeCount;e++){const t=this.envelopes[e].target,n=this.envelopes[e].index;this.supportsEnvelopeTarget(t,n)||(this.envelopes[e].target=c.instrumentAutomationTargets.dictionary.none.index,this.envelopes[e].index=0)}}getTransition(){return b(this.effects)?c.transitions[this.transition]:10==this.type?c.transitions.dictionary.interrupt:c.transitions.dictionary.normal}getFadeInSeconds(){return 4==this.type?0:Ge.fadeInSettingToSeconds(this.fadeIn)}getFadeOutTicks(){return 4==this.type?c.drumsetFadeOutTicks:Ge.fadeOutSettingToTicks(this.fadeOut)}getChord(){return w(this.effects)?c.chords[this.chord]:c.chords.dictionary.simultaneous}getDrumsetEnvelope(e){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return c.envelopes[this.drumsetEnvelopes[e]]}}class xe{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1,this.name=""}}class ze{constructor(e){this.scaleCustom=[],this.channels=[],this.limitDecay=4,this.limitRise=4e3,this.compressionThreshold=1,this.limitThreshold=1,this.compressionRatio=1,this.limitRatio=1,this.masterGain=1,this.inVolumeCap=0,this.outVolumeCap=0,this.eqFilter=new ke,this.eqFilterType=!1,this.eqFilterSimpleCut=c.filterSimpleCutRange-1,this.eqFilterSimplePeak=0,this.eqSubFilters=[],this.getNewNoteVolume=(e,t,n,i)=>{if(e&&null!=t&&null!=n&&null!=i){i=c.modCount-i-1;const e=this.channels[t].instruments[n];let a=c.modulators[e.modulators[i]].newNoteVol,s=e.modulators[i],o=c.modulators.dictionary.tempo.index;if(s==o&&(a=this.tempo-c.modulators[o].convertRealFactor),!c.modulators[s].forSong&&e.modInstruments[i]<this.channels[e.modChannels[i]].instruments.length){let t=c.modulators.dictionary.chorus.index,n=c.modulators.dictionary.reverb.index,o=c.modulators.dictionary.pan.index,r=c.modulators.dictionary["pan delay"].index,l=c.modulators.dictionary.distortion.index,p=c.modulators.dictionary.detune.index,u=c.modulators.dictionary["vibrato depth"].index,h=c.modulators.dictionary["vibrato speed"].index,f=c.modulators.dictionary["vibrato delay"].index,d=c.modulators.dictionary["arp speed"].index,m=c.modulators.dictionary["bit crush"].index,v=c.modulators.dictionary["freq crush"].index,y=c.modulators.dictionary.echo.index,g=c.modulators.dictionary["echo delay"].index,S=c.modulators.dictionary["pitch shift"].index,b=c.modulators.dictionary["ring modulation"].index,w=c.modulators.dictionary["ring mod hertz"].index,F=c.modulators.dictionary.granular.index,k=c.modulators.dictionary["grain freq"].index,q=c.modulators.dictionary["grain size"].index,M=c.modulators.dictionary["grain range"].index,x=c.modulators.dictionary["envelope speed"].index,z=c.modulators.dictionary["individual envelope speed"].index,T=c.modulators.dictionary["individual envelope lower bound"].index,I=c.modulators.dictionary["individual envelope upper bound"].index,E=e.modInstruments[i];switch(s){case t:a=this.channels[e.modChannels[i]].instruments[E].chorus-c.modulators[t].convertRealFactor;break;case n:a=this.channels[e.modChannels[i]].instruments[E].reverb-c.modulators[n].convertRealFactor;break;case o:a=this.channels[e.modChannels[i]].instruments[E].pan-c.modulators[o].convertRealFactor;break;case r:a=this.channels[e.modChannels[i]].instruments[E].panDelay-c.modulators[r].convertRealFactor;break;case l:a=this.channels[e.modChannels[i]].instruments[E].distortion-c.modulators[l].convertRealFactor;break;case p:a=this.channels[e.modChannels[i]].instruments[E].detune;break;case u:a=Math.round(25*this.channels[e.modChannels[i]].instruments[E].vibratoDepth-c.modulators[u].convertRealFactor);break;case h:a=this.channels[e.modChannels[i]].instruments[E].vibratoSpeed-c.modulators[h].convertRealFactor;break;case f:a=this.channels[e.modChannels[i]].instruments[E].vibratoDelay-c.modulators[f].convertRealFactor;break;case d:a=this.channels[e.modChannels[i]].instruments[E].arpeggioSpeed-c.modulators[d].convertRealFactor;break;case m:a=this.channels[e.modChannels[i]].instruments[E].bitcrusherQuantization-c.modulators[m].convertRealFactor;break;case v:a=this.channels[e.modChannels[i]].instruments[E].bitcrusherFreq-c.modulators[v].convertRealFactor;break;case y:a=this.channels[e.modChannels[i]].instruments[E].echoSustain-c.modulators[y].convertRealFactor;break;case g:a=this.channels[e.modChannels[i]].instruments[E].echoDelay-c.modulators[g].convertRealFactor;break;case S:a=this.channels[e.modChannels[i]].instruments[E].pitchShift;break;case b:a=this.channels[e.modChannels[i]].instruments[E].ringModulation-c.modulators[b].convertRealFactor;break;case w:a=this.channels[e.modChannels[i]].instruments[E].ringModulationHz-c.modulators[w].convertRealFactor;break;case F:a=this.channels[e.modChannels[i]].instruments[E].granular-c.modulators[F].convertRealFactor;break;case k:a=this.channels[e.modChannels[i]].instruments[E].grainAmounts-c.modulators[k].convertRealFactor;break;case q:a=this.channels[e.modChannels[i]].instruments[E].grainSize-c.modulators[q].convertRealFactor;break;case M:a=this.channels[e.modChannels[i]].instruments[E].grainRange-c.modulators[M].convertRealFactor;break;case x:a=this.channels[e.modChannels[i]].instruments[E].envelopeSpeed-c.modulators[x].convertRealFactor;break;case z:a=c.perEnvelopeSpeedToIndices[this.channels[e.modChannels[i]].instruments[E].envelopes[e.modEnvelopeNumbers[i]].perEnvelopeSpeed]-c.modulators[z].convertRealFactor;break;case T:a=this.channels[e.modChannels[i]].instruments[E].envelopes[e.modEnvelopeNumbers[i]].perEnvelopeLowerBound-c.modulators[T].convertRealFactor;break;case I:a=this.channels[e.modChannels[i]].instruments[E].envelopes[e.modEnvelopeNumbers[i]].perEnvelopeUpperBound-c.modulators[I].convertRealFactor}}return null!=a?a:c.noteSizeMax}return c.noteSizeMax},this.getVolumeCap=(e,t,n,i)=>{if(e&&null!=t&&null!=n&&null!=i){i=c.modCount-i-1;let e=this.channels[t].instruments[n],a=c.modulators[e.modulators[i]],s=a.maxRawVol;return null!=s?("eq filter"!=a.name&&"note filter"!=a.name&&"song eq"!=a.name||(s=c.filterMorphCount-1,e.modFilterTypes[i]>0&&e.modFilterTypes[i]%2?s=c.filterFreqRange:e.modFilterTypes[i]>0&&(s=c.filterGainRange)),s):c.noteSizeMax}return c.noteSizeMax},this.getVolumeCapForSetting=(e,t,n)=>{if(e){let e=c.modulators[t].maxRawVol;return null!=e?(null==n||"eq filter"!=c.modulators[t].name&&"note filter"!=c.modulators[t].name&&"song eq"!=c.modulators[t].name||(e=c.filterMorphCount-1,n>0&&n%2?e=c.filterFreqRange:n>0&&(e=c.filterGainRange)),e):c.noteSizeMax}return c.noteSizeMax},null!=e?this.fromBase64String(e):this.initToDefault(!0)}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getMaxInstrumentsPerChannel(){return Math.max(this.layeredInstruments?c.layeredInstrumentCountMax:c.instrumentCountMin,this.patternInstruments?c.patternInstrumentCountMax:c.instrumentCountMin)}getMaxInstrumentsPerPattern(e){return this.getMaxInstrumentsPerPatternForChannel(this.channels[e])}getMaxInstrumentsPerPatternForChannel(e){return this.layeredInstruments?Math.min(c.layeredInstrumentCountMax,e.instruments.length):1}getChannelIsNoise(e){return e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(e){return e>=this.pitchChannelCount+this.noiseChannelCount}initToDefault(e=!0){this.scale=0,this.scaleCustom=[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0],this.key=0,this.octave=0,this.loopStart=0,this.loopLength=4,this.tempo=150,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.layeredInstruments=!1,this.patternInstruments=!1,this.eqFilter.reset();for(let e=0;e<c.filterMorphCount-1;e++)this.eqSubFilters[e]=null;if(this.title="Untitled",document.title=this.title+" - "+W.versionDisplayName,e){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=1;for(let e=0;e<this.getChannelCount();e++){const t=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,n=e>=this.pitchChannelCount+this.noiseChannelCount;this.channels.length<=e&&(this.channels[e]=new xe);const i=this.channels[e];i.octave=Math.max(3-e,0);for(let e=0;e<this.patternsPerChannel;e++)i.patterns.length<=e?i.patterns[e]=new fe:i.patterns[e].reset();i.patterns.length=this.patternsPerChannel;for(let e=0;e<c.instrumentCountMin;e++)i.instruments.length<=e&&(i.instruments[e]=new Me(t,n)),i.instruments[e].setTypeAndReset(n?10:t?2:0,t,n);i.instruments.length=c.instrumentCountMin;for(let e=0;e<this.barCount;e++)i.bars[e]=e<4?1:0;i.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let e,t=[];t.push(ze.q),t.push(re[ze.M]),t.push(78);var n=encodeURIComponent(this.title);t.push(re[n.length>>6],re[63&n.length]);for(let e=0;e<n.length;e++)t.push(n.charCodeAt(e));if(t.push(110,re[this.pitchChannelCount],re[this.noiseChannelCount],re[this.modChannelCount]),t.push(115,re[this.scale]),this.scale==c.scales.dictionary.Custom.index)for(var i=1;i<c.pitchesPerOctave;i++)t.push(re[this.scaleCustom[i]?1:0]);if(t.push(107,re[this.key],re[this.octave-c.octaveMin]),t.push(108,re[this.loopStart>>6],re[63&this.loopStart]),t.push(101,re[this.loopLength-1>>6],re[this.loopLength-1&63]),t.push(116,re[this.tempo>>6],re[63&this.tempo]),t.push(97,re[this.beatsPerBar-1]),t.push(103,re[this.barCount-1>>6],re[this.barCount-1&63]),t.push(106,re[this.patternsPerChannel-1>>6],re[this.patternsPerChannel-1&63]),t.push(114,re[this.rhythm]),t.push(79),1!=this.compressionRatio||1!=this.limitRatio||4e3!=this.limitRise||4!=this.limitDecay||1!=this.limitThreshold||1!=this.compressionThreshold||1!=this.masterGain?(t.push(re[Math.round(this.compressionRatio<1?10*this.compressionRatio:10+60*(this.compressionRatio-1))]),t.push(re[Math.round(this.limitRatio<1?10*this.limitRatio:9+this.limitRatio)]),t.push(re[this.limitDecay]),t.push(re[Math.round((this.limitRise-2e3)/250)]),t.push(re[Math.round(20*this.compressionThreshold)]),t.push(re[Math.round(20*this.limitThreshold)]),t.push(re[Math.round(50*this.masterGain)>>6],re[63&Math.round(50*this.masterGain)])):t.push(re[63]),t.push(99),null==this.eqFilter)t.push(re[0]),console.log("Null EQ filter settings detected in toBase64String for song");else{t.push(re[this.eqFilter.controlPointCount]);for(let e=0;e<this.eqFilter.controlPointCount;e++){const n=this.eqFilter.controlPoints[e];t.push(re[n.type],re[Math.round(n.freq)],re[Math.round(n.gain)])}}let a=0;for(let e=0;e<c.filterMorphCount-1;e++)a|=+(null!=this.eqSubFilters[e+1])<<e;t.push(re[a>>6],re[63&a]);for(let e=0;e<c.filterMorphCount-1;e++)if(a&1<<e){t.push(re[this.eqSubFilters[e+1].controlPointCount]);for(let n=0;n<this.eqSubFilters[e+1].controlPointCount;n++){const i=this.eqSubFilters[e+1].controlPoints[n];t.push(re[i.type],re[Math.round(i.freq)],re[Math.round(i.gain)])}}t.push(85);for(let e=0;e<this.getChannelCount();e++){var s=encodeURIComponent(this.channels[e].name);t.push(re[s.length>>6],re[63&s.length]);for(let e=0;e<s.length;e++)t.push(s.charCodeAt(e))}if(t.push(105,re[this.layeredInstruments<<1|this.patternInstruments]),this.layeredInstruments||this.patternInstruments)for(let e=0;e<this.getChannelCount();e++)t.push(re[this.channels[e].instruments.length-c.instrumentCountMin]);t.push(111);for(let e=0;e<this.pitchChannelCount;e++)t.push(re[this.channels[e].octave]);for(let e=0;e<this.getChannelCount();e++)for(let n=0;n<this.channels[e].instruments.length;n++){const i=this.channels[e].instruments[n];if(t.push(84,re[i.type]),t.push(118,re[i.volume+c.volumeRange/2>>6],re[i.volume+c.volumeRange/2&63]),t.push(117,re[i.preset>>6],re[63&i.preset]),t.push(102),t.push(re[+i.eqFilterType]),i.eqFilterType)t.push(re[i.eqFilterSimpleCut]),t.push(re[i.eqFilterSimplePeak]);else{if(null==i.eqFilter)t.push(re[0]),console.log("Null EQ filter settings detected in toBase64String for channelIndex "+e+", instrumentIndex "+n);else{t.push(re[i.eqFilter.controlPointCount]);for(let e=0;e<i.eqFilter.controlPointCount;e++){const n=i.eqFilter.controlPoints[e];t.push(re[n.type],re[Math.round(n.freq)],re[Math.round(n.gain)])}}let a=0;for(let e=0;e<c.filterMorphCount-1;e++)a|=+(null!=i.eqSubFilters[e+1])<<e;t.push(re[a>>6],re[63&a]);for(let e=0;e<c.filterMorphCount-1;e++)if(a&1<<e){t.push(re[i.eqSubFilters[e+1].controlPointCount]);for(let n=0;n<i.eqSubFilters[e+1].controlPointCount;n++){const a=i.eqSubFilters[e+1].controlPoints[n];t.push(re[a.type],re[Math.round(a.freq)],re[Math.round(a.gain)])}}}if(t.push(113,re[i.effects>>12&63],re[i.effects>>6&63],re[63&i.effects]),M(i.effects))if(t.push(re[+i.noteFilterType]),i.noteFilterType)t.push(re[i.noteFilterSimpleCut]),t.push(re[i.noteFilterSimplePeak]);else{if(null==i.noteFilter)t.push(re[0]),console.log("Null note filter settings detected in toBase64String for channelIndex "+e+", instrumentIndex "+n);else{t.push(re[i.noteFilter.controlPointCount]);for(let e=0;e<i.noteFilter.controlPointCount;e++){const n=i.noteFilter.controlPoints[e];t.push(re[n.type],re[Math.round(n.freq)],re[Math.round(n.gain)])}}let a=0;for(let e=0;e<c.filterMorphCount-1;e++)a|=+(null!=i.noteSubFilters[e+1])<<e;t.push(re[a>>6],re[63&a]);for(let e=0;e<c.filterMorphCount-1;e++)if(a&1<<e){t.push(re[i.noteSubFilters[e+1].controlPointCount]);for(let n=0;n<i.noteSubFilters[e+1].controlPointCount;n++){const a=i.noteSubFilters[e+1].controlPoints[n];t.push(re[a.type],re[Math.round(a.freq)],re[Math.round(a.gain)])}}}if(b(i.effects)&&t.push(re[i.transition]),w(i.effects)&&(t.push(re[i.chord]),i.chord==c.chords.dictionary.arpeggio.index&&(t.push(re[i.arpeggioSpeed]),t.push(re[+i.fastTwoNoteArp])),i.chord==c.chords.dictionary.monophonic.index&&t.push(re[i.monoChordTone])),F(i.effects)&&t.push(re[i.pitchShift]),k(i.effects)&&t.push(re[i.detune-c.detuneMin>>6],re[i.detune-c.detuneMin&63]),q(i.effects)&&(t.push(re[i.vibrato]),i.vibrato==c.vibratos.length&&(t.push(re[Math.round(25*i.vibratoDepth)]),t.push(re[i.vibratoSpeed]),t.push(re[Math.round(i.vibratoDelay)]),t.push(re[i.vibratoType]))),x(i.effects)&&(t.push(re[i.distortion]),t.push(re[+i.aliases])),z(i.effects)&&t.push(re[i.bitcrusherFreq],re[i.bitcrusherQuantization]),T(i.effects)&&(t.push(re[i.pan>>6],re[63&i.pan]),t.push(re[i.panDelay])),I(i.effects)&&t.push(re[i.chorus]),E(i.effects)&&t.push(re[i.echoSustain],re[i.echoDelay]),H(i.effects)&&t.push(re[i.reverb]),G(i.effects)&&(t.push(re[i.granular]),t.push(re[i.grainSize]),t.push(re[i.grainAmounts]),t.push(re[i.grainRange])),P(i.effects)&&(t.push(re[i.ringModulation]),t.push(re[i.ringModulationHz]),t.push(re[i.ringModWaveformIndex]),t.push(re[i.ringModPulseWidth]),t.push(re[i.ringModHzOffset-c.rmHzOffsetMin>>6],re[i.ringModHzOffset-c.rmHzOffsetMin&63])),4!=i.type&&(t.push(100,re[i.fadeIn],re[i.fadeOut]),t.push(re[+i.clicklessTransition])),5==i.type||7==i.type){t.push(72);const e=new ue;for(let t=0;t<c.harmonicsControlPoints;t++)e.write(c.harmonicsControlPointBits,i.harmonicsWave.harmonics[t]);e.encodeBase64(t)}if(0==i.type){i.chipWave>186?(t.push(119,re[i.chipWave-186]),t.push(re[3])):i.chipWave>124?(t.push(119,re[i.chipWave-124]),t.push(re[2])):i.chipWave>62?(t.push(119,re[i.chipWave-62]),t.push(re[1])):(t.push(119,re[i.chipWave]),t.push(re[0])),t.push(104,re[i.unison]),i.unison==c.unisons.length&&se(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign),t.push(121);const e=X(0,32,i.chipWaveLoopMode)<<1|(i.isUsingAdvancedLoopControls?1:0);t.push(re[e]);const n=X(0,32,0)<<1|(i.chipWavePlayBackwards?1:0);t.push(re[n]),ie(t,i.chipWaveLoopStart),ie(t,i.chipWaveLoopEnd),ie(t,i.chipWaveStartOffset)}else if(1==i.type||11==i.type){if(1==i.type)t.push(65,re[i.algorithm]),t.push(70,re[i.feedbackType]);else{if(t.push(65,re[i.algorithm6Op]),0==i.algorithm6Op){t.push(67,re[i.customAlgorithm.carrierCount]),t.push(113);for(let e=0;e<i.customAlgorithm.modulatedBy.length;e++){for(let n=0;n<i.customAlgorithm.modulatedBy[e].length;n++)t.push(re[i.customAlgorithm.modulatedBy[e][n]]);t.push(82)}t.push(113)}if(t.push(70,re[i.feedbackType6Op]),0==i.feedbackType6Op){t.push(113);for(let e=0;e<i.customFeedbackType.indices.length;e++){for(let n=0;n<i.customFeedbackType.indices[e].length;n++)t.push(re[i.customFeedbackType.indices[e][n]]);t.push(82)}t.push(113)}}t.push(66,re[i.feedbackAmplitude]),t.push(81);for(let e=0;e<(11==i.type?6:c.operatorCount);e++)t.push(re[i.operators[e].frequency]);t.push(80);for(let e=0;e<(11==i.type?6:c.operatorCount);e++)t.push(re[i.operators[e].amplitude]);t.push(82);for(let e=0;e<(11==i.type?6:c.operatorCount);e++)t.push(re[i.operators[e].waveform]),2==i.operators[e].waveform&&t.push(re[i.operators[e].pulseWidth])}else if(9==i.type){i.chipWave>186?(t.push(119,re[i.chipWave-186]),t.push(re[3])):i.chipWave>124?(t.push(119,re[i.chipWave-124]),t.push(re[2])):i.chipWave>62?(t.push(119,re[i.chipWave-62]),t.push(re[1])):(t.push(119,re[i.chipWave]),t.push(re[0])),t.push(104,re[i.unison]),i.unison==c.unisons.length&&se(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign),t.push(77);for(let e=0;e<64;e++)t.push(re[i.customChipWave[e]+24])}else if(2==i.type)t.push(119,re[i.chipNoise]),t.push(104,re[i.unison]),i.unison==c.unisons.length&&se(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign);else if(3==i.type){t.push(83);const e=new ue;for(let t=0;t<c.spectrumControlPoints;t++)e.write(c.spectrumControlPointBits,i.spectrumWave.spectrum[t]);e.encodeBase64(t),t.push(104,re[i.unison]),i.unison==c.unisons.length&&se(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign)}else if(4==i.type){t.push(122);for(let e=0;e<c.drumCount;e++)t.push(re[i.drumsetEnvelopes[e]]);t.push(83);const e=new ue;for(let t=0;t<c.drumCount;t++)for(let n=0;n<c.spectrumControlPoints;n++)e.write(c.spectrumControlPointBits,i.drumsetSpectrumWaves[t].spectrum[n]);e.encodeBase64(t),t.push(104,re[i.unison]),i.unison==c.unisons.length&&se(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign)}else if(5==i.type)t.push(104,re[i.unison]),i.unison==c.unisons.length&&se(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign);else if(6==i.type)t.push(87,re[i.pulseWidth]),t.push(re[i.decimalOffset>>6],re[63&i.decimalOffset]),t.push(104,re[i.unison]),i.unison==c.unisons.length&&se(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign);else if(8==i.type)t.push(120,re[i.supersawDynamism],re[i.supersawSpread],re[i.supersawShape]),t.push(87,re[i.pulseWidth]),t.push(re[i.decimalOffset>>6],re[63&i.decimalOffset]);else if(7==i.type){if(c.stringSustainRange>32)throw new Error("Not enough bits to represent sustain value and type in same base64 character.");t.push(104,re[i.unison]),i.unison==c.unisons.length&&se(t,i.unisonVoices,i.unisonSpread,i.unisonOffset,i.unisonExpression,i.unisonSign),t.push(73,re[i.stringSustain|i.stringSustainType<<5])}else if(10!=i.type)throw new Error("Unknown instrument type.");t.push(69,re[i.envelopeCount]),t.push(re[i.envelopeSpeed]);for(let e=0;e<i.envelopeCount;e++){t.push(re[i.envelopes[e].target]),c.instrumentAutomationTargets[i.envelopes[e].target].maxCount>1&&t.push(re[i.envelopes[e].index]),t.push(re[i.envelopes[e].envelope]),"pitch"==c.newEnvelopes[i.envelopes[e].envelope].name?i.isNoiseInstrument?(t.push(re[i.envelopes[e].pitchEnvelopeStart]),t.push(re[i.envelopes[e].pitchEnvelopeEnd])):(t.push(re[i.envelopes[e].pitchEnvelopeStart>>6],re[63&i.envelopes[e].pitchEnvelopeStart]),t.push(re[i.envelopes[e].pitchEnvelopeEnd>>6],re[63&i.envelopes[e].pitchEnvelopeEnd])):"random"==c.newEnvelopes[i.envelopes[e].envelope].name?(t.push(re[i.envelopes[e].steps]),t.push(re[i.envelopes[e].seed]),t.push(re[i.envelopes[e].waveform])):"lfo"==c.newEnvelopes[i.envelopes[e].envelope].name&&(t.push(re[i.envelopes[e].waveform]),5!=i.envelopes[e].waveform&&6!=i.envelopes[e].waveform||t.push(re[i.envelopes[e].steps]));let n=+i.envelopes[e].discrete;n<<=1,n+=+i.envelopes[e].inverse,t.push(re[n]?re[n]:re[0]),"pitch"!=c.newEnvelopes[i.envelopes[e].envelope].name&&"note size"!=c.newEnvelopes[i.envelopes[e].envelope].name&&"punch"!=c.newEnvelopes[i.envelopes[e].envelope].name&&"none"!=c.newEnvelopes[i.envelopes[e].envelope].name&&t.push(re[c.perEnvelopeSpeedToIndices[i.envelopes[e].perEnvelopeSpeed]]),t.push(re[10*i.envelopes[e].perEnvelopeLowerBound]),t.push(re[10*i.envelopes[e].perEnvelopeUpperBound])}}t.push(98),e=new ue;let o=0;for(;1<<o<this.patternsPerChannel+1;)o++;for(let t=0;t<this.getChannelCount();t++)for(let n=0;n<this.barCount;n++)e.write(o,this.channels[t].bars[n]);e.encodeBase64(t),t.push(112),e=new ue;const r=new ue,l=ze.getNeededBits(c.noteSizeMax);for(let t=0;t<this.getChannelCount();t++){const n=this.channels[t],i=this.getMaxInstrumentsPerPattern(t),a=this.getChannelIsNoise(t),s=this.getChannelIsMod(t),o=ze.getNeededBits(i-c.instrumentCountMin),p=ze.getNeededBits(n.instruments.length-1);if(s){const i=ze.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let a=0;a<n.instruments.length;a++){let n=this.channels[t].instruments[a];for(let t=0;t<c.modCount;t++){const a=n.modChannels[t],s=n.modInstruments[t],o=n.modulators[t],r=n.modFilterTypes[t],l=n.modEnvelopeNumbers[t];let p=c.modulators[o].forSong?2:0;o==c.modulators.dictionary.none.index&&(p=3),e.write(2,p),0!=p&&1!=p||(e.write(8,a),e.write(i,s)),3!=p&&e.write(6,o),"eq filter"!=c.modulators[n.modulators[t]].name&&"note filter"!=c.modulators[n.modulators[t]].name&&"song eq"!=c.modulators[n.modulators[t]].name||e.write(6,r),"individual envelope speed"!=c.modulators[n.modulators[t]].name&&"reset envelope"!=c.modulators[n.modulators[t]].name&&"individual envelope lower bound"!=c.modulators[n.modulators[t]].name&&"individual envelope upper bound"!=c.modulators[n.modulators[t]].name||e.write(6,l)}}}const u=a||s?0:n.octave*c.pitchesPerOctave;let h=a?4:u;const f=s?[0,1,2,3,4,5]:a?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],d=[];for(let e=0;e<f.length;e++)f[e]+=u;for(const t of n.patterns){if(this.patternInstruments){const n=ee(c.instrumentCountMin,i,t.instruments.length);e.write(o,n-c.instrumentCountMin);for(let i=0;i<n;i++)e.write(p,t.instruments[i])}if(t.notes.length>0){e.write(1,1);let n=0;for(const i of t.notes){i.start<n&&s&&(e.write(2,0),e.write(1,1),e.writePartDuration(n-i.start)),i.start>n&&(e.write(2,0),s&&e.write(1,0),e.writePartDuration(i.start-n)),r.clear(),1==i.pitches.length?r.write(1,0):(r.write(1,1),r.write(3,i.pitches.length-2)),r.writePinCount(i.pins.length-1),s?r.write(9,i.pins[0].size):r.write(l,i.pins[0].size);let t=0,a=i.pitches[0],o=a;const p=[];for(let e=1;e<i.pins.length;e++){const n=i.pins[e],u=a+n.interval;o!=u?(r.write(1,1),p.push(u),o=u):r.write(1,0),r.writePartDuration(n.time-t),t=n.time,s?r.write(9,n.size):r.write(l,n.size)}const u=String.fromCharCode.apply(null,r.encodeBase64([])),c=d.indexOf(u);-1==c?(e.write(2,1),e.concat(r)):(e.write(1,1),e.writeLongTail(0,0,c),d.splice(c,1)),d.unshift(u),d.length>10&&d.pop();const m=i.pitches.concat(p);for(let t=0;t<m.length;t++){const n=m[t],a=f.indexOf(n);if(-1==a){let t=0,i=h;if(i<n)for(;i!=n;)i++,-1==f.indexOf(i)&&t++;else for(;i!=n;)i--,-1==f.indexOf(i)&&t--;e.write(1,0),e.writePitchInterval(t)}else e.write(1,1),e.write(4,a),f.splice(a,1);f.unshift(n),f.length>16&&f.pop(),h=t==i.pitches.length-1?i.pitches[0]:n}0==i.start&&e.write(1,i.continuesLastPattern?1:0),n=i.end}n<this.beatsPerBar*c.partsPerBeat+ +s&&(e.write(2,0),s&&e.write(1,0),e.writePartDuration(this.beatsPerBar*c.partsPerBeat+ +s-n))}else e.write(1,0)}}let p=e.lengthBase64(),u=[];for(;p>0;)u.unshift(re[63&p]),p>>=6;t.push(re[u.length]),Array.prototype.push.apply(t,u),e.encodeBase64(t);const h=64e3;let f="";if(null!=W.customSamples&&W.customSamples.length>0&&(f="|"+W.customSamples.join("|")),t.length<h)return String.fromCharCode.apply(null,t)+f;{let e="";for(let n=0;n<t.length;n+=h)e+=String.fromCharCode.apply(null,t.slice(n,n+h));return e+f}}static T(e){return 0==e?e=1:1==e&&(e=0),c.envelopes[X(0,c.envelopes.length,e)]}fromBase64String(e,t="auto"){if(null==e||""==e)return ze.I(),void this.initToDefault(!0);let n=0;for(;e.charCodeAt(n)<=32;)n++;if(35==e.charCodeAt(n)&&n++,123==e.charCodeAt(n))return void this.fromJsonObject(JSON.parse(0==n?e:e.substring(n)),t);const i=e.charCodeAt(n);let o=!1,l=!1,p=!1,h=!1,f=!1;106==i?(l=!0,n++):103==i?(p=!0,n++):117==i?(h=!0,n++):100==i?(l=!0,n++):97==i?(h=!0,n++):115==i?(f=!0,n++):o=!0;const d=le[e.charCodeAt(n++)];if(o&&(-1==d||d>ze.H||d<ze.P))return;if(l&&(-1==d||d>ze.W||d<ze.O))return;if(p&&(-1==d||d>ze.L||d<ze.R))return;if(h&&(-1==d||d>ze.N||d<ze.V))return;if(f&&(-1==d||d>ze.M||d<ze.U))return;const m=d<2,v=d<3,y=d<4,g=d<5,D=d<6,C=d<7,O=d<8,L=d<9;this.initToDefault(o&&L||l&&g||y&&p);const A=o&&L||l&&g;let B=!1;if(f||h||p){var R=(e=e.replaceAll("%7C","|")).split("|");if(e=R.shift(),null==W.customSamples||W.customSamples.join(", ")!=R.join(", ")){ze.$();let e=!1,t=!1,n=!1;const i=[],o=[];a.statusTable={},a.urlTable={},a.totalSamples=0,a.samplesLoaded=0,r.dispatchEvent(new s(a.totalSamples,a.samplesLoaded));for(const s of R)if("legacysamples"===s.toLowerCase())e||(e=!0,i.push(s),u(0));else if("nintariboxsamples"===s.toLowerCase())t||(t=!0,i.push(s),u(1));else if("mariopaintboxsamples"===s.toLowerCase())n||(n=!0,i.push(s),u(2));else{const e=v;if(!ze.j(s,i,o,a,e))continue}if(i.length>0&&(W.customSamples=i),o.length>0){const e=S(o);W.presetCategories[W.presetCategories.length]={name:"Custom Sample Presets",presets:e,index:W.presetCategories.length}}}}if(v&&o){for(const e of this.channels)e.instruments[0].transition=c.transitions.dictionary.interrupt.index,e.instruments[0].effects|=1024;this.channels[3].instruments[0].chipNoise=0}let N=null;if(o&&L||l&&g||y&&p){N=[];for(let e=N.length;e<this.getChannelCount();e++){N[e]=[];for(let t=0;t<c.instrumentCountMin;t++)N[e][t]={}}}let V,U=0,$=0,j=-1,Q=!1,_=!1;for(;n<e.length;)switch(V=e.charCodeAt(n++)){case 78:var K=(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)];this.title=decodeURIComponent(e.substring(n,n+K)),document.title=this.title+" - "+W.versionDisplayName,n+=K;break;case 110:this.pitchChannelCount=le[e.charCodeAt(n++)],this.noiseChannelCount=le[e.charCodeAt(n++)],this.modChannelCount=o||l&&m?0:le[e.charCodeAt(n++)],this.pitchChannelCount=ee(c.pitchChannelCountMin,c.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=ee(c.noiseChannelCountMin,c.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=ee(c.modChannelCountMin,c.modChannelCountMax,this.modChannelCount);for(let e=this.channels.length;e<this.getChannelCount();e++)this.channels[e]=new xe;if(this.channels.length=this.getChannelCount(),o&&L||l&&g||y&&p)for(let e=N.length;e<this.getChannelCount();e++){N[e]=[];for(let t=0;t<c.instrumentCountMin;t++)N[e][t]={}}break;case 115:if(this.scale=X(0,c.scales.length,le[e.charCodeAt(n++)]),this.scale==c.scales.dictionary.Custom.index)for(var J=1;J<c.pitchesPerOctave;J++)this.scaleCustom[J]=1==le[e.charCodeAt(n++)];o&&(this.scale=0);break;case 107:if(C&&o)this.key=X(0,c.keys.length,11-le[e.charCodeAt(n++)]),this.octave=0;else if(o||l)this.key=X(0,c.keys.length,le[e.charCodeAt(n++)]),this.octave=0;else if(p||v&&h){const t=le[e.charCodeAt(n++)],[i,a]=oe(t);this.key=i,this.octave=a}else this.key=X(0,c.keys.length,le[e.charCodeAt(n++)]),this.octave=X(c.octaveMin,c.octaveMax+1,le[e.charCodeAt(n++)]+c.octaveMin);break;case 108:this.loopStart=g&&o?le[e.charCodeAt(n++)]:(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)];break;case 101:this.loopLength=g&&o?le[e.charCodeAt(n++)]:(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)]+1;break;case 116:this.tempo=y&&o?[95,120,151,190][le[e.charCodeAt(n++)]]:C&&o?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][le[e.charCodeAt(n++)]]:le[e.charCodeAt(n++)]<<6|le[e.charCodeAt(n++)],this.tempo=X(c.tempoMin,c.tempoMax+1,this.tempo);break;case 109:L&&o?(U=12*le[e.charCodeAt(n++)],U=X(0,c.reverbRange,U)):(l&&g||y&&p)&&(U=le[e.charCodeAt(n++)],U=X(0,c.reverbRange,U));break;case 97:this.beatsPerBar=v&&o?[6,7,8,9,10][le[e.charCodeAt(n++)]]:le[e.charCodeAt(n++)]+1,this.beatsPerBar=Math.max(c.beatsPerBarMin,Math.min(c.beatsPerBarMax,this.beatsPerBar));break;case 103:{const t=(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)]+1;this.barCount=ee(c.barCountMin,c.barCountMax,t);for(let e=0;e<this.getChannelCount();e++){for(let t=this.channels[e].bars.length;t<this.barCount;t++)this.channels[e].bars[t]=t<4?1:0;this.channels[e].bars.length=this.barCount}}break;case 106:{let t;t=O&&o?le[e.charCodeAt(n++)]+1:(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)]+1,this.patternsPerChannel=ee(1,c.barCountMax,t);const i=this.getChannelCount();for(let e=0;e<i;e++){const t=this.channels[e].patterns;for(let e=t.length;e<this.patternsPerChannel;e++)t[e]=new fe;t.length=this.patternsPerChannel}}break;case 105:if(L&&o||l&&g||y&&p){const t=ee(c.instrumentCountMin,c.patternInstrumentCountMax,le[e.charCodeAt(n++)]+c.instrumentCountMin);this.layeredInstruments=!1,this.patternInstruments=t>1;for(let e=0;e<this.getChannelCount();e++){const n=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,i=e>=this.pitchChannelCount+this.noiseChannelCount;for(let a=this.channels[e].instruments.length;a<t;a++)this.channels[e].instruments[a]=new Me(n,i);if(this.channels[e].instruments.length=t,D&&o)for(let a=0;a<t;a++)this.channels[e].instruments[a].setTypeAndReset(n?2:0,n,i);for(let n=N[e].length;n<t;n++)N[e][n]={}}}else{const t=le[e.charCodeAt(n++)];this.layeredInstruments=0!=(2&t),this.patternInstruments=0!=(1&t);for(let t=0;t<this.getChannelCount();t++){let i=1;(this.layeredInstruments||this.patternInstruments)&&(i=ee(c.instrumentCountMin,this.getMaxInstrumentsPerChannel(),le[e.charCodeAt(n++)]+c.instrumentCountMin));const a=this.channels[t],s=this.getChannelIsNoise(t),o=this.getChannelIsMod(t);for(let e=a.instruments.length;e<i;e++)a.instruments[e]=new Me(s,o);a.instruments.length=i}}break;case 114:if(h||f)if(f&&y||h&&g){const t=[1,1,0,1,2,3,4,5];this.rhythm=X(0,c.rhythms.length,t[le[e.charCodeAt(n++)]])}else this.rhythm=X(0,c.rhythms.length,le[e.charCodeAt(n++)]);else{let t=le[e.charCodeAt(n++)];this.rhythm=X(0,c.rhythms.length,t),(l&&v||o)&&(this.rhythm!=c.rhythms.dictionary["÷3 (triplets)"].index&&this.rhythm!=c.rhythms.dictionary["÷6"].index||(Q=!0),this.rhythm>=c.rhythms.dictionary["÷6"].index&&(_=!0))}break;case 111:if(v&&o){const t=le[e.charCodeAt(n++)];this.channels[t].octave=X(0,c.pitchOctaves,le[e.charCodeAt(n++)]+1),t>=this.pitchChannelCount&&(this.channels[t].octave=0)}else if(L&&o||l&&g||y&&p)for(let t=0;t<this.getChannelCount();t++)this.channels[t].octave=X(0,c.pitchOctaves,le[e.charCodeAt(n++)]+1),t>=this.pitchChannelCount&&(this.channels[t].octave=0);else{for(let t=0;t<this.pitchChannelCount;t++)this.channels[t].octave=X(0,c.pitchOctaves,le[e.charCodeAt(n++)]);for(let e=this.pitchChannelCount;e<this.getChannelCount();e++)this.channels[e].octave=0}break;case 84:{j++,j>=this.channels[$].instruments.length&&($++,j=0),ee(0,this.channels.length-1,$);const t=this.channels[$].instruments[j];let i=ee(0,11,le[e.charCodeAt(n++)]);l&&g||y&&p?7!=i&&8!=i||(i+=2):(l&&D||p&&!y||h&&g)&&(8!=i&&9!=i&&10!=i||(i+=1)),t.setTypeAndReset(i,$>=this.pitchChannelCount&&$<this.pitchChannelCount+this.noiseChannelCount,$>=this.pitchChannelCount+this.noiseChannelCount),!(C&&o||m&&l)||0!=i&&9!=i&&6!=i||(t.aliases=!0,t.distortion=0,t.effects|=8),Q&&(t.arpeggioSpeed=9),_&&(t.fastTwoNoteArp=!0),C&&o&&t.chord!=c.chords.dictionary.simultaneous.index&&(t.effects|=2048)}break;case 117:{const t=le[e.charCodeAt(n++)]<<6|le[e.charCodeAt(n++)];this.channels[$].instruments[j].preset=t,l&&g||y&&p?7==this.channels[$].instruments[j].preset&&(this.channels[$].instruments[j].preset=9,this.channels[$].instruments[j].type=9):(l&&D||h&&g)&&(8==this.channels[$].instruments[j].preset&&(this.channels[$].instruments[j].preset=9,this.channels[$].instruments[j].type=9),10==this.channels[$].instruments[j].preset&&(this.channels[$].instruments[j].preset=11,this.channels[$].instruments[j].type=11)),o&&t==W.nameToPresetValue("grand piano 1")&&(this.channels[$].instruments[j].preset=W.nameToPresetValue("grand piano 3"))}break;case 119:if(v&&o){const t=[1,2,3,4,5,6,7,8,0],i=le[e.charCodeAt(n++)],a=this.channels[i].instruments[0];a.chipWave=X(0,c.chipWaves.length,0|t[le[e.charCodeAt(n++)]]),a.convertLegacySettings(N[i][0],A)}else if(D&&o){const t=[1,2,3,4,5,6,7,8,0];for(let i=0;i<this.getChannelCount();i++)for(const a of this.channels[i].instruments)i>=this.pitchChannelCount?a.chipNoise=X(0,c.chipNoises.length,le[e.charCodeAt(n++)]):a.chipWave=X(0,c.chipWaves.length,0|t[le[e.charCodeAt(n++)]])}else if(C&&o){const t=[1,2,3,4,5,6,7,8,0];$>=this.pitchChannelCount?this.channels[$].instruments[j].chipNoise=X(0,c.chipNoises.length,le[e.charCodeAt(n++)]):this.channels[$].instruments[j].chipWave=X(0,c.chipWaves.length,0|t[le[e.charCodeAt(n++)]])}else if(2==this.channels[$].instruments[j].type)this.channels[$].instruments[j].chipNoise=X(0,c.chipNoises.length,le[e.charCodeAt(n++)]);else if(f||h){const t=le[e.charCodeAt(n++)],i=le[e.charCodeAt(n++)];this.channels[$].instruments[j].chipWave=X(0,c.chipWaves.length,3==i?t+186:2==i?t+124:1==i?t+62:t)}else this.channels[$].instruments[j].chipWave=X(0,c.chipWaves.length,le[e.charCodeAt(n++)]);break;case 102:if(L&&o||g&&l||y&&p)if(C&&o){const t=[10,6,3,0,8,5,2],i=["none","none","none","none","decay 1","decay 2","decay 3"];if(v&&o){const a=le[e.charCodeAt(n++)],s=this.channels[a].instruments[0],o=N[a][0],r=[1,3,4,5][X(0,t.length,le[e.charCodeAt(n++)])];o.filterCutoff=t[r],o.filterResonance=0,o.filterEnvelope=c.envelopes.dictionary[i[r]],s.convertLegacySettings(o,A)}else if(D&&o)for(let a=0;a<this.getChannelCount();a++)for(let s=0;s<this.channels[a].instruments.length;s++){const o=this.channels[a].instruments[s],r=N[a][s],l=X(0,t.length,le[e.charCodeAt(n++)]+1);a<this.pitchChannelCount?(r.filterCutoff=t[l],r.filterResonance=0,r.filterEnvelope=c.envelopes.dictionary[i[l]]):(r.filterCutoff=10,r.filterResonance=0,r.filterEnvelope=c.envelopes.dictionary.none),o.convertLegacySettings(r,A)}else{const a=X(0,t.length,le[e.charCodeAt(n++)]),s=this.channels[$].instruments[j],o=N[$][j];o.filterCutoff=t[a],o.filterResonance=0,o.filterEnvelope=c.envelopes.dictionary[i[a]],s.convertLegacySettings(o,A)}}else{const t=11,i=this.channels[$].instruments[j],a=N[$][j];a.filterCutoff=X(0,t,le[e.charCodeAt(n++)]),i.convertLegacySettings(a,A)}else{const t=this.channels[$].instruments[j];let i=le[e.charCodeAt(n++)];if(o||0==i){t.eqFilterType=!1,(l||p||h||f)&&(i=le[e.charCodeAt(n++)]);const a=i;t.eqFilter.controlPointCount=X(0,c.filterMaxPoints+1,a);for(let e=t.eqFilter.controlPoints.length;e<t.eqFilter.controlPointCount;e++)t.eqFilter.controlPoints[e]=new Fe;for(let i=0;i<t.eqFilter.controlPointCount;i++){const a=t.eqFilter.controlPoints[i];a.type=X(0,3,le[e.charCodeAt(n++)]),a.freq=X(0,c.filterFreqRange,le[e.charCodeAt(n++)]),a.gain=X(0,c.filterGainRange,le[e.charCodeAt(n++)])}for(let e=t.eqFilter.controlPointCount;e<a;e++)n+=3;if(t.eqSubFilters[0]=t.eqFilter,l&&!g||p&&!y||h||f){let i=le[e.charCodeAt(n++)]<<6|le[e.charCodeAt(n++)];for(let a=0;a<c.filterMorphCount-1;a++)if(i&1<<a){const i=le[e.charCodeAt(n++)];null==t.eqSubFilters[a+1]&&(t.eqSubFilters[a+1]=new ke),t.eqSubFilters[a+1].controlPointCount=X(0,c.filterMaxPoints+1,i);for(let e=t.eqSubFilters[a+1].controlPoints.length;e<t.eqSubFilters[a+1].controlPointCount;e++)t.eqSubFilters[a+1].controlPoints[e]=new Fe;for(let i=0;i<t.eqSubFilters[a+1].controlPointCount;i++){const s=t.eqSubFilters[a+1].controlPoints[i];s.type=X(0,3,le[e.charCodeAt(n++)]),s.freq=X(0,c.filterFreqRange,le[e.charCodeAt(n++)]),s.gain=X(0,c.filterGainRange,le[e.charCodeAt(n++)])}for(let e=t.eqSubFilters[a+1].controlPointCount;e<i;e++)n+=3}}}else t.eqFilterType=!0,t.eqFilterSimpleCut=X(0,c.filterSimpleCutRange,le[e.charCodeAt(n++)]),t.eqFilterSimplePeak=X(0,c.filterSimplePeakRange,le[e.charCodeAt(n++)])}break;case 121:if(f||h)if(v&&h){const t=ae(e,n);n+=6;const i=e.slice(n,n+t);n+=t;const a=JSON.parse(atob(i));for(const e of a){const t=e.channel,n=e.instrument,i=e.info,a=this.channels[t].instruments[n];a.isUsingAdvancedLoopControls=i.isUsingAdvancedLoopControls,a.chipWaveLoopStart=i.chipWaveLoopStart,a.chipWaveLoopEnd=i.chipWaveLoopEnd,a.chipWaveLoopMode=i.chipWaveLoopMode,a.chipWavePlayBackwards=i.chipWavePlayBackwards,a.chipWaveStartOffset=i.chipWaveStartOffset}}else{const t=le[e.charCodeAt(n++)],i=Boolean(1&t),a=t>>1,s=le[e.charCodeAt(n++)],o=Boolean(1&s),r=ae(e,n);n+=6;const l=ae(e,n);n+=6;const p=ae(e,n);n+=6;const u=this.channels[$].instruments[j];u.isUsingAdvancedLoopControls=i,u.chipWaveLoopStart=r,u.chipWaveLoopEnd=l,u.chipWaveLoopMode=a,u.chipWavePlayBackwards=o,u.chipWaveStartOffset=p}else if(p&&!y&&D)"legacysamples"!=document.URL.substring(document.URL.length-13).toLowerCase()&&(B||(B=!0,c.willReloadForCustomSamples=!0,W.customSamples=["legacySamples"],u(0))),this.channels[$].instruments[j].chipWave=X(0,c.chipWaves.length,le[e.charCodeAt(n++)]+125);else if(L&&o||l&&g||y&&p){const t=8,i=this.channels[$].instruments[j],a=N[$][j];a.filterResonance=X(0,t,le[e.charCodeAt(n++)]),i.convertLegacySettings(a,A)}break;case 122:{const t=this.channels[$].instruments[j],i=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11];if(L&&o||g&&l||y&&p)if(4==t.type)for(let a=0;a<c.drumCount;a++){let s=le[e.charCodeAt(n++)];(m&&p||!p&&!h&&!f)&&(s=i[s]),t.drumsetEnvelopes[a]=ze.T(s).index}else{const a=N[$][j];let s=le[e.charCodeAt(n++)];(m&&p||!p&&!h&&!f)&&(s=i[s]),a.filterEnvelope=ze.T(s),t.convertLegacySettings(a,A)}else for(let a=0;a<c.drumCount;a++){let s=le[e.charCodeAt(n++)];(m&&p||!p&&!h&&!f)&&(s=i[s]),!f&&s>=2&&s++,t.drumsetEnvelopes[a]=X(0,c.envelopes.length,s)}}break;case 87:{const t=this.channels[$].instruments[j];if(t.pulseWidth=X(0,c.pulseWidthRange+ +l+1,le[e.charCodeAt(n++)]),o&&(t.pulseWidth=Math.round(Math.pow(.5,(7-t.pulseWidth)*c.pulseWidthStepPower)*c.pulseWidthRange)),L&&o||g&&l||y&&p){const i=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],a=N[$][j];let s=le[e.charCodeAt(n++)];(m&&p||!p&&!h&&!f)&&(s=i[s]),a.pulseEnvelope=ze.T(s),t.convertLegacySettings(a,A)}(h&&!y||f)&&(t.decimalOffset=X(0,100,(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)]))}break;case 73:{const t=this.channels[$].instruments[j],i=le[e.charCodeAt(n++)];t.stringSustain=X(0,c.stringSustainRange,31&i),t.stringSustainType=c.enableAcousticSustain?X(0,2,i>>5):0}break;case 100:if(L&&o||l&&g||y&&p){const t=[{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3}];if(v&&o){const i=le[e.charCodeAt(n++)],a=t[X(0,t.length,le[e.charCodeAt(n++)])],s=this.channels[i].instruments[0];s.fadeIn=Ge.secondsToFadeInSetting(a.fadeInSeconds),s.fadeOut=Ge.ticksToFadeOutSetting(a.fadeOutTicks),s.transition=c.transitions.dictionary[a.transition].index,s.transition!=c.transitions.dictionary.normal.index&&(s.effects|=1024)}else if(D&&o)for(let i=0;i<this.getChannelCount();i++)for(const a of this.channels[i].instruments){const i=t[X(0,t.length,le[e.charCodeAt(n++)])];a.fadeIn=Ge.secondsToFadeInSetting(i.fadeInSeconds),a.fadeOut=Ge.ticksToFadeOutSetting(i.fadeOutTicks),a.transition=c.transitions.dictionary[i.transition].index,a.transition!=c.transitions.dictionary.normal.index&&(a.effects|=1024)}else if(y&&!p&&!h&&!f||o){const i=t[X(0,t.length,le[e.charCodeAt(n++)])],a=this.channels[$].instruments[j];a.fadeIn=Ge.secondsToFadeInSetting(i.fadeInSeconds),a.fadeOut=Ge.ticksToFadeOutSetting(i.fadeOutTicks),a.transition=c.transitions.dictionary[i.transition].index,a.transition!=c.transitions.dictionary.normal.index&&(a.effects|=1024)}else{const i=t[X(0,t.length,le[e.charCodeAt(n++)])],a=this.channels[$].instruments[j];a.fadeIn=Ge.secondsToFadeInSetting(i.fadeInSeconds),a.fadeOut=Ge.ticksToFadeOutSetting(i.fadeOutTicks),a.transition=c.transitions.dictionary[i.transition].index,le[e.charCodeAt(n++)]>0&&(a.legacyTieOver=!0),a.clicklessTransition=!!le[e.charCodeAt(n++)],(a.transition!=c.transitions.dictionary.normal.index||a.clicklessTransition)&&(a.effects|=1024)}}else{const t=this.channels[$].instruments[j];t.fadeIn=X(0,c.fadeInRange,le[e.charCodeAt(n++)]),t.fadeOut=X(0,c.fadeOutTicks.length,le[e.charCodeAt(n++)]),(l||p||h||f)&&(t.clicklessTransition=!!le[e.charCodeAt(n++)])}break;case 99:if(L&&o||l&&g||y&&p)if(C&&o)if(v&&o){const t=[0,3,2,0],i=["none","none","none","tremolo2"],a=le[e.charCodeAt(n++)],s=X(0,t.length,le[e.charCodeAt(n++)]),o=this.channels[a].instruments[0],r=N[a][0];o.vibrato=t[s],null!=r.filterEnvelope&&0!=r.filterEnvelope.type||(r.filterEnvelope=c.envelopes.dictionary[i[s]],o.convertLegacySettings(r,A)),o.vibrato!=c.vibratos.dictionary.none.index&&(o.effects|=512)}else if(D&&o){const t=[0,1,2,3,0,0],i=["none","none","none","none","tremolo5","tremolo2"];for(let a=0;a<this.getChannelCount();a++)for(let s=0;s<this.channels[a].instruments.length;s++){const o=X(0,t.length,le[e.charCodeAt(n++)]),r=this.channels[a].instruments[s],u=N[a][s];r.vibrato=t[o],null!=u.filterEnvelope&&0!=u.filterEnvelope.type||(u.filterEnvelope=c.envelopes.dictionary[i[o]],r.convertLegacySettings(u,A)),r.vibrato!=c.vibratos.dictionary.none.index&&(r.effects|=512),(0!=U||l&&g||y&&p)&&!this.getChannelIsNoise(a)&&(r.effects|=1,r.reverb=U)}}else{const t=[0,1,2,3,0,0],i=["none","none","none","none","tremolo5","tremolo2"],a=X(0,t.length,le[e.charCodeAt(n++)]),s=this.channels[$].instruments[j],o=N[$][j];s.vibrato=t[a],null!=o.filterEnvelope&&0!=o.filterEnvelope.type||(o.filterEnvelope=c.envelopes.dictionary[i[a]],s.convertLegacySettings(o,A)),s.vibrato!=c.vibratos.dictionary.none.index&&(s.effects|=512),(0!=U||l&&g||y&&p)&&(s.effects|=1,s.reverb=U)}else{const t=this.channels[$].instruments[j],i=X(0,c.vibratos.length+1,le[e.charCodeAt(n++)]);t.vibrato=i,t.vibrato!=c.vibratos.dictionary.none.index&&(t.effects|=512),i==c.vibratos.length?(t.vibratoDepth=X(0,c.modulators.dictionary["vibrato depth"].maxRawVol+1,le[e.charCodeAt(n++)])/50,t.vibratoSpeed=X(0,c.modulators.dictionary["vibrato speed"].maxRawVol+1,le[e.charCodeAt(n++)]),t.vibratoDelay=X(0,c.modulators.dictionary["vibrato delay"].maxRawVol+1,le[e.charCodeAt(n++)])/2,t.vibratoType=X(0,c.vibratoTypes.length,le[e.charCodeAt(n++)]),t.effects|=512):(t.vibratoDepth=c.vibratos[t.vibrato].amplitude,t.vibratoSpeed=10,t.vibratoDelay=c.vibratos[t.vibrato].delayTicks/2,t.vibratoType=c.vibratos[t.vibrato].type)}else if(f&&!y){const t=le[e.charCodeAt(n++)];this.eqFilter.controlPointCount=X(0,c.filterMaxPoints+1,t);for(let e=this.eqFilter.controlPoints.length;e<this.eqFilter.controlPointCount;e++)this.eqFilter.controlPoints[e]=new Fe;for(let t=0;t<this.eqFilter.controlPointCount;t++){const i=this.eqFilter.controlPoints[t];i.type=X(0,3,le[e.charCodeAt(n++)]),i.freq=X(0,c.filterFreqRange,le[e.charCodeAt(n++)]),i.gain=X(0,c.filterGainRange,le[e.charCodeAt(n++)])}for(let e=this.eqFilter.controlPointCount;e<t;e++)n+=3;this.eqSubFilters[0]=this.eqFilter;let i=le[e.charCodeAt(n++)]<<6|le[e.charCodeAt(n++)];for(let t=0;t<c.filterMorphCount-1;t++)if(i&1<<t){const i=le[e.charCodeAt(n++)];null==this.eqSubFilters[t+1]&&(this.eqSubFilters[t+1]=new ke),this.eqSubFilters[t+1].controlPointCount=X(0,c.filterMaxPoints+1,i);for(let e=this.eqSubFilters[t+1].controlPoints.length;e<this.eqSubFilters[t+1].controlPointCount;e++)this.eqSubFilters[t+1].controlPoints[e]=new Fe;for(let i=0;i<this.eqSubFilters[t+1].controlPointCount;i++){const a=this.eqSubFilters[t+1].controlPoints[i];a.type=X(0,3,le[e.charCodeAt(n++)]),a.freq=X(0,c.filterFreqRange,le[e.charCodeAt(n++)]),a.gain=X(0,c.filterGainRange,le[e.charCodeAt(n++)])}for(let e=this.eqSubFilters[t+1].controlPointCount;e<i;e++)n+=3}}break;case 71:if(l&&g||y&&p){const t=this.channels[$].instruments[j];t.arpeggioSpeed=X(0,c.modulators.dictionary["arp speed"].maxRawVol+1,le[e.charCodeAt(n++)]),t.fastTwoNoteArp=!!le[e.charCodeAt(n++)]}break;case 104:if(v&&o){const t=le[e.charCodeAt(n++)],i=this.channels[t].instruments[0];i.unison=X(0,c.unisons.length,le[e.charCodeAt(n++)]),i.unisonVoices=c.unisons[i.unison].voices,i.unisonSpread=c.unisons[i.unison].spread,i.unisonOffset=c.unisons[i.unison].offset,i.unisonExpression=c.unisons[i.unison].expression,i.unisonSign=c.unisons[i.unison].sign}else if(D&&o)for(let t=0;t<this.getChannelCount();t++)for(const i of this.channels[t].instruments){const t=le[e.charCodeAt(n++)];let a=X(0,c.unisons.length,t);8==t&&(a=2,i.chord=3),i.unison=a,i.unisonVoices=c.unisons[i.unison].voices,i.unisonSpread=c.unisons[i.unison].spread,i.unisonOffset=c.unisons[i.unison].offset,i.unisonExpression=c.unisons[i.unison].expression,i.unisonSign=c.unisons[i.unison].sign}else if(C&&o){const t=le[e.charCodeAt(n++)];let i=X(0,c.unisons.length,t);const a=this.channels[$].instruments[j];8==t&&(i=2,a.chord=3),a.unison=i,a.unisonVoices=c.unisons[a.unison].voices,a.unisonSpread=c.unisons[a.unison].spread,a.unisonOffset=c.unisons[a.unison].offset,a.unisonExpression=c.unisons[a.unison].expression,a.unisonSign=c.unisons[a.unison].sign}else{const t=this.channels[$].instruments[j];t.unison=X(0,c.unisons.length+1,le[e.charCodeAt(n++)]);const i=g||!f?27:c.unisons.length;if((h&&!g||f)&&t.unison==i){t.unison=c.unisons.length,t.unisonVoices=le[e.charCodeAt(n++)];const i=le[e.charCodeAt(n++)],a=le[e.charCodeAt(n++)]+63*(le[e.charCodeAt(n++)]+63*le[e.charCodeAt(n++)]),s=le[e.charCodeAt(n++)],o=le[e.charCodeAt(n++)]+63*(le[e.charCodeAt(n++)]+63*le[e.charCodeAt(n++)]),r=le[e.charCodeAt(n++)],l=le[e.charCodeAt(n++)]+63*le[e.charCodeAt(n++)],p=le[e.charCodeAt(n++)],u=le[e.charCodeAt(n++)]+63*le[e.charCodeAt(n++)];t.unisonSpread=a/1e3,0==i&&(t.unisonSpread*=-1),t.unisonOffset=o/1e3,0==s&&(t.unisonOffset*=-1),t.unisonExpression=l/1e3,0==r&&(t.unisonExpression*=-1),t.unisonSign=u/1e3,0==p&&(t.unisonSign*=-1)}else t.unisonVoices=c.unisons[t.unison].voices,t.unisonSpread=c.unisons[t.unison].spread,t.unisonOffset=c.unisons[t.unison].offset,t.unisonExpression=c.unisons[t.unison].expression,t.unisonSign=c.unisons[t.unison].sign}break;case 67:if(L&&o||l&&g||y&&p){const t=this.channels[$].instruments[j];t.chord=X(0,c.chords.length,le[e.charCodeAt(n++)]),t.chord!=c.chords.dictionary.simultaneous.index&&(t.effects|=2048)}break;case 113:{const t=this.channels[$].instruments[j];if(L&&o||l&&g||y&&p){t.effects=32767&le[e.charCodeAt(n++)],0!=U||l&&g||y&&p?H(t.effects)&&(t.reverb=U):t.effects&=-2,t.effects|=4,t.vibrato!=c.vibratos.dictionary.none.index&&(t.effects|=512),t.detune!=c.detuneCenter&&(t.effects|=256),t.aliases?t.effects|=8:t.effects&=-9;const i=N[$][j];t.convertLegacySettings(i,A)}else{if(t.effects=f&&!g?le[e.charCodeAt(n++)]<<12|le[e.charCodeAt(n++)]<<6|le[e.charCodeAt(n++)]:le[e.charCodeAt(n++)]<<6|le[e.charCodeAt(n++)],M(t.effects)){let i=le[e.charCodeAt(n++)];if(o||0==i){t.noteFilterType=!1,(l||p||h||f)&&(i=le[e.charCodeAt(n++)]),t.noteFilter.controlPointCount=X(0,c.filterMaxPoints+1,i);for(let e=t.noteFilter.controlPoints.length;e<t.noteFilter.controlPointCount;e++)t.noteFilter.controlPoints[e]=new Fe;for(let i=0;i<t.noteFilter.controlPointCount;i++){const a=t.noteFilter.controlPoints[i];a.type=X(0,3,le[e.charCodeAt(n++)]),a.freq=X(0,c.filterFreqRange,le[e.charCodeAt(n++)]),a.gain=X(0,c.filterGainRange,le[e.charCodeAt(n++)])}for(let e=t.noteFilter.controlPointCount;e<i;e++)n+=3;if(t.noteSubFilters[0]=t.noteFilter,l&&!g||p||h||f){let i=le[e.charCodeAt(n++)]<<6|le[e.charCodeAt(n++)];for(let a=0;a<c.filterMorphCount-1;a++)if(i&1<<a){const i=le[e.charCodeAt(n++)];null==t.noteSubFilters[a+1]&&(t.noteSubFilters[a+1]=new ke),t.noteSubFilters[a+1].controlPointCount=X(0,c.filterMaxPoints+1,i);for(let e=t.noteSubFilters[a+1].controlPoints.length;e<t.noteSubFilters[a+1].controlPointCount;e++)t.noteSubFilters[a+1].controlPoints[e]=new Fe;for(let i=0;i<t.noteSubFilters[a+1].controlPointCount;i++){const s=t.noteSubFilters[a+1].controlPoints[i];s.type=X(0,3,le[e.charCodeAt(n++)]),s.freq=X(0,c.filterFreqRange,le[e.charCodeAt(n++)]),s.gain=X(0,c.filterGainRange,le[e.charCodeAt(n++)])}for(let e=t.noteSubFilters[a+1].controlPointCount;e<i;e++)n+=3}}}else t.noteFilterType=!0,t.noteFilter.reset(),t.noteFilterSimpleCut=X(0,c.filterSimpleCutRange,le[e.charCodeAt(n++)]),t.noteFilterSimplePeak=X(0,c.filterSimplePeakRange,le[e.charCodeAt(n++)])}b(t.effects)&&(t.transition=X(0,c.transitions.length,le[e.charCodeAt(n++)])),w(t.effects)&&(t.chord=X(0,c.chords.length,le[e.charCodeAt(n++)]),t.chord==c.chords.dictionary.arpeggio.index&&(l||p||h||f)&&(t.arpeggioSpeed=le[e.charCodeAt(n++)],t.fastTwoNoteArp=!!le[e.charCodeAt(n++)]),t.chord==c.chords.dictionary.monophonic.index&&f&&!g&&(t.monoChordTone=le[e.charCodeAt(n++)])),F(t.effects)&&(t.pitchShift=X(0,c.pitchShiftRange,le[e.charCodeAt(n++)])),k(t.effects)&&(o?(t.detune=X(c.detuneMin,c.detuneMax+1,le[e.charCodeAt(n++)]),t.detune=Math.round((t.detune-9)*(Math.abs(t.detune-9)+1)/2+c.detuneCenter)):t.detune=X(c.detuneMin,c.detuneMax+1,(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)])),q(t.effects)&&(t.vibrato=X(0,c.vibratos.length+1,le[e.charCodeAt(n++)]),t.vibrato==c.vibratos.length&&(l||p||h||f)?(t.vibratoDepth=X(0,c.modulators.dictionary["vibrato depth"].maxRawVol+1,le[e.charCodeAt(n++)])/25,t.vibratoSpeed=X(0,c.modulators.dictionary["vibrato speed"].maxRawVol+1,le[e.charCodeAt(n++)]),t.vibratoDelay=X(0,c.modulators.dictionary["vibrato delay"].maxRawVol+1,le[e.charCodeAt(n++)]),t.vibratoType=X(0,c.vibratoTypes.length,le[e.charCodeAt(n++)])):(t.vibratoDepth=c.vibratos[t.vibrato].amplitude,t.vibratoSpeed=10,t.vibratoDelay=c.vibratos[t.vibrato].delayTicks/2,t.vibratoType=c.vibratos[t.vibrato].type)),x(t.effects)&&(t.distortion=X(0,c.distortionRange,le[e.charCodeAt(n++)]),(l&&!g||p||h||f)&&(t.aliases=!!le[e.charCodeAt(n++)])),z(t.effects)&&(t.bitcrusherFreq=X(0,c.bitcrusherFreqRange,le[e.charCodeAt(n++)]),t.bitcrusherQuantization=X(0,c.bitcrusherQuantizationRange,le[e.charCodeAt(n++)])),T(t.effects)&&(t.pan=X(0,c.panMax+1,o?Math.round(le[e.charCodeAt(n++)]*(c.panMax/8)):(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)]),(l&&!m||p||h||f)&&(t.panDelay=le[e.charCodeAt(n++)])),I(t.effects)&&(t.chorus=o?2*X(0,c.chorusRange/2+1,le[e.charCodeAt(n++)]):X(0,c.chorusRange,le[e.charCodeAt(n++)])),E(t.effects)&&(t.echoSustain=X(0,c.echoSustainRange,le[e.charCodeAt(n++)]),t.echoDelay=X(0,c.echoDelayRange,le[e.charCodeAt(n++)])),H(t.effects)&&(t.reverb=X(0,c.reverbRange,o?Math.round(le[e.charCodeAt(n++)]*c.reverbRange/3):le[e.charCodeAt(n++)])),G(t.effects)&&(t.granular=le[e.charCodeAt(n++)],t.grainSize=le[e.charCodeAt(n++)],t.grainAmounts=le[e.charCodeAt(n++)],t.grainRange=le[e.charCodeAt(n++)]),P(t.effects)&&(t.ringModulation=X(0,c.ringModRange,le[e.charCodeAt(n++)]),t.ringModulationHz=X(0,c.ringModHzRange,le[e.charCodeAt(n++)]),t.ringModWaveformIndex=X(0,c.operatorWaves.length,le[e.charCodeAt(n++)]),t.ringModPulseWidth=X(0,c.pulseWidthRange,le[e.charCodeAt(n++)]),t.ringModHzOffset=X(c.rmHzOffsetMin,c.rmHzOffsetMax+1,(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)]))}t.effects&=32767}break;case 118:if(v&&o){const t=le[e.charCodeAt(n++)];this.channels[t].instruments[0].volume=Math.round(X(-c.volumeRange/2,1,5*-le[e.charCodeAt(n++)]))}else if(D&&o)for(let t=0;t<this.getChannelCount();t++)for(const i of this.channels[t].instruments)i.volume=Math.round(X(-c.volumeRange/2,1,5*-le[e.charCodeAt(n++)]));else if(C&&o){this.channels[$].instruments[j].volume=Math.round(X(-c.volumeRange/2,1,5*-le[e.charCodeAt(n++)]))}else if(o){this.channels[$].instruments[j].volume=Math.round(X(-c.volumeRange/2,1,25*-le[e.charCodeAt(n++)]/7))}else{this.channels[$].instruments[j].volume=Math.round(X(-c.volumeRange/2,c.volumeRange/2+1,(le[e.charCodeAt(n++)]<<6|le[e.charCodeAt(n++)])-c.volumeRange/2))}break;case 76:if(L&&o){this.channels[$].instruments[j].pan=X(0,c.panMax+1,le[e.charCodeAt(n++)]*(c.panMax/8))}else if(l&&g||y&&p){const t=this.channels[$].instruments[j];t.pan=X(0,c.panMax+1,(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)]),(l&&!v||p||h||f)&&(t.panDelay=le[e.charCodeAt(n++)])}break;case 68:{const t=this.channels[$].instruments[j];(l&&g||y&&p)&&(t.detune=X(c.detuneMin,c.detuneMax+1,4*((le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)])),t.effects|=256)}break;case 77:{let t=this.channels[$].instruments[j];for(let i=0;i<64;i++)t.customChipWave[i]=X(-24,25,le[e.charCodeAt(n++)]-24);let i=0;for(let e=0;e<t.customChipWave.length;e++)i+=t.customChipWave[e];const a=i/t.customChipWave.length;let s=0,o=0;for(let e=0;e<t.customChipWave.length;e++)s+=o,o=t.customChipWave[e]-a,t.customChipWaveIntegral[e]=s;t.customChipWaveIntegral[64]=0}break;case 79:{let t=le[e.charCodeAt(n++)];63==t?this.restoreLimiterDefaults():(this.compressionRatio=t<10?t/10:1+(t-10)/60,t=le[e.charCodeAt(n++)],this.limitRatio=t<10?t/10:t-9,this.limitDecay=le[e.charCodeAt(n++)],this.limitRise=250*le[e.charCodeAt(n++)]+2e3,this.compressionThreshold=le[e.charCodeAt(n++)]/20,this.limitThreshold=le[e.charCodeAt(n++)]/20,this.masterGain=((le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)])/50)}break;case 85:for(let t=0;t<this.getChannelCount();t++){var Y;Y=!y||p||h||f?(le[e.charCodeAt(n++)]<<6)+le[e.charCodeAt(n++)]:le[e.charCodeAt(n++)],this.channels[t].name=decodeURIComponent(e.substring(n,n+Y)),n+=Y}break;case 65:{const t=this.channels[$].instruments[j];if(1==t.type)t.algorithm=X(0,c.algorithms.length,le[e.charCodeAt(n++)]);else if(t.algorithm6Op=X(0,c.algorithms6Op.length,le[e.charCodeAt(n++)]),t.customAlgorithm.fromPreset(t.algorithm6Op),67==e.charCodeAt(n)){let i=X(1,c.operatorCount+2+1,le[e.charCodeAt(n+1)]);n++;let a=[];if(113==e.charCodeAt(n+1)){n++;let s=0;for(n++;113!=e.charCodeAt(n);){a[s]=[];let t=0;for(;82!=e.charCodeAt(n);)a[s][t]=X(1,c.operatorCount+3,le[e.charCodeAt(n)]),t++,n++;s++,n++}t.customAlgorithm.set(i,a),n++}}if(L&&o||g&&l||y&&p){const e=N[$][j];t.convertLegacySettings(e,A)}}break;case 120:if(p&&!y&&D){const t=le[e.charCodeAt(n++)];t+62>85&&"legacysamples"!=document.URL.substring(document.URL.length-13).toLowerCase()&&(B||(B=!0,c.willReloadForCustomSamples=!0,W.customSamples=["legacySamples"],u(0))),this.channels[$].instruments[j].chipWave=t+62>78?X(0,c.chipWaves.length,t+63):t+62>67?X(0,c.chipWaves.length,t+61):t+62==67?40:X(0,c.chipWaves.length,t+62)}else{const t=this.channels[$].instruments[j];t.supersawDynamism=X(0,c.supersawDynamismMax+1,le[e.charCodeAt(n++)]),t.supersawSpread=X(0,c.supersawSpreadMax+1,le[e.charCodeAt(n++)]),t.supersawShape=X(0,c.supersawShapeMax+1,le[e.charCodeAt(n++)])}break;case 70:{const t=this.channels[$].instruments[j];if(1==t.type)t.feedbackType=X(0,c.feedbacks.length,le[e.charCodeAt(n++)]);else{t.feedbackType6Op=X(0,c.feedbacks6Op.length,le[e.charCodeAt(n++)]),t.customFeedbackType.fromPreset(t.feedbackType6Op);let i=[];if(113==e.charCodeAt(n)){let a=0;for(n++;113!=e.charCodeAt(n);){i[a]=[];let t=0;for(;82!=e.charCodeAt(n);)i[a][t]=X(1,c.operatorCount+2,le[e.charCodeAt(n)]),t++,n++;a++,n++}t.customFeedbackType.set(i),n++}}}break;case 66:this.channels[$].instruments[j].feedbackAmplitude=X(0,c.operatorAmplitudeMax+1,le[e.charCodeAt(n++)]);break;case 86:if(L&&o||g&&l||y&&p){const t=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],i=this.channels[$].instruments[j],a=N[$][j];let s=le[e.charCodeAt(n++)];(m&&p||!p&&!h&&!f)&&(s=t[s]),a.feedbackEnvelope=ze.T(le[s]),i.convertLegacySettings(a,A)}break;case 81:{const t=this.channels[$].instruments[j];if(v&&p){const i=[4,5,6,7,8,10,12,13,14,15,16,18,20,22,24,2,1,9,17,19,21,23,0,3];for(let a=0;a<(11==t.type?6:c.operatorCount);a++)t.operators[a].frequency=i[X(0,i.length,le[e.charCodeAt(n++)])]}else if(p||h||f)for(let i=0;i<(11==t.type?6:c.operatorCount);i++)t.operators[i].frequency=X(0,c.operatorFrequencies.length,le[e.charCodeAt(n++)]);else{const i=[4,5,6,7,8,10,12,13,14,15,16,18,20,23,27,2,1,9,17,19,21,23,0,3];for(let a=0;a<(11==t.type?6:c.operatorCount);a++)t.operators[a].frequency=i[X(0,i.length,le[e.charCodeAt(n++)])]}}break;case 80:{const t=this.channels[$].instruments[j];for(let i=0;i<(11==t.type?6:c.operatorCount);i++)t.operators[i].amplitude=X(0,c.operatorAmplitudeMax+1,le[e.charCodeAt(n++)])}break;case 69:{const t=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],i=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,58,59,60],a=[0,1,2,3,4,5,6,7,8,8,9,10,11,12,13,14],s=this.channels[$].instruments[j];if(L&&o||g&&l||y&&p){const a=N[$][j];a.operatorEnvelopes=[];for(let r=0;r<(11==s.type?6:c.operatorCount);r++){let s=le[e.charCodeAt(n++)];(m&&p||o)&&(s=t[s]),l&&(s=i[s]),a.operatorEnvelopes[r]=ze.T(s)}s.convertLegacySettings(a,A)}else{const r=X(0,c.maxEnvelopeCount+1,le[e.charCodeAt(n++)]);let u=!1;(l&&!D||h&&!g||f)&&(s.envelopeSpeed=X(0,c.modulators.dictionary["envelope speed"].maxRawVol+1,le[e.charCodeAt(n++)]),f&&!g||(u=!!le[e.charCodeAt(n++)]));for(let h=0;h<r;h++){const r=X(0,c.instrumentAutomationTargets.length,le[e.charCodeAt(n++)]);let d=0;const S=c.instrumentAutomationTargets[r].maxCount;S>1&&(d=X(0,S,le[e.charCodeAt(n++)]));let b=le[e.charCodeAt(n++)];(m&&p||o)&&(b=t[b]),l&&(b=i[b]),!f&&b>=2&&b++;let w=!1,F=1;!f||v?(w=!0,F=c.envelopes[b].speed,b=c.envelopes[b].type):y&&b>=3&&b++;let k=!1;(f&&!v&&y||w)&&(9==b&&(k=!0),b=a[b]);const q=X(0,f&&!v||w?c.newEnvelopes.length:c.envelopes.length,b);let M=0,x=c.maxPitch,z=!1;F=f&&!v?c.newEnvelopes[q].speed:F;let T=0,I=1,E=2,H=2,P=0;if(f&&!y&&("lfo"==c.newEnvelopes[q].name?(P=X(0,7,le[e.charCodeAt(n++)]),5!=P&&6!=P||(E=X(1,c.randomEnvelopeStepsMax+1,le[e.charCodeAt(n++)]))):"random"==c.newEnvelopes[q].name&&(E=X(1,c.randomEnvelopeStepsMax+1,le[e.charCodeAt(n++)]),H=X(1,c.randomEnvelopeSeedMax+1,le[e.charCodeAt(n++)]),P=X(0,4,le[e.charCodeAt(n++)]))),f&&!v){if("pitch"==c.newEnvelopes[q].name)if(s.isNoiseInstrument)M=X(0,c.drumCount,le[e.charCodeAt(n++)]),x=X(0,c.drumCount,le[e.charCodeAt(n++)]);else{let t=le[e.charCodeAt(n++)];M=X(0,c.maxPitch+1,64*t+le[e.charCodeAt(n++)]),t=le[e.charCodeAt(n++)],x=X(0,c.maxPitch+1,64*t+le[e.charCodeAt(n++)])}let t=le[e.charCodeAt(n++)];f&&!g&&(u=t>>1==1),z=1==(1&t),"pitch"!=c.newEnvelopes[q].name&&"note size"!=c.newEnvelopes[q].name&&"punch"!=c.newEnvelopes[q].name&&"none"!=c.newEnvelopes[q].name&&(F=c.perEnvelopeSpeedIndices[le[e.charCodeAt(n++)]]),T=le[e.charCodeAt(n++)]/10,I=le[e.charCodeAt(n++)]/10}if(f&&!y||k&&(P=0,z?(I=Math.floor(I/2*10)/10,T=Math.floor(T/2*10)/10):(I=Math.floor(10*(.5+(I-T)/2))/10,T=.5)),s.addEnvelope(r,d,q,!0,M,x,z,F,T,I,E,H,P,u),f&&v&&!m){let t=le[e.charCodeAt(n++)];s.envelopes[h].pitchEnvelopeStart=64*t+le[e.charCodeAt(n++)],t=le[e.charCodeAt(n++)],s.envelopes[h].pitchEnvelopeEnd=64*t+le[e.charCodeAt(n++)],s.envelopes[h].inverse=1==le[e.charCodeAt(n++)]}}let d=0,S=c.maxPitch,b=!1;if(f&&m){let t=le[e.charCodeAt(n++)];d=64*t+le[e.charCodeAt(n++)],t=le[e.charCodeAt(n++)],S=64*t+le[e.charCodeAt(n++)],b=1===le[e.charCodeAt(n++)];for(let e=0;e<r;e++)s.envelopes[e].pitchEnvelopeStart=d,s.envelopes[e].pitchEnvelopeEnd=S,s.envelopes[e].inverse="pitch"==c.envelopes[s.envelopes[e].envelope].name&&b}}}break;case 82:{const t=this.channels[$].instruments[j];if(v&&p)for(let i=0;i<c.operatorCount;i++){const a=[0,1,3,2,2,2,4,5],s=X(0,a.length,le[e.charCodeAt(n++)]);3==s?t.operators[i].pulseWidth=5:4==s?t.operators[i].pulseWidth=4:5==s&&(t.operators[i].pulseWidth=6),t.operators[i].waveform=a[s]}else for(let i=0;i<(11==t.type?6:c.operatorCount);i++){if(l){const a=[0,1,3,2,4,5];t.operators[i].waveform=a[X(0,c.operatorWaves.length,le[e.charCodeAt(n++)])]}else t.operators[i].waveform=X(0,c.operatorWaves.length,le[e.charCodeAt(n++)]);2==t.operators[i].waveform&&(t.operators[i].pulseWidth=X(0,c.pwmOperatorWaves.length,le[e.charCodeAt(n++)]))}}break;case 83:{const t=this.channels[$].instruments[j];if(3==t.type){const i=Math.ceil(c.spectrumControlPoints*c.spectrumControlPointBits/6),a=new pe(e,n,n+i);for(let e=0;e<c.spectrumControlPoints;e++)t.spectrumWave.spectrum[e]=a.read(c.spectrumControlPointBits);t.spectrumWave.markCustomWaveDirty(),n+=i}else{if(4!=t.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const i=Math.ceil(c.drumCount*c.spectrumControlPoints*c.spectrumControlPointBits/6),a=new pe(e,n,n+i);for(let e=0;e<c.drumCount;e++){for(let n=0;n<c.spectrumControlPoints;n++)t.drumsetSpectrumWaves[e].spectrum[n]=a.read(c.spectrumControlPointBits);t.drumsetSpectrumWaves[e].markCustomWaveDirty()}n+=i}}}break;case 72:{const t=this.channels[$].instruments[j],i=Math.ceil(c.harmonicsControlPoints*c.harmonicsControlPointBits/6),a=new pe(e,n,n+i);for(let e=0;e<c.harmonicsControlPoints;e++)t.harmonicsWave.harmonics[e]=a.read(c.harmonicsControlPointBits);t.harmonicsWave.markCustomWaveDirty(),n+=i}break;case 88:if(l&&g||p&&y){const t=this.channels[$].instruments[j];t.aliases=!!le[e.charCodeAt(n++)],t.aliases&&(t.distortion=0,t.effects|=8)}else if(h||f){this.channels[$].instruments[j].decimalOffset=X(0,51,le[e.charCodeAt(n++)])}break;case 98:{let t;if(v&&o){const i=le[e.charCodeAt(n++)],a=le[e.charCodeAt(n++)];t=Math.ceil(.5*a);const s=new pe(e,n,n+t);for(let e=0;e<a;e++)this.channels[i].bars[e]=s.read(3)+1}else if(g&&o){let i=0;for(;1<<i<this.patternsPerChannel;)i++;t=Math.ceil(this.getChannelCount()*this.barCount*i/6);const a=new pe(e,n,n+t);for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)this.channels[e].bars[t]=a.read(i)+1}else{let i=0;for(;1<<i<this.patternsPerChannel+1;)i++;t=Math.ceil(this.getChannelCount()*this.barCount*i/6);const a=new pe(e,n,n+t);for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)this.channels[e].bars[t]=a.read(i)}n+=t}break;case 112:{let t,i=0,a=!(y&&l||o),s=a?4:3,r=a?16:8;if(v&&o)t=le[e.charCodeAt(n++)],n++,i=le[e.charCodeAt(n++)],i<<=6,i+=le[e.charCodeAt(n++)];else{t=0;let a=ee(1,4,le[e.charCodeAt(n++)]);for(;a>0;)i<<=6,i+=le[e.charCodeAt(n++)],a--}const u=new pe(e,n,n+i);n+=i;const d=ze.getNeededBits(c.noteSizeMax);let m=-1,S=-1,b=-1;const w=l,F=30;for(;;){const e=this.channels[t],n=this.getChannelIsNoise(t),i=this.getChannelIsMod(t),k=this.getMaxInstrumentsPerPattern(t),q=ze.getNeededBits(k-c.instrumentCountMin),x=ze.getNeededBits(e.instruments.length-1);if(i){let n=g&&l||y&&p;const i=n?x:ze.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let a=0;a<e.instruments.length;a++){let s=e.instruments[a];for(let e=0;e<c.modCount;e++){let o=u.read(2);switch(o){case 0:s.modChannels[e]=X(0,this.pitchChannelCount+this.noiseChannelCount+1,u.read(8)),s.modInstruments[e]=X(0,this.channels[s.modChannels[e]].instruments.length+2,u.read(i));break;case 1:s.modChannels[e]=this.pitchChannelCount+X(0,this.noiseChannelCount+1,u.read(8)),s.modInstruments[e]=X(0,this.channels[s.modChannels[e]].instruments.length+2,u.read(x));break;case 2:s.modChannels[e]=-1;break;case 3:s.modChannels[e]=-2}if(3!=o&&(s.modulators[e]=u.read(6)),n||"eq filter"!=c.modulators[s.modulators[e]].name&&"note filter"!=c.modulators[s.modulators[e]].name&&"song eq"!=c.modulators[s.modulators[e]].name||(s.modFilterTypes[e]=u.read(6)),"individual envelope speed"!=c.modulators[s.modulators[e]].name&&"reset envelope"!=c.modulators[s.modulators[e]].name&&"individual envelope lower bound"!=c.modulators[s.modulators[e]].name&&"individual envelope upper bound"!=c.modulators[s.modulators[e]].name||(s.modEnvelopeNumbers[e]=u.read(6)),n&&s.modChannels[e]>=0){let t=M(this.channels[s.modChannels[e]].instruments[s.modInstruments[e]].effects);7==s.modulators[e]?(s.modulators[e]=t?c.modulators.dictionary["note filt cut"].index:c.modulators.dictionary["eq filt cut"].index,s.modFilterTypes[e]=1):8==s.modulators[e]&&(s.modulators[e]=t?c.modulators.dictionary["note filt peak"].index:c.modulators.dictionary["eq filt peak"].index,s.modFilterTypes[e]=2)}else n&&s.modulators[e]==c.modulators.dictionary["song reverb"].index&&(m=t,S=a,b=e);n&&15!=c.modulators[s.modulators[e]].associatedEffect&&(this.channels[s.modChannels[e]].instruments[s.modInstruments[e]].effects|=1<<c.modulators[s.modulators[e]].associatedEffect)}}}const z=[];for(let t=0;t<e.instruments.length;t++){z[t]=[];for(let n=0;n<c.modCount;n++)z[t][c.modCount-1-n]=1+3*+((g&&l||y&&p)&&i&&e.instruments[t].modulators[n]==c.modulators.dictionary.detune.index)}const T=n||i?0:12*e.octave;let I=n||i?4:T;const E=i?[0,1,2,3,4,5]:n?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],H=[];for(let e=0;e<E.length;e++)E[e]+=T;for(let t=0;t<this.patternsPerChannel;t++){const n=e.patterns[t];if(L&&o||g&&l||y&&p)n.instruments[0]=ee(0,e.instruments.length-1,u.read(x)),n.instruments.length=1;else if(this.patternInstruments){const t=ee(c.instrumentCountMin,k,u.read(q)+c.instrumentCountMin);for(let a=0;a<t;a++)n.instruments[a]=ee(0,e.instruments.length-1+2*+i,u.read(x));n.instruments.length=t}else n.instruments[0]=0,n.instruments.length=c.instrumentCountMin;if(!(o&&v||0!=u.read(1))){n.notes.length=0;continue}let m=0;const S=n.notes;let b=0;for(;m<this.beatsPerBar*c.partsPerBeat+ +i;){const t=1==u.read(1);let v=!1,k=0;if(t?k=ee(0,H.length-1,u.readLongTail(0,0)):v=1==u.read(1),t||v){let v,q,M;if(t)v=H[k],H.splice(k,1);else{if(v={},a)1==u.read(1)?v.pitchCount=u.read(3)+2:v.pitchCount=1;else for(v.pitchCount=1;v.pitchCount<4&&1==u.read(1);)v.pitchCount++;v.pinCount=u.readPinCount(),v.initialSize=o?2*u.read(2):i?u.read(9):u.read(d),v.pins=[],v.length=0,v.bendCount=0;for(let e=0;e<v.pinCount;e++){let e={};e.pitchBend=1==u.read(1),e.pitchBend&&v.bendCount++,v.length+=C&&o?u.readLegacyPartDuration()*c.partsPerBeat/c.rhythms[this.rhythm].stepsPerBeat:u.readPartDuration(),e.time=v.length,e.size=o?2*u.read(2):i?u.read(9):u.read(d),v.pins.push(e)}}H.unshift(v),H.length>10&&H.pop(),S.length<=b?(q=new he(0,m,m+v.length,v.initialSize),S[b++]=q):(q=S[b++],q.start=m,q.end=m+v.length,q.pins[0].size=v.initialSize);let x=0;const T=[];for(let e=0;e<v.pitchCount+v.bendCount;e++){if(1==u.read(1)){const e=ee(0,E.length-1,u.read(s));M=E[e],E.splice(e,1)}else{M=I;let e=u.readPitchInterval();for(;e>0;){for(M++;-1!=E.indexOf(M);)M++;e--}for(;e<0;){for(M--;-1!=E.indexOf(M);)M--;e++}}E.unshift(M),E.length>r&&E.pop(),e<v.pitchCount?q.pitches[x++]=M:T.push(M),I=e==v.pitchCount-1?q.pitches[0]:M}q.pitches.length=x,T.unshift(q.pitches[0]);const P=i&&e.instruments[n.instruments[0]].modulators[c.modCount-1-q.pitches[0]]===c.modulators.dictionary.tempo.index;let G=0;w&&P&&(G=F-c.tempoMin),i&&(q.pins[0].size+=G,q.pins[0].size*=z[n.instruments[0]][q.pitches[0]]);let D=1;for(const e of v.pins){e.pitchBend&&T.shift();const t=T[0]-q.pitches[0];if(q.pins.length<=D)q.pins[D++]=ce(t,e.time,i?e.size*z[n.instruments[0]][q.pitches[0]]+G:e.size);else{const a=q.pins[D++];a.interval=t,a.time=e.time,a.size=i?e.size*z[n.instruments[0]][q.pitches[0]]+G:e.size}}q.pins.length=D,0==q.start&&(q.continuesLastPattern=L&&o||g&&l||y&&p?!(y&&!h&&!f||o)&&e.instruments[n.instruments[0]].legacyTieOver:1==u.read(1)),m=ee(0,this.beatsPerBar*c.partsPerBeat,q.end)}else if(i){const e=1==u.read(1),t=u.readPartDuration();e?m-=t:m+=t}else{m+=C&&o?u.readLegacyPartDuration()*c.partsPerBeat/c.rhythms[this.rhythm].stepsPerBeat:u.readPartDuration()}}S.length=b}if(v&&o)break;if(t++,t>=this.getChannelCount())break}if((l&&g||y&&p)&&b>=0)for(let e=0;e<this.channels.length;e++)for(let t=0;t<this.channels[e].instruments.length;t++){const n=this.channels[e].instruments[t];if(H(n.effects)&&(n.reverb=c.reverbRange-1),m==e&&S==t){const t=this.channels[e].bars[0];if(t>0){const n=this.channels[e].patterns[t-1];let i=6;for(const e of n.notes)e.pitches[0]==c.modCount-1-b&&(i=Math.min(i,e.start));i>0&&n.notes.push(new he(c.modCount-1-b,0,i,U))}else if(this.channels[e].patterns.length<c.barCountMax){const t=new fe;if(this.channels[e].patterns.push(t),this.channels[e].bars[0]=this.channels[e].patterns.length,this.channels[e].patterns.length>this.patternsPerChannel){for(let e=0;e<this.channels.length;e++)this.channels[e].patterns.length<=this.patternsPerChannel&&this.channels[e].patterns.push(new fe);this.patternsPerChannel++}t.instruments.length=1,t.instruments[0]=S,t.notes.length=0,t.notes.push(new he(c.modCount-1-b,0,6,U))}}}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(V)+" at index "+(n-1)+" "+e.substring(0,n))}c.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout((()=>{location.reload()}),50))}static _(e){try{return Boolean(new URL(e))}catch(e){return!1}}static j(e,t,n,i,a){const s=c.chipWaves[0].samples,o=c.rawRawChipWaves[0].samples,r=t.length;t.push(e);const p=c.chipWaves.length;let u=e,h=44100,f=!1,d=60,m=!1,v=null,y=null,g=null,S=null,b=!1,w=!1,F=e.indexOf("!"),k=-1;if(0===F&&(k=e.indexOf("!",F+1),-1!==k)){const M=e.slice(F+1,k).split(",");for(const x of M){const z=x.charAt(0),T=x.slice(1,x.length);"s"===z?h=X(8e3,96001,te(T,44100)):"r"===z?d=te(T,60):"p"===z?f=!0:"a"===z?(v=ne(T,null),null!=v&&(m=!0)):"b"===z?(y=ne(T,null),null!=y&&(m=!0)):"c"===z?(g=ne(T,null),null!=g&&(m=!0)):"d"===z?(S=ne(T,null),null!=S&&(S=X(0,4,S),m=!0)):"e"===z&&(b=!0,m=!0)}u=e.slice(k+1,e.length),w=!0}let q=null;if(!ze._(u))return alert(e+" is not a valid url"),!1;if(q=new URL(u),a&&!w&&null!=q){function I(){u=e.slice(0,e.indexOf(",")),q=new URL(u),h=X(8e3,96001,te(e.slice(e.indexOf(",")+1),44100))}function E(){u=e.slice(0,e.indexOf("!")),q=new URL(u),d=te(e.slice(e.indexOf("!")+1),60)}-1!=e.indexOf("@")&&(u=e.replaceAll("@",""),q=new URL(u),f=!0),-1!=e.indexOf(",")&&-1!=e.indexOf("!")?e.indexOf(",")<e.indexOf("!")?(E(),I()):(I(),E()):(-1!=e.indexOf(",")&&I(),-1!=e.indexOf("!")&&E())}if(null!=q){let H=u;const P=[];let G;44100!==h&&P.push("s"+h),60!==d&&P.push("r"+d),f&&P.push("p"),m&&(null!=v&&P.push("a"+v),null!=y&&P.push("b"+y),null!=g&&P.push("c"+g),null!=S&&P.push("d"+S),b&&P.push("e")),P.length>0&&(H="!"+P.join(",")+"!"+u),t[r]=H,G=decodeURIComponent(q.pathname.replace(/^([^\/]*\/)+/,""));const D=1;c.chipWaves[p]={name:G,expression:D,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:h,samples:s,index:p},c.rawChipWaves[p]={name:G,expression:D,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:h,samples:o,index:p},c.rawRawChipWaves[p]={name:G,expression:D,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:h,samples:o,index:p};const W={type:"chip",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"harmony",wave:G,unison:"none",envelopes:[]};m&&(W.isUsingAdvancedLoopControls=!0,W.chipWaveLoopStart=null!=v?v:0,W.chipWaveLoopEnd=null!=y?y:2,W.chipWaveLoopMode=null!=S?S:0,W.chipWavePlayBackwards=b,W.chipWaveStartOffset=null!=g?g:0);const C={index:0,name:G,midiProgram:80,settings:W};if(n.push(C),!c.willReloadForCustomSamples){l(u,p,W,{isUsingAdvancedLoopControls:m,chipWaveLoopStart:v,chipWaveLoopEnd:y,chipWaveLoopMode:S,chipWavePlayBackwards:b,chipWaveStartOffset:g},h)}i.statusTable[p]=0,i.urlTable[p]=u,i.totalSamples++}return!0}static $(){c.chipWaves=S(c.chipWaves.slice(0,c.firstIndexForSamplesInChipWaveList)),c.rawChipWaves=S(c.rawChipWaves.slice(0,c.firstIndexForSamplesInChipWaveList)),c.rawRawChipWaves=S(c.rawRawChipWaves.slice(0,c.firstIndexForSamplesInChipWaveList))}static I(){W.customSamples=null,ze.$(),a.statusTable={},a.urlTable={},a.totalSamples=0,a.samplesLoaded=0,r.dispatchEvent(new s(a.totalSamples,a.samplesLoaded))}toJsonObject(e=!0,t=1,n=!0){const i=[];for(let a=0;a<this.getChannelCount();a++){const s=this.channels[a],o=[],r=this.getChannelIsNoise(a),l=this.getChannelIsMod(a);for(const e of s.instruments)o.push(e.toJsonObject());const p=[];for(const e of s.patterns)p.push(e.toJsonObject(this,s,l));const u=[];if(e)for(let e=0;e<this.loopStart;e++)u.push(s.bars[e]);for(let e=0;e<t;e++)for(let e=this.loopStart;e<this.loopStart+this.loopLength;e++)u.push(s.bars[e]);if(n)for(let e=this.loopStart+this.loopLength;e<this.barCount;e++)u.push(s.bars[e]);const c={type:l?"mod":r?"drum":"pitch",name:s.name,instruments:o,patterns:p,sequence:u};r||(c.octaveScrollBar=s.octave-1),i.push(c)}const a={name:this.title,format:ze.K,version:ze.M,scale:c.scales[this.scale].name,customScale:this.scaleCustom,key:c.keys[this.key].name,keyOctave:this.octave,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:c.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,masterGain:this.masterGain,compressionThreshold:this.compressionThreshold,limitThreshold:this.limitThreshold,limitDecay:this.limitDecay,limitRise:this.limitRise,limitRatio:this.limitRatio,compressionRatio:this.compressionRatio,songEq:this.eqFilter.toJsonObject(),layeredInstruments:this.layeredInstruments,patternInstruments:this.patternInstruments,channels:i};for(let e=0;e<c.filterMorphCount-1;e++)a["songEq"+e]=this.eqSubFilters[e];return null!=W.customSamples&&W.customSamples.length>0&&(a.customSamples=W.customSamples),a}fromJsonObject(e,t="auto"){if(this.initToDefault(!0),!e)return;"auto"==t&&"BeepBox"==e.format&&(null!=e.riff&&(t="modbox"),null!=e.masterGain&&(t="jummbox"));const n=("auto"==t?e.format:t).toLowerCase();if(null!=e.name&&(this.title=e.name),null!=e.customSamples){const t=e.customSamples;if(null==W.customSamples||W.customSamples.join(", ")!=t.join(", ")){c.willReloadForCustomSamples=!0,ze.$();let e=!1,n=!1,i=!1;const s=[],o=[];for(const r of t)if("legacysamples"===r.toLowerCase())e||(e=!0,s.push(r),u(0));else if("nintariboxsamples"===r.toLowerCase())n||(n=!0,s.push(r),u(1));else if("mariopaintboxsamples"===r.toLowerCase())i||(i=!0,s.push(r),u(2));else{const e=!1;ze.j(r,s,o,a,e)}if(s.length>0&&(W.customSamples=s),o.length>0){const e=S(o);W.presetCategories[W.presetCategories.length]={name:"Custom Sample Presets",presets:e,index:W.presetCategories.length}}}}else{let t=!1;if(null!=e.channels)for(let i=0;i<e.channels.length;i++){const a=e.channels[i];if("pitch"===a.type&&Array.isArray(a.instruments)){const e=a.instruments;for(let i=0;i<e.length;i++){const a=e[i];if("chip"!==a.type)continue;if(null==a.wave)continue;const s=a.wave,o=["paandorasbox kick","paandorasbox snare","paandorasbox piano1","paandorasbox WOW","paandorasbox overdrive","paandorasbox trumpet","paandorasbox saxophone","paandorasbox orchestrahit","paandorasbox detatched violin","paandorasbox synth","paandorasbox sonic3snare","paandorasbox come on","paandorasbox choir","paandorasbox overdriveguitar","paandorasbox flute","paandorasbox legato violin","paandorasbox tremolo violin","paandorasbox amen break","paandorasbox pizzicato violin","paandorasbox tim allen grunt","paandorasbox tuba","paandorasbox loopingcymbal","paandorasbox standardkick","paandorasbox standardsnare","paandorasbox closedhihat","paandorasbox foothihat","paandorasbox openhihat","paandorasbox crashcymbal","paandorasbox pianoC4","paandorasbox liver pad","paandorasbox marimba","paandorasbox susdotwav","paandorasbox wackyboxtts","paandorasbox peppersteak_1","paandorasbox peppersteak_2","paandorasbox vinyl_noise","paandorasbeta slap bass","paandorasbeta HD EB overdrive guitar","paandorasbeta sunsoft bass","paandorasbeta masculine choir","paandorasbeta feminine choir","paandorasbeta tololoche","paandorasbeta harp","paandorasbeta pan flute","paandorasbeta krumhorn","paandorasbeta timpani","paandorasbeta crowd hey","paandorasbeta wario land 4 brass","paandorasbeta wario land 4 rock organ","paandorasbeta wario land 4 DAOW","paandorasbeta wario land 4 hour chime","paandorasbeta wario land 4 tick","paandorasbeta kirby kick","paandorasbeta kirby snare","paandorasbeta kirby bongo","paandorasbeta kirby click","paandorasbeta sonor kick","paandorasbeta sonor snare","paandorasbeta sonor snare (left hand)","paandorasbeta sonor snare (right hand)","paandorasbeta sonor high tom","paandorasbeta sonor low tom","paandorasbeta sonor hihat (closed)","paandorasbeta sonor hihat (half opened)","paandorasbeta sonor hihat (open)","paandorasbeta sonor hihat (open tip)","paandorasbeta sonor hihat (pedal)","paandorasbeta sonor crash","paandorasbeta sonor crash (tip)","paandorasbeta sonor ride"],r=["pandoraasbox kick","pandoraasbox snare","pandoraasbox piano1","pandoraasbox WOW","pandoraasbox overdrive","pandoraasbox trumpet","pandoraasbox saxophone","pandoraasbox orchestrahit","pandoraasbox detatched violin","pandoraasbox synth","pandoraasbox sonic3snare","pandoraasbox come on","pandoraasbox choir","pandoraasbox overdriveguitar","pandoraasbox flute","pandoraasbox legato violin","pandoraasbox tremolo violin","pandoraasbox amen break","pandoraasbox pizzicato violin","pandoraasbox tim allen grunt","pandoraasbox tuba","pandoraasbox loopingcymbal","pandoraasbox standardkick","pandoraasbox standardsnare","pandoraasbox closedhihat","pandoraasbox foothihat","pandoraasbox openhihat","pandoraasbox crashcymbal","pandoraasbox pianoC4","pandoraasbox liver pad","pandoraasbox marimba","pandoraasbox susdotwav","pandoraasbox wackyboxtts","pandoraasbox peppersteak_1","pandoraasbox peppersteak_2","pandoraasbox vinyl_noise","pandoraasbeta slap bass","pandoraasbeta HD EB overdrive guitar","pandoraasbeta sunsoft bass","pandoraasbeta masculine choir","pandoraasbeta feminine choir","pandoraasbeta tololoche","pandoraasbeta harp","pandoraasbeta pan flute","pandoraasbeta krumhorn","pandoraasbeta timpani","pandoraasbeta crowd hey","pandoraasbeta wario land 4 brass","pandoraasbeta wario land 4 rock organ","pandoraasbeta wario land 4 DAOW","pandoraasbeta wario land 4 hour chime","pandoraasbeta wario land 4 tick","pandoraasbeta kirby kick","pandoraasbeta kirby snare","pandoraasbeta kirby bongo","pandoraasbeta kirby click","pandoraasbeta sonor kick","pandoraasbeta sonor snare","pandoraasbeta sonor snare (left hand)","pandoraasbeta sonor snare (right hand)","pandoraasbeta sonor high tom","pandoraasbeta sonor low tom","pandoraasbeta sonor hihat (closed)","pandoraasbeta sonor hihat (half opened)","pandoraasbeta sonor hihat (open)","pandoraasbeta sonor hihat (open tip)","pandoraasbeta sonor hihat (pedal)","pandoraasbeta sonor crash","pandoraasbeta sonor crash (tip)","pandoraasbeta sonor ride"],l=["kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","detatched violin","synth","sonic3snare","come on","choir","overdriveguitar","flute","legato violin","tremolo violin","amen break","pizzicato violin","tim allen grunt","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","liver pad","marimba","susdotwav","wackyboxtts"];o.includes(s)?t=!0:r.includes(s)?(t=!0,a.wave=o[r.findIndex((e=>e===s))]):l.includes(s)&&("trumpet"!==s&&"flute"!==s||"paandorasbox"==n)&&(t=!0,a.wave=o[l.findIndex((e=>e===s))])}}}t?(c.willReloadForCustomSamples=!0,ze.$(),u(0),W.customSamples=["legacySamples"]):null!=W.customSamples&&W.customSamples.length>0&&(c.willReloadForCustomSamples=!0,ze.I())}if(this.scale=0,null!=e.scale){const t={"romani :)":"double harmonic :)","romani :(":"double harmonic :(","dbl harmonic :)":"double harmonic :)","dbl harmonic :(":"double harmonic :(",enigma:"strange"},n=null!=t[e.scale]?t[e.scale]:e.scale,a=c.scales.findIndex((e=>e.name==n));if(-1!=a&&(this.scale=a),this.scale==c.scales.dictionary.Custom.index&&null!=e.customScale)for(var i of e.customScale.keys())this.scaleCustom[i]=e.customScale[i]}if(null!=e.key)if("number"==typeof e.key)this.key=(e.key+1200>>>0)%c.keys.length;else if("string"==typeof e.key){const t=e.key;if("C+"===t)this.key=0,this.octave=1;else if("G- (actually F#-)"===t)this.key=6,this.octave=-1;else if("C-"===t)this.key=0,this.octave=-1;else if("oh no (F-)"===t)this.key=5,this.octave=-1;else{const e=t.charAt(0).toUpperCase(),n=t.charAt(1).toLowerCase();let i={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[e];const a={"#":1,"♯":1,b:-1,"♭":-1}[n];null!=i&&(null!=a&&(i+=a),i<0&&(i+=12),i%=12,this.key=i)}}null!=e.beatsPerMinute&&(this.tempo=X(c.tempoMin,c.tempoMax+1,0|e.beatsPerMinute)),null!=e.keyOctave&&(this.octave=X(c.octaveMin,c.octaveMax+1,0|e.keyOctave));let s=0;null!=e.reverb&&(s=X(0,32,0|e.reverb)),null!=e.beatsPerBar&&(this.beatsPerBar=Math.max(c.beatsPerBarMin,Math.min(c.beatsPerBarMax,0|e.beatsPerBar)));let o=4;null!=e.ticksPerBeat&&(o=0|e.ticksPerBeat||4,this.rhythm=c.rhythms.findIndex((e=>e.stepsPerBeat==o)),-1==this.rhythm&&(this.rhythm=1)),null!=e.masterGain?this.masterGain=Math.max(0,Math.min(5,e.masterGain||0)):this.masterGain=1,null!=e.limitThreshold?this.limitThreshold=Math.max(0,Math.min(2,e.limitThreshold||0)):this.limitThreshold=1,null!=e.compressionThreshold?this.compressionThreshold=Math.max(0,Math.min(1.1,e.compressionThreshold||0)):this.compressionThreshold=1,null!=e.limitRise?this.limitRise=Math.max(2e3,Math.min(1e4,e.limitRise||0)):this.limitRise=4e3,null!=e.limitDecay?this.limitDecay=Math.max(1,Math.min(30,e.limitDecay||0)):this.limitDecay=4,null!=e.limitRatio?this.limitRatio=Math.max(0,Math.min(11,e.limitRatio||0)):this.limitRatio=1,null!=e.compressionRatio?this.compressionRatio=Math.max(0,Math.min(1.168,e.compressionRatio||0)):this.compressionRatio=1,null!=e.songEq?this.eqFilter.fromJsonObject(e.songEq):this.eqFilter.reset();for(let t=0;t<c.filterMorphCount-1;t++)e["songEq"+t]?this.eqSubFilters[t]=e["songEq"+t]:this.eqSubFilters[t]=null;let r=1,l=1,p=1;if(null!=e.channels)for(const t of e.channels)t.instruments&&(r=Math.max(r,0|t.instruments.length)),t.patterns&&(l=Math.max(l,0|t.patterns.length)),t.sequence&&(p=Math.max(p,0|t.sequence.length));null!=e.layeredInstruments?this.layeredInstruments=!!e.layeredInstruments:this.layeredInstruments=!1,null!=e.patternInstruments?this.patternInstruments=!!e.patternInstruments:this.patternInstruments=r>1,this.patternsPerChannel=Math.min(l,c.barCountMax),this.barCount=Math.min(p,c.barCountMax),null!=e.introBars&&(this.loopStart=X(0,this.barCount,0|e.introBars)),null!=e.loopBars&&(this.loopLength=X(1,this.barCount-this.loopStart+1,0|e.loopBars));const h=[],f=[],d=[];if(null!=e.channels)for(let t=0;t<e.channels.length;t++){let i=e.channels[t];const a=new xe;let r=!1,l=!1;if(null!=i.type?(r="drum"==i.type,l="mod"==i.type):r=t>=3,r?f.push(a):l?d.push(a):h.push(a),null!=i.octaveScrollBar&&(a.octave=X(0,c.pitchOctaves,1+(0|i.octaveScrollBar)),r&&(a.octave=0)),null!=i.name?a.name=i.name:a.name="",Array.isArray(i.instruments)){const e=i.instruments;for(let t=0;t<e.length&&!(t>=this.getMaxInstrumentsPerChannel());t++){const i=new Me(r,l);a.instruments[t]=i,i.fromJsonObject(e[t],r,l,!1,!1,s,n)}}for(let e=0;e<this.patternsPerChannel;e++){const t=new fe;let s;a.patterns[e]=t,i.patterns&&(s=i.patterns[e]),null!=s&&t.fromJsonObject(s,this,a,o,r,l,n)}a.patterns.length=this.patternsPerChannel;for(let e=0;e<this.barCount;e++)a.bars[e]=null!=i.sequence?Math.min(this.patternsPerChannel,i.sequence[e]>>>0):0;a.bars.length=this.barCount}h.length>c.pitchChannelCountMax&&(h.length=c.pitchChannelCountMax),f.length>c.noiseChannelCountMax&&(f.length=c.noiseChannelCountMax),d.length>c.modChannelCountMax&&(d.length=c.modChannelCountMax),this.pitchChannelCount=h.length,this.noiseChannelCount=f.length,this.modChannelCount=d.length,this.channels.length=0,Array.prototype.push.apply(this.channels,h),Array.prototype.push.apply(this.channels,f),Array.prototype.push.apply(this.channels,d),c.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout((()=>{location.reload()}),50))}getPattern(e,t){if(t<0||t>=this.barCount)return null;const n=this.channels[e].bars[t];return 0==n?null:this.channels[e].patterns[n-1]}getBeatsPerMinute(){return this.tempo}static getNeededBits(e){return 32-Math.clz32(Math.ceil(e+1)-1)}restoreLimiterDefaults(){this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1}}ze.K=c.jsonFormat,ze.P=2,ze.H=9,ze.O=1,ze.W=6,ze.R=1,ze.L=4,ze.V=1,ze.N=5,ze.U=1,ze.M=5,ze.q=115;class Te{constructor(){this.delayLine=null,this.allPassG=0,this.allPassGDelta=0,this.sustainFilterA1=0,this.sustainFilterA1Delta=0,this.sustainFilterA2=0,this.sustainFilterA2Delta=0,this.sustainFilterB0=0,this.sustainFilterB0Delta=0,this.sustainFilterB1=0,this.sustainFilterB1Delta=0,this.sustainFilterB2=0,this.sustainFilterB2Delta=0,this.reset()}reset(){this.delayIndex=-1,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0,this.prevDelayLength=-1,this.delayResetOffset=0}update(e,t,n,i,a,s,o,r){const l=2*Math.PI*c.pickedStringDispersionCenterFreq/e.samplesPerSecond,p=this.prevDelayLength,u=n.phaseDeltas[i],h=n.phaseDeltaScales[i],f=u*Math.pow(h,a),d=2*Math.PI*u,m=2*Math.PI*f,v=2*d,y=2*m,g=Math.min(Math.PI,d*c.pickedStringDispersionFreqMult*Math.pow(l/d,c.pickedStringDispersionFreqScale)),S=Math.min(Math.PI,m*c.pickedStringDispersionFreqMult*Math.pow(l/m,c.pickedStringDispersionFreqScale)),b=2*Math.PI*c.pickedStringShelfHz/e.samplesPerSecond,w=(Math.pow(100,s)-1)/99,F=(Math.pow(100,o)-1)/99,k=1==r?.25:0,q=15.6,M=3*e.samplesPerSecond/48e3,x=Math.pow(.5,w*Math.pow(b/(d*q),1+2*k)*q),z=Math.pow(.5,F*Math.pow(b/(m*q),1+2*k)*q),T=Math.pow(x,.002),I=Math.pow(z,.002);Ge.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(g),e.tempFrequencyResponse.analyze(Ge.tempFilterStartCoefficients,v);const E=Ge.tempFilterStartCoefficients.b[0],H=-e.tempFrequencyResponse.angle()/v;Ge.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(S),e.tempFrequencyResponse.analyze(Ge.tempFilterEndCoefficients,y);const P=Ge.tempFilterEndCoefficients.b[0],G=-e.tempFrequencyResponse.angle()/y,D=0==r?0:1;if(0==D){const e=Math.pow(x,c.stringDecayRate),t=Math.pow(z,c.stringDecayRate);Ge.tempFilterStartCoefficients.highShelf2ndOrder(b,e,.5),Ge.tempFilterEndCoefficients.highShelf2ndOrder(b,t,.5)}else{const t=Math.pow(1==D?0:1,.25),n=Math.pow(M*M*d*3.3*48e3/e.samplesPerSecond,.5+k)/M/Math.pow(w,.5),i=Math.pow(M*M*m*3.3*48e3/e.samplesPerSecond,.5+k)/M/Math.pow(F,.5),a=n*Math.pow(2,.5-1.75*(1-Math.pow(1-t,.85))),s=i*Math.pow(2,.5-1.75*(1-Math.pow(1-t,.85))),o=Math.pow(2,-Math.pow(2,-Math.pow(t,.9))),r=Math.pow(2,-Math.pow(2,-Math.pow(t,.9)));Ge.tempFilterStartCoefficients.lowPass2ndOrderButterworth(U(a),o),Ge.tempFilterEndCoefficients.lowPass2ndOrderButterworth(U(s),r)}e.tempFrequencyResponse.analyze(Ge.tempFilterStartCoefficients,v);const W=Ge.tempFilterStartCoefficients.a[1],C=Ge.tempFilterStartCoefficients.a[2],O=Ge.tempFilterStartCoefficients.b[0]*T,L=Ge.tempFilterStartCoefficients.b[1]*T,A=Ge.tempFilterStartCoefficients.b[2]*T,B=-e.tempFrequencyResponse.angle()/v;e.tempFrequencyResponse.analyze(Ge.tempFilterEndCoefficients,y);const R=Ge.tempFilterEndCoefficients.a[1],N=Ge.tempFilterEndCoefficients.a[2],V=Ge.tempFilterEndCoefficients.b[0]*I,$=Ge.tempFilterEndCoefficients.b[1]*I,j=Ge.tempFilterEndCoefficients.b[2]*I,Q=-e.tempFrequencyResponse.angle()/y,_=1/u,K=1/f,J=Math.ceil(2*Math.max(_,K)),Y=_-H-B,Z=K-G-Q;this.prevDelayLength=Y,this.delayLengthDelta=(Z-Y)/a,this.allPassG=E,this.sustainFilterA1=W,this.sustainFilterA2=C,this.sustainFilterB0=O,this.sustainFilterB1=L,this.sustainFilterB2=A,this.allPassGDelta=(P-E)/a,this.sustainFilterA1Delta=(R-W)/a,this.sustainFilterA2Delta=(N-C)/a,this.sustainFilterB0Delta=(V-O)/a,this.sustainFilterB1Delta=($-L)/a,this.sustainFilterB2Delta=(j-A)/a;const X=Math.abs(Math.log2(Y/p))>.01,ee=-1==this.delayIndex||X;if(null==this.delayLine||this.delayLine.length<=J){const t=Math.ceil(2*e.samplesPerSecond/Me.frequencyFromPitch(12)),n=new Float32Array(Ge.fittingPowerOfTwo(Math.max(t,J)));if(!ee&&null!=this.delayLine){const e=this.delayLine.length-1>>0,t=this.delayIndex+this.delayResetOffset;this.delayIndex=this.delayLine.length-this.delayResetOffset;for(let i=0;i<this.delayLine.length;i++)n[i]=this.delayLine[t+i&e]}this.delayLine=n}const te=this.delayLine,ne=te.length-1>>0;if(ee){this.delayIndex=0,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0;const n=-Y,i=Math.floor(n-_/2),a=Math.ceil(i+2*_);this.delayResetOffset=a;for(let e=i;e<=a;e++)te[e&ne]=0;const s=t.wave,o=s.length-1,r=o/_,l=Math.min(.2*_,.003*e.samplesPerSecond),p=Math.ceil(n),u=n+_+l,c=u;let h=(p-n)*r,f=0;for(let e=p;e<=c;e++){const t=0|h,i=t%o;let a=s[i];const p=h-t;a+=(s[i+1]-a)*p;const c=(a-f)/r,d=Math.min(1,(e-n)/l)*Math.min(1,(u-e)/l),m=d*d*(3-2*d);te[e&ne]+=c*m,f=a,h+=r}}}}class Ie{constructor(){this.noteSecondsStart=[],this.noteSecondsStartUnscaled=0,this.noteSecondsEnd=[],this.noteSecondsEndUnscaled=0,this.noteTicksStart=0,this.noteTicksEnd=0,this.noteSizeStart=c.noteSizeMax,this.noteSizeEnd=c.noteSizeMax,this.prevNoteSize=c.noteSizeMax,this.nextNoteSize=c.noteSizeMax,this.J=c.noteSizeMax,this.prevNoteSecondsStart=[],this.prevNoteSecondsStartUnscaled=0,this.prevNoteSecondsEnd=[],this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksStart=0,this.prevNoteTicksEnd=0,this.Y=c.noteSizeMax,this.tickTimeEnd=[],this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0,this.prevSlideStart=!1,this.prevSlideEnd=!1,this.nextSlideStart=!1,this.nextSlideEnd=!1,this.prevSlideRatioStart=0,this.prevSlideRatioEnd=0,this.nextSlideRatioStart=0,this.nextSlideRatioEnd=0,this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null,this.startPinTickPitch=null,this.envelopeStarts=[],this.envelopeEnds=[],this.Z=[],this.X=0,this.lowpassCutoffDecayVolumeCompensation=1;for(let e=0;e<56;e++)this.envelopeStarts[e]=1,this.envelopeEnds[e]=1;this.reset()}reset(){for(let e=0;e<c.maxEnvelopeCount+1;e++)this.noteSecondsEnd[e]=0,this.prevNoteSecondsEnd[e]=0;this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0,this.J=c.noteSizeMax,this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksEnd=0,this.Y=c.noteSizeMax,this.X=0,this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0,this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null,this.startPinTickPitch=null}computeEnvelopes(e,t,n,i,a,s,o,r,l,p,u){const h=a,f=e.getTransition();if(null!=s&&s.atNoteStart&&!f.continues&&!s.forceContinueAtStart){this.prevNoteSecondsEndUnscaled=this.noteSecondsEndUnscaled,this.prevNoteTicksEnd=this.noteTicksEnd,this.Y=this.J,this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0;for(let e=0;e<c.maxEnvelopeCount+1;e++)this.prevNoteSecondsEnd[e]=this.noteSecondsEnd[e],this.noteSecondsEnd[e]=0}null!=s&&(null!=s.note?this.J=s.note.pins[s.note.pins.length-1].size:this.J=c.noteSizeMax);const d=[],m=i+1,v=[],y=this.noteSecondsEndUnscaled,g=[],S=y+h,b=this.noteTicksEnd,w=b+1,F=[],k=[],q=this.prevNoteSecondsEndUnscaled,M=q+h,x=this.prevNoteTicksEnd,z=x+1,T=1/(c.ticksPerPart*c.partsPerBeat),I=[],E=[];let H=this.J,P=this.J,G=this.Y,D=0,W=!1,C=!1,O=!1,L=!1,A=0,B=0,R=0,N=0;if(null==s&&(this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null),null!=s&&null!=s.note&&!s.passedEndOfNote){const n=s.note.getEndPinIndex(t),a=s.note.pins[n-1],o=s.note.pins[n],p=(s.note.start+a.time)*c.ticksPerPart;(null==this.startPinTickAbsolute||!f.continues&&!f.slides&&s.passedEndOfNote)&&(this.startPinTickAbsolute=p+l.computeTicksSinceStart(!0)),(null==this.startPinTickDefaultPitch||s.passedEndOfNote)&&(this.startPinTickDefaultPitch=this.getPitchValue(e,s,r,!1)),s.passedEndOfNote||(this.startPinTickPitch=this.getPitchValue(e,s,r,!0));const u=(s.note.start+o.time)*c.ticksPerPart,h=(i-p)/(u-p),d=(m-p)/(u-p);if(H=a.size+(o.size-a.size)*h,P=a.size+(o.size-a.size)*d,f.slides){const e=s.noteStartPart*c.ticksPerPart,t=s.noteEndPart*c.ticksPerPart,n=.5*(t-e),a=Math.min(n,f.slideTicks);null==s.prevNote||s.forceContinueAtStart||(i-e<a&&(W=!0,A=.5*(1-(i-e)/a)),m-e<a&&(C=!0,B=.5*(1-(m-e)/a))),null==s.nextNote||s.forceContinueAtEnd||(D=s.nextNote.pins[0].size,t-i<a&&(O=!0,R=.5*(1-(t-i)/a)),t-m<a&&(L=!0,N=.5*(1-(t-m)/a)))}}let V=1,U=!1;for(let t=0;t<=e.envelopeCount;t++){let i,h,f,m=!1,b=!1,w=1,x=1,z=w*x,$=0,j=1,Q=0,_=2,K=2,J=0,Y=this.startPinTickAbsolute||0,Z=this.startPinTickDefaultPitch||0;if(t==e.envelopeCount){if(U)break;i=c.instrumentAutomationTargets.dictionary.noteVolume,h=0,f=c.newEnvelopes.dictionary["note size"]}else{let s=e.envelopes[t];i=c.instrumentAutomationTargets[s.target],h=s.index,f=c.newEnvelopes[s.envelope],m=e.envelopes[t].inverse,b=e.envelopes[t].discrete,w=e.envelopes[t].perEnvelopeSpeed,x=Math.pow(e.envelopeSpeed,2)/144,z=w*x,$=e.envelopes[t].perEnvelopeLowerBound,j=e.envelopes[t].perEnvelopeUpperBound,l.isModActive(c.modulators.dictionary["individual envelope lower bound"].index,p,u)&&null!=e.envelopes[t].tempEnvelopeLowerBound&&($=e.envelopes[t].tempEnvelopeLowerBound),l.isModActive(c.modulators.dictionary["individual envelope upper bound"].index,p,u)&&null!=e.envelopes[t].tempEnvelopeUpperBound&&(j=e.envelopes[t].tempEnvelopeUpperBound),$<=j||($=0,j=1),Q=l.computeTicksSinceStart(),_=e.envelopes[t].steps,K=e.envelopes[t].seed,e.envelopes[t].waveform>=("lfo"==f.name?7:4)&&(e.envelopes[t].waveform=0),J=e.envelopes[t].waveform,o[t]||(o[t]=0);const r=a*o[t];n[t]||(n[t]=0),d[t]=n[t]?n[t]+o[t]:o[t],v[t]=this.noteSecondsEnd[t]?this.noteSecondsEnd[t]:0,F[t]=this.prevNoteSecondsEnd[t]?this.prevNoteSecondsEnd[t]:0,g[t]=v[t]?v[t]+r:r,k[t]=F[t]?F[t]+r:r,I[t]=n[t]?T*n[t]:T,E[t]=d[t]?T*d[t]:T,1==f.type&&(U=!0)}const X=2==f.type?this.computePitchEnvelope(e,t,this.startPinTickPitch||this.getPitchValue(e,s,r,!0)):0;if(null!=i.computeIndex){const n=i.computeIndex+h;let a=Ie.computeEnvelope(f,z,x,y,v[t],I[t],Q,H,X,m,$,j,!1,_,K,J,Z,Y);if(W){a+=(Ie.computeEnvelope(f,z,x,q,F[t],I[t],Q,G,X,m,$,j,!1,_,K,J,Z,Y)-a)*A}if(O){a+=(Ie.computeEnvelope(f,z,x,0,0,I[t],Q,D,X,m,$,j,!1,_,K,J,Z,Y)-a)*R}let s=a;if(0==b){if(s=Ie.computeEnvelope(f,z,x,S,g[t],E[t],Q,P,X,m,$,j,!1,_,K,J,Z,Y),C){s+=(Ie.computeEnvelope(f,z,x,M,k[t],E[t],Q,G,X,m,$,j,!1,_,K,J,Z,Y)-s)*B}if(L){s+=(Ie.computeEnvelope(f,z,x,0,0,E[t],Q,D,X,m,$,j,!1,_,K,J,Z,Y)-s)*N}}if(this.envelopeStarts[n]*=a,this.envelopeEnds[n]*=s,this.Z[this.X++]=n,i.isFilter){const t=null!=e.tmpNoteFilterStart?e.tmpNoteFilterStart:e.noteFilter;t.controlPointCount>h&&0==t.controlPoints[h].type&&(V=Math.max(V,Ie.getLowpassCutoffDecayVolumeCompensation(f,w)))}}}this.noteSecondsStartUnscaled=y,this.noteSecondsEndUnscaled=S,this.noteTicksStart=b,this.noteTicksEnd=w,this.prevNoteSecondsStartUnscaled=q,this.prevNoteSecondsEndUnscaled=M,this.prevNoteTicksStart=x,this.prevNoteTicksEnd=z;for(let e=0;e<c.maxEnvelopeCount+1;e++)this.noteSecondsStart[e]=v[e],this.noteSecondsEnd[e]=g[e],this.prevNoteSecondsStart[e]=F[e],this.prevNoteSecondsEnd[e]=k[e];this.prevNoteSize=G,this.nextNoteSize=D,this.noteSizeStart=H,this.noteSizeEnd=P,this.prevSlideStart=W,this.prevSlideEnd=C,this.nextSlideStart=O,this.nextSlideEnd=L,this.prevSlideRatioStart=A,this.prevSlideRatioEnd=B,this.nextSlideRatioStart=R,this.nextSlideRatioEnd=N,this.lowpassCutoffDecayVolumeCompensation=V}clearEnvelopes(){for(let e=0;e<this.X;e++){const t=this.Z[e];this.envelopeStarts[t]=1,this.envelopeEnds[t]=1}this.X=0}static computeEnvelope(e,t,n,i,a,s,o,r,l,p,u,c,h=!1,f,d,m,v,y){const g=h?e.speed:1,S=c-u;switch(e.type){case 0:return c;case 1:return p?c-Ge.noteSizeToVolumeMult(r)*S:Ge.noteSizeToVolumeMult(r)*S+u;case 2:return l;case 3:const e=4294967295,h=f;switch(m){case 0:if(h<=1)return 1;const n=Y((0==t?0:Math.floor(o*t/256))+"",d);return p?c-S*(h/(h-1))*Math.floor(n*h/(e+1))/h:S*(h/(h-1))*Math.floor(n*h/(e+1))/h+u;case 1:const i=Y(v+"",d);return p?c-S*i/(e+1):S*i/(e+1)+u;case 2:if(h<=1)return 1;const a=Y(y+"",d);return p?c-S*(h/(h-1))*Math.floor(a*h/(e+1))/h:S*(h/(h-1))*Math.floor(a*h/(e+1))/h+u;case 3:const s=Y((0==t?0:Math.floor(o*t/256))+"",d)*(1-o*t/256%1)+Y((0==t?0:Math.floor((o*t+256)/256))+"",d)*(o*t/256%1);return p?c-S*s/(e+1):S*s/(e+1)+u;default:throw new Error("Unrecognized operator envelope waveform type: "+m)}case 6:return p?c-S*(1/(1+a*g)):S/(1+a*g)+u;case 7:return p?S/(1+a*g)+u:c-S/(1+a*g);case 8:switch(m){case 0:return p?c/2+S*Math.cos(2*s*Math.PI*g)*.5+u/2:c/2-S*Math.cos(2*s*Math.PI*g)*.5+u/2;case 1:return p?Math.cos(2*s*Math.PI*g+3*Math.PI/2)<0?c:u:Math.cos(2*s*Math.PI*g+3*Math.PI/2)<0?u:c;case 2:return p?c/2-S/Math.PI*Math.asin(Math.sin(Math.PI/2+s*Math.PI*2*g))+u/2:c/2+S/Math.PI*Math.asin(Math.sin(Math.PI/2+s*Math.PI*2*g))+u/2;case 3:return p?c-s*g%1*S:s*g%1*S+u;case 4:let e=0;return e=p?c/2-2*S/Math.PI*Math.asin(Math.sin(Math.PI/2+s*Math.PI*2*g))+u/2:c/2+2*S/Math.PI*Math.asin(Math.sin(Math.PI/2+s*Math.PI*2*g))+u/2,Math.max(u,Math.min(c,e));case 5:if(f<=1)return 1;let t=s*g%1;return p?c-Math.floor(t*f)*S/(f-1):Math.floor(t*f)*S/(f-1)+u;case 6:if(f<=1)return 1;let n=.5+(p?-1:1)*(1/Math.PI)*Math.asin(Math.sin(Math.PI/2+s*Math.PI*2*g));return Math.round(n*(f-1))*S/(f-1)+u;default:throw new Error("Unrecognized operator envelope waveform type: "+m)}case 9:return p?c/4+S*Math.cos(2*s*Math.PI*g)*.25+u/4:.5+c/4-S*Math.cos(2*s*Math.PI*g)*.25-u/4;case 4:return p?Math.max(0,c+1-Math.max(1-u,1-c-i*n*10)):Math.max(1+u,1+c-i*n*10);case 5:const b=.25/Math.sqrt(g*t);return p?c-S*(i<b?i/b:1/(1+(i-b)*g*t)):S*(i<b?i/b:1/(1+(i-b)*g*t))+u;case 10:return p?c-S*Math.pow(2,-g*a):S*Math.pow(2,-g*a)+u;case 14:return p?c-S*+(i<.25/Math.sqrt(g*t)):S*+(i<.25/Math.sqrt(g*t))+u;case 11:let w=.5-.5*Math.cos(s*g);return w=1/(1+a*(g-w/(1.5/g))),w=w>0?w:0,p?c-S*w:S*w+u;case 12:{let e=1-a/(16/g);return e=e>0?e:0,p?c-S*e:S*e+u}case 13:{let e=a/(16/g);return e=e<1?e:1,p?c-S*e:S*e+u}case 15:return p?Math.min(Math.max(u,c-S*Math.sqrt(Math.max(1-g*a/2,0))),c):Math.max(u,S*Math.sqrt(Math.max(1-g*a/2,0))+u);default:throw new Error("Unrecognized operator envelope type.")}}getPitchValue(e,t,n,i=!0){if(t&&t.pitchCount>=1){const a=e.getChord(),s=a.arpeggiates,o="monophonic"==a.name,r=Math.floor(n.arpTime/c.ticksPerArpeggio),l=t.pitches[s?g(t.pitchCount,e.fastTwoNoteArp,r):o?e.monoChordTone:0];return i&&t.lastInterval!=l?l+t.lastInterval:l}return 0}computePitchEnvelope(e,t,n=0){let i=0,a=c.maxPitch,s=!1,o=0,r=1;e.isNoiseInstrument&&(a=c.drumCount-1),t<e.envelopeCount&&-2!==t&&(i=e.envelopes[t].pitchEnvelopeStart,a=e.envelopes[t].pitchEnvelopeEnd,s=e.envelopes[t].inverse,o=e.envelopes[t].perEnvelopeLowerBound,r=e.envelopes[t].perEnvelopeUpperBound),i>a&&(i=0,a=e.isNoiseInstrument?c.drumCount-1:c.maxPitch);const l=a-i+1;return s?n<=i?r:n>=a?o:r-(n-i)*(r-o)/l:n<=i?o:n>=a?r:(n-i)*(r-o)/l+o}static getLowpassCutoffDecayVolumeCompensation(e,t=1){return 10==e.type?1.25+.025*t:6==e.type?1+.02*t:1}computeDrumsetEnvelopes(e,t,n,i,a){function s(e,n,i,a){return Ie.computeEnvelope(t,1,1,e,n,i,0,a,1,!1,0,1,!0,2,2,0,1,0)}let o=s(this.noteSecondsStartUnscaled,this.noteSecondsStartUnscaled,n*i,this.noteSizeStart);if(this.prevSlideStart){o+=(s(this.prevNoteSecondsStartUnscaled,this.prevNoteSecondsStartUnscaled,n*i,this.prevNoteSize)-o)*this.prevSlideRatioStart}if(this.nextSlideStart){o+=(s(0,0,n*i,this.nextNoteSize)-o)*this.nextSlideRatioStart}let r=o;if(r=s(this.noteSecondsEndUnscaled,this.noteSecondsEndUnscaled,n*a,this.noteSizeEnd),this.prevSlideEnd){r+=(s(this.prevNoteSecondsEndUnscaled,this.prevNoteSecondsEndUnscaled,n*a,this.prevNoteSize)-r)*this.prevSlideRatioEnd}if(this.nextSlideEnd){r+=(s(0,0,n*a,this.nextNoteSize)-r)*this.nextSlideRatioEnd}this.drumsetFilterEnvelopeStart=o,this.drumsetFilterEnvelopeEnd=r}}class Ee{constructor(){this.pitches=Array(c.maxChordSize+2).fill(0),this.pitchCount=0,this.chordSize=0,this.drumsetPitch=null,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.freshlyAllocated=!0,this.atNoteStart=!1,this.isOnLastTick=!1,this.passedEndOfNote=!1,this.forceContinueAtStart=!1,this.forceContinueAtEnd=!1,this.noteStartPart=0,this.noteEndPart=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.stringSustainStart=0,this.stringSustainEnd=0,this.noiseSamples=[],this.phases=[],this.operatorWaves=[],this.phaseDeltas=[],this.directions=[],this.chipWaveCompletions=[],this.chipWavePrevWaves=[],this.chipWaveCompletionsLastWave=[],this.phaseDeltaScales=[],this.expression=0,this.expressionDelta=0,this.operatorExpressions=[],this.operatorExpressionDeltas=[],this.prevPitchExpressions=Array(c.maxPitchOrOperatorCount).fill(null),this.prevVibrato=null,this.prevStringDecay=null,this.pulseWidth=0,this.pulseWidthDelta=0,this.decimalOffset=0,this.supersawDynamism=0,this.supersawDynamismDelta=0,this.supersawUnisonDetunes=[],this.supersawShape=0,this.supersawShapeDelta=0,this.supersawDelayLength=0,this.supersawDelayLengthDelta=0,this.supersawDelayLine=null,this.supersawDelayIndex=-1,this.supersawPrevPhaseDelta=null,this.pickedStrings=[],this.noteFilters=[],this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.specialIntervalExpressionMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.stereoVolumeLStart=0,this.stereoVolumeRStart=0,this.stereoVolumeLDelta=0,this.stereoVolumeRDelta=0,this.stereoDelayStart=0,this.stereoDelayEnd=0,this.stereoDelayDelta=0,this.customVolumeStart=0,this.customVolumeEnd=0,this.filterResonanceStart=0,this.filterResonanceDelta=0,this.isFirstOrder=!1,this.envelopeComputer=new Ie,this.reset()}reset(){for(let e=0;e<c.unisonVoicesMax;e++)this.noiseSamples[e]=0;for(let e=0;e<c.maxPitchOrOperatorCount;e++)this.phases[e]=0,this.directions[e]=1,this.chipWaveCompletions[e]=0,this.chipWavePrevWaves[e]=0,this.chipWaveCompletionsLastWave[e]=0,this.operatorWaves[e]=c.operatorWaves[0],this.feedbackOutputs[e]=0,this.prevPitchExpressions[e]=null;for(let e=0;e<this.noteFilterCount;e++)this.noteFilters[e].resetOutput();this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.liveInputSamplesHeld=0,this.supersawDelayIndex=-1;for(const e of this.pickedStrings)e.reset();this.envelopeComputer.reset(),this.prevVibrato=null,this.prevStringDecay=null,this.supersawPrevPhaseDelta=null,this.drumsetPitch=null}}class He{constructor(){this.awake=!1,this.computed=!1,this.tonesAddedInThisTick=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0,this.activeTones=new A,this.activeModTones=new A,this.releasedTones=new A,this.liveInputTones=new A,this.type=0,this.synthesizer=null,this.wave=null,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=0,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0,this.noisePitchFilterMult=1,this.unison=null,this.unisonVoices=1,this.unisonSpread=0,this.unisonOffset=0,this.unisonExpression=1.4,this.unisonSign=1,this.chord=null,this.effects=0,this.volumeScale=0,this.aliases=!1,this.arpTime=0,this.vibratoTime=0,this.nextVibratoTime=0,this.envelopeTime=[],this.eqFilterVolume=1,this.eqFilterVolumeDelta=0,this.mixVolume=1,this.mixVolumeDelta=0,this.delayInputMult=0,this.delayInputMultDelta=0,this.granularMix=1,this.granularMixDelta=0,this.granularDelayLine=null,this.granularDelayLineIndex=0,this.granularMaximumDelayTimeInSeconds=1,this.usesRandomGrainLocation=!0,this.granularDelayLineDirty=!1,this.computeGrains=!0,this.ringModMix=0,this.ringModMixDelta=0,this.ringModPhase=0,this.ringModPhaseDelta=0,this.ringModPhaseDeltaScale=1,this.ringModWaveformIndex=0,this.ringModPulseWidth=0,this.ringModHzOffset=0,this.ringModMixFade=1,this.ringModMixFadeDelta=0,this.distortion=0,this.distortionDelta=0,this.distortionDrive=0,this.distortionDriveDelta=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1,this.bitcrusherPhaseDelta=0,this.bitcrusherPhaseDeltaScale=1,this.bitcrusherScale=1,this.bitcrusherScaleScale=1,this.bitcrusherFoldLevel=1,this.bitcrusherFoldLevelScale=1,this.eqFilters=[],this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.panningDelayLine=null,this.panningDelayPos=0,this.panningVolumeL=0,this.panningVolumeR=0,this.panningVolumeDeltaL=0,this.panningVolumeDeltaR=0,this.panningOffsetL=0,this.panningOffsetR=0,this.panningOffsetDeltaL=0,this.panningOffsetDeltaR=0,this.chorusDelayLineL=null,this.chorusDelayLineR=null,this.chorusDelayLineDirty=!1,this.chorusDelayPos=0,this.chorusPhase=0,this.chorusVoiceMult=0,this.chorusVoiceMultDelta=0,this.chorusCombinedMult=0,this.chorusCombinedMultDelta=0,this.echoDelayLineL=null,this.echoDelayLineR=null,this.echoDelayLineDirty=!1,this.echoDelayPos=0,this.echoDelayOffsetStart=0,this.echoDelayOffsetEnd=null,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=0,this.echoMult=0,this.echoMultDelta=0,this.echoShelfA1=0,this.echoShelfB0=0,this.echoShelfB1=0,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbDelayLine=null,this.reverbDelayLineDirty=!1,this.reverbDelayPos=0,this.reverbMult=0,this.reverbMultDelta=0,this.reverbShelfA1=0,this.reverbShelfB0=0,this.reverbShelfB1=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,this.spectrumWave=new ge,this.harmonicsWave=new be,this.drumsetSpectrumWaves=[],this.envelopeComputer=new Ie;for(let e=0;e<c.drumCount;e++)this.drumsetSpectrumWaves[e]=new ge;this.granularGrains=[],this.granularMaximumGrains=256;for(let e=0;e<this.granularMaximumGrains;e++)this.granularGrains.push(new we);this.granularGrainsLength=0}allocateNecessaryBuffers(e,t,n){if(T(t.effects)&&(null==this.panningDelayLine||this.panningDelayLine.length<e.panningDelayBufferSize)&&(this.panningDelayLine=new Float32Array(e.panningDelayBufferSize)),I(t.effects)&&((null==this.chorusDelayLineL||this.chorusDelayLineL.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineL=new Float32Array(e.chorusDelayBufferSize)),(null==this.chorusDelayLineR||this.chorusDelayLineR.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineR=new Float32Array(e.chorusDelayBufferSize))),E(t.effects)&&this.allocateEchoBuffers(n,t.echoDelay),H(t.effects)&&null==this.reverbDelayLine&&(this.reverbDelayLine=new Float32Array(c.reverbDelayBufferSize)),G(t.effects)){const t=2500/1e3;this.granularMaximumDelayTimeInSeconds=t;const n=Ge.fittingPowerOfTwo(Math.floor(t*e.samplesPerSecond));null!=this.granularDelayLine&&this.granularDelayLine.length==n||(this.granularDelayLine=new Float32Array(n),this.granularDelayLineIndex=0);const i=this.granularGrains.length;if(this.granularMaximumGrains>i)for(let e=i;e<this.granularMaximumGrains+1;e++)this.granularGrains.push(new we);this.granularMaximumGrains<this.granularGrainsLength&&(this.granularGrainsLength=Math.round(this.granularMaximumGrains))}}allocateEchoBuffers(e,t){const n=Math.max(c.echoDelayRange>>1,t+1),i=2*Ge.fittingPowerOfTwo(n*c.echoDelayStepTicks*e);if(null==this.echoDelayLineL||null==this.echoDelayLineR)this.echoDelayLineL=new Float32Array(i),this.echoDelayLineR=new Float32Array(i);else if(this.echoDelayLineL.length<i||this.echoDelayLineR.length<i){const e=new Float32Array(i),t=new Float32Array(i),n=this.echoDelayLineL.length-1;for(let i=0;i<this.echoDelayLineL.length;i++)e[i]=this.echoDelayLineL[this.echoDelayPos+i&n],t[i]=this.echoDelayLineL[this.echoDelayPos+i&n];this.echoDelayPos=this.echoDelayLineL.length,this.echoDelayLineL=e,this.echoDelayLineR=t}}deactivate(){this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1;for(let e=0;e<this.eqFilterCount;e++)this.eqFilters[e].resetOutput();if(this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.panningDelayPos=0,null!=this.panningDelayLine)for(let e=0;e<this.panningDelayLine.length;e++)this.panningDelayLine[e]=0;this.echoDelayOffsetEnd=null,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,this.volumeScale=1,this.aliases=!1,this.awake=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0}resetAllEffects(){this.deactivate(),this.vibratoTime=0,this.nextVibratoTime=0,this.arpTime=0;for(let e=0;e<c.maxEnvelopeCount+1;e++)this.envelopeTime[e]=0;if(this.envelopeComputer.reset(),this.chorusDelayLineDirty){for(let e=0;e<this.chorusDelayLineL.length;e++)this.chorusDelayLineL[e]=0;for(let e=0;e<this.chorusDelayLineR.length;e++)this.chorusDelayLineR[e]=0}if(this.echoDelayLineDirty){for(let e=0;e<this.echoDelayLineL.length;e++)this.echoDelayLineL[e]=0;for(let e=0;e<this.echoDelayLineR.length;e++)this.echoDelayLineR[e]=0}if(this.reverbDelayLineDirty)for(let e=0;e<this.reverbDelayLine.length;e++)this.reverbDelayLine[e]=0;if(this.granularDelayLineDirty)for(let e=0;e<this.granularDelayLine.length;e++)this.granularDelayLine[e]=0;this.chorusPhase=0,this.ringModPhase=0,this.ringModMixFade=1}compute(e,t,n,i,a,s,o){this.computed=!0,this.type=t.type,this.synthesizer=Ge.getInstrumentSynthFunction(t),this.unison=c.unisons[t.unison],this.chord=t.getChord(),this.noisePitchFilterMult=c.chipNoises[t.chipNoise].pitchFilterMult,this.effects=t.effects,this.aliases=t.aliases,this.volumeScale=1;const r=e.samplesPerSecond;this.updateWaves(t,r);const l=e.getTicksIntoBar(),p=n/e.samplesPerSecond,u=e.getCurrentPart(),h=[];for(let e=0;e<c.maxEnvelopeCount;e++)h[e]=0;let f=c.arpSpeedScale[t.envelopeSpeed];e.isModActive(c.modulators.dictionary["envelope speed"].index,s,o)&&(f=Math.max(0,Math.min(c.arpSpeedScale.length-1,e.getModValue(c.modulators.dictionary["envelope speed"].index,s,o,!1))),f=Number.isInteger(f)?c.arpSpeedScale[f]:(1-f%1)*c.arpSpeedScale[Math.floor(f)]+f%1*c.arpSpeedScale[Math.ceil(f)]);for(let n=0;n<t.envelopeCount;n++){let i=t.envelopes[n].perEnvelopeSpeed;e.isModActive(c.modulators.dictionary["individual envelope speed"].index,s,o)&&null!=t.envelopes[n].tempEnvelopeSpeed&&(i=t.envelopes[n].tempEnvelopeSpeed),h[n]=f*i}this.envelopeComputer.computeEnvelopes(t,u,this.envelopeTime,l,p,a,h,this,e,s,o);const d=this.envelopeComputer.envelopeStarts,m=this.envelopeComputer.envelopeEnds,v=G(this.effects),y=P(this.effects),g=x(this.effects),S=z(this.effects),b=T(this.effects),w=I(this.effects),F=E(this.effects),k=H(this.effects);let q=0;if(v&&(q=t.grainAmounts+1,this.granularMaximumGrains=t.grainAmounts,e.isModActive(c.modulators.dictionary["grain freq"].index,s,o)&&(this.granularMaximumGrains=e.getModValue(c.modulators.dictionary["grain freq"].index,s,o,!1),q=e.getModValue(c.modulators.dictionary["grain freq"].index,s,o,!1)+1),this.granularMaximumGrains=Math.floor(Math.pow(2,this.granularMaximumGrains*d[52])),q*=d[52]),this.allocateNecessaryBuffers(e,t,n),v){this.granularMix=t.granular/c.granularRange,this.computeGrains=!0;let a=this.granularMix;e.isModActive(c.modulators.dictionary.granular.index,s,o)&&(this.granularMix=e.getModValue(c.modulators.dictionary.granular.index,s,o,!1)/c.granularRange,a=e.getModValue(c.modulators.dictionary.granular.index,s,o,!0)/c.granularRange),this.granularMix*=d[51],a*=m[51],this.granularMixDelta=(a-this.granularMix)/i;for(let i=0;i<Math.ceil(Math.random()*Math.random()*10);i++)if(this.granularGrainsLength<this.granularMaximumGrains&&Math.random()<=q){let i=t.grainSize;e.isModActive(c.modulators.dictionary["grain size"].index,s,o)&&(i=e.getModValue(c.modulators.dictionary["grain size"].index,s,o,!1)),i*=d[53];let a=t.grainRange;e.isModActive(c.modulators.dictionary["grain range"].index,s,o)&&(a=e.getModValue(c.modulators.dictionary["grain range"].index,s,o,!1)),a*=d[54];const l=(i+(i+a-i)*Math.random())/1e3,p=Math.floor(l*r),u=this.granularDelayLine.length,h=this.granularGrainsLength;this.granularGrainsLength++;const f=this.granularGrains[h];f.ageInSamples=0,f.maxAgeInSamples=p;const m=.02,v=2.4;f.delayLinePosition=this.usesRandomGrainLocation?(m+(v-m)*Math.random()*Math.random()*r)%(u-1):m,0==c.granularEnvelopeType?f.initializeParabolicEnvelope(f.maxAgeInSamples,1):1==c.granularEnvelopeType&&f.initializeRCBEnvelope(f.maxAgeInSamples,1),f.addDelay(Math.random()*n*4)}}if(g){let n=t.distortion,a=t.distortion;e.isModActive(c.modulators.dictionary.distortion.index,s,o)&&(n=e.getModValue(c.modulators.dictionary.distortion.index,s,o,!1),a=e.getModValue(c.modulators.dictionary.distortion.index,s,o,!0));const r=Math.min(1,d[42]*n/(c.distortionRange-1)),l=Math.min(1,m[42]*a/(c.distortionRange-1)),p=Math.pow(1-.895*(Math.pow(20,r)-1)/19,2),u=Math.pow(1-.895*(Math.pow(20,l)-1)/19,2),h=(1+2*r)/c.distortionBaseVolume,f=(1+2*l)/c.distortionBaseVolume;this.distortion=p,this.distortionDelta=(u-p)/i,this.distortionDrive=h,this.distortionDriveDelta=(f-h)/i}if(S){let n=t.bitcrusherFreq*Math.sqrt(d[44]),a=t.bitcrusherFreq*Math.sqrt(m[44]);e.isModActive(c.modulators.dictionary["freq crush"].index,s,o)&&(n=e.getModValue(c.modulators.dictionary["freq crush"].index,s,o,!1)*Math.sqrt(d[44]),a=e.getModValue(c.modulators.dictionary["freq crush"].index,s,o,!0)*Math.sqrt(m[44]));let l=t.bitcrusherQuantization*Math.sqrt(d[43]),p=t.bitcrusherQuantization*Math.sqrt(m[43]);e.isModActive(c.modulators.dictionary["bit crush"].index,s,o)&&(l=e.getModValue(c.modulators.dictionary["bit crush"].index,s,o,!1)*Math.sqrt(d[43]),p=e.getModValue(c.modulators.dictionary["bit crush"].index,s,o,!0)*Math.sqrt(m[43]));const u=c.keys[e.song.key].basePitch+c.pitchesPerOctave*e.song.octave,h=Me.frequencyFromPitch(u+60)*Math.pow(2,(c.bitcrusherFreqRange-1-n)*c.bitcrusherOctaveStep),f=Me.frequencyFromPitch(u+60)*Math.pow(2,(c.bitcrusherFreqRange-1-a)*c.bitcrusherOctaveStep),v=Math.min(1,h/r),y=Math.min(1,f/r);this.bitcrusherPhaseDelta=v,this.bitcrusherPhaseDeltaScale=Math.pow(y/v,1/i);const g=2*c.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(c.bitcrusherQuantizationRange-1-l))),S=2*c.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(c.bitcrusherQuantizationRange-1-p)));this.bitcrusherScale=g,this.bitcrusherScaleScale=Math.pow(S/g,1/i);const b=2*c.bitcrusherBaseVolume*Math.pow(1.5,c.bitcrusherQuantizationRange-1-l),w=2*c.bitcrusherBaseVolume*Math.pow(1.5,c.bitcrusherQuantizationRange-1-p);this.bitcrusherFoldLevel=b,this.bitcrusherFoldLevelScale=Math.pow(w/b,1/i)}let M=1;if(t.eqFilterType){const n=t.eqFilter;null==t.eqSubFilters[1]&&(t.eqSubFilters[1]=new ke);const a=t.eqSubFilters[1];let l,p=t.eqFilterSimpleCut,u=t.eqFilterSimplePeak,h=t.eqFilterSimpleCut,f=t.eqFilterSimplePeak,d=!1;if(e.isModActive(c.modulators.dictionary["eq filt cut"].index,s,o)&&(p=e.getModValue(c.modulators.dictionary["eq filt cut"].index,s,o,!1),h=e.getModValue(c.modulators.dictionary["eq filt cut"].index,s,o,!0),d=!0),e.isModActive(c.modulators.dictionary["eq filt peak"].index,s,o)&&(u=e.getModValue(c.modulators.dictionary["eq filt peak"].index,s,o,!1),f=e.getModValue(c.modulators.dictionary["eq filt peak"].index,s,o,!0),d=!0),d){n.convertLegacySettingsForSynth(p,u),a.convertLegacySettingsForSynth(h,f),l=n.controlPoints[0];let e=a.controlPoints[0];l.toCoefficients(Ge.tempFilterStartCoefficients,r,1,1),e.toCoefficients(Ge.tempFilterEndCoefficients,r,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new V),this.eqFilters[0].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterEndCoefficients,1/i,0==l.type)}else n.convertLegacySettingsForSynth(p,u,!0),l=n.controlPoints[0],l.toCoefficients(Ge.tempFilterStartCoefficients,r,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new V),this.eqFilters[0].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterStartCoefficients,1/i,0==l.type);M*=l.getVolumeCompensationMult(),this.eqFilterCount=1,M=Math.min(3,M)}else{const e=null!=t.tmpEqFilterStart?t.tmpEqFilterStart:t.eqFilter;for(let n=0;n<e.controlPointCount;n++){let a=e.controlPoints[n],s=null!=t.tmpEqFilterEnd&&null!=t.tmpEqFilterEnd.controlPoints[n]?t.tmpEqFilterEnd.controlPoints[n]:e.controlPoints[n];a.type!=s.type&&(a=s),a.toCoefficients(Ge.tempFilterStartCoefficients,r,1,1),s.toCoefficients(Ge.tempFilterEndCoefficients,r,1,1),this.eqFilters.length<=n&&(this.eqFilters[n]=new V),this.eqFilters[n].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterEndCoefficients,1/i,0==a.type),M*=a.getVolumeCompensationMult()}this.eqFilterCount=e.controlPointCount,M=Math.min(3,M)}const W=Ge.instrumentVolumeToVolumeMult(t.volume);this.mixVolume=W;let C=W;if(e.isModActive(c.modulators.dictionary["mix volume"].index,s,o)){const t=e.getModValue(c.modulators.dictionary["mix volume"].index,s,o,!1),n=e.getModValue(c.modulators.dictionary["mix volume"].index,s,o,!0);this.mixVolume*=t<=0?(t+c.volumeRange/2)/(c.volumeRange/2):Ge.instrumentVolumeToVolumeMult(t),C*=n<=0?(n+c.volumeRange/2)/(c.volumeRange/2):Ge.instrumentVolumeToVolumeMult(n)}e.isModActive(c.modulators.dictionary["song volume"].index)&&(this.mixVolume*=e.getModValue(c.modulators.dictionary["song volume"].index,void 0,void 0,!1)/100,C*=e.getModValue(c.modulators.dictionary["song volume"].index,void 0,void 0,!0)/100),this.mixVolumeDelta=(C-this.mixVolume)/i;let O=M,L=M,A=1,B=1;if(b){const n=2*d[41]-1,a=2*m[41]-1;let l=t.pan,p=t.pan;e.isModActive(c.modulators.dictionary.pan.index,s,o)&&(l=e.getModValue(c.modulators.dictionary.pan.index,s,o,!1),p=e.getModValue(c.modulators.dictionary.pan.index,s,o,!0));let u=Math.max(-1,Math.min(1,(l-c.panCenter)/c.panCenter*n)),h=Math.max(-1,Math.min(1,(p-c.panCenter)/c.panCenter*a));const f=1.414*Math.cos((1+u)*Math.PI*.25),v=1.414*Math.cos((1-u)*Math.PI*.25),y=1.414*Math.cos((1+h)*Math.PI*.25),g=1.414*Math.cos((1-h)*Math.PI*.25),S=r*c.panDelaySecondsMax;let b=t.panDelay,w=t.panDelay;e.isModActive(c.modulators.dictionary["pan delay"].index,s,o)&&(b=e.getModValue(c.modulators.dictionary["pan delay"].index,s,o,!1),w=e.getModValue(c.modulators.dictionary["pan delay"].index,s,o,!0));const F=u*b*S/10,k=h*w*S/10,q=Math.max(0,F),M=Math.max(0,-F),x=Math.max(0,k),z=Math.max(0,-k);this.panningVolumeL=f,this.panningVolumeR=v,this.panningVolumeDeltaL=(y-f)/i,this.panningVolumeDeltaR=(g-v)/i,this.panningOffsetL=this.panningDelayPos-q+e.panningDelayBufferSize,this.panningOffsetR=this.panningDelayPos-M+e.panningDelayBufferSize,this.panningOffsetDeltaL=(x-q)/i,this.panningOffsetDeltaR=(z-M)/i}if(w){const n=d[45],a=m[45];let r=t.chorus,l=t.chorus;e.isModActive(c.modulators.dictionary.chorus.index,s,o)&&(r=e.getModValue(c.modulators.dictionary.chorus.index,s,o,!1),l=e.getModValue(c.modulators.dictionary.chorus.index,s,o,!0));let p=Math.min(1,n*r/(c.chorusRange-1)),u=Math.min(1,a*l/(c.chorusRange-1));p=.6*p+.4*Math.pow(p,6),u=.6*u+.4*Math.pow(u,6);const h=1/Math.sqrt(3*p*p+1),f=1/Math.sqrt(3*u*u+1);this.chorusVoiceMult=p,this.chorusVoiceMultDelta=(u-p)/i,this.chorusCombinedMult=h,this.chorusCombinedMultDelta=(f-h)/i}if(y){let n=t.ringModulation,a=t.ringModulation,r=d[49],l=m[49],p=Math.min(1,t.ringModulationHz/(c.ringModHzRange-1)),u=Math.min(1,t.ringModulationHz/(c.ringModHzRange-1)),h=d[50],f=m[50];e.isModActive(c.modulators.dictionary["ring modulation"].index,s,o)&&(n=e.getModValue(c.modulators.dictionary["ring modulation"].index,s,o,!1),a=e.getModValue(c.modulators.dictionary["ring modulation"].index,s,o,!0)),e.isModActive(c.modulators.dictionary["ring mod hertz"].index,s,o)&&(p=Math.min(1,Math.max(0,e.getModValue(c.modulators.dictionary["ring mod hertz"].index,s,o,!1)/(c.ringModHzRange-1))),u=Math.min(1,Math.max(0,e.getModValue(c.modulators.dictionary["ring mod hertz"].index,s,o,!1)/(c.ringModHzRange-1)))),p*=h,u*=f;let v=Math.min(1,n*r/(c.ringModRange-1)),y=Math.min(1,a*l/(c.ringModRange-1));this.ringModMix=v,this.ringModMixDelta=(y-v)/i,this.ringModHzOffset=t.ringModHzOffset;let g=Math.max(0,D(p))/e.samplesPerSecond,S=Math.max(0,D(u))/e.samplesPerSecond;(p<1/(c.ringModHzRange-1)||u<1/(c.ringModHzRange-1))&&(g*=p*(c.ringModHzRange-1),S*=u*(c.ringModHzRange-1)),this.ringModMixFadeDelta=0,this.ringModMixFade<0&&(this.ringModMixFade=0),g<=0&&S<=0&&0!=this.ringModMixFade?this.ringModMixFadeDelta=this.ringModMixFade/-40:g>0&&S>0&&(this.ringModMixFade=1),this.ringModPhaseDelta=g,this.ringModPhaseDeltaScale=0==g?1:Math.pow(S/g,1/i),this.ringModWaveformIndex=t.ringModWaveformIndex,this.ringModPulseWidth=t.ringModPulseWidth}let R=0,N=0;if(F){const a=d[46],l=m[46];let p=t.echoSustain,u=t.echoSustain;e.isModActive(c.modulators.dictionary.echo.index,s,o)&&(p=Math.max(0,e.getModValue(c.modulators.dictionary.echo.index,s,o,!1)),u=Math.max(0,e.getModValue(c.modulators.dictionary.echo.index,s,o,!0)));const h=.9*Math.min(1,Math.pow(a*p/c.echoSustainRange,1.1)),f=.9*Math.min(1,Math.pow(l*u/c.echoSustainRange,1.1));this.echoMult=h,this.echoMultDelta=Math.max(0,(f-h)/i),R=Math.max(h,f);const v=d[55],y=m[55];let g=t.echoDelay*v,S=t.echoDelay*y;e.isModActive(c.modulators.dictionary["echo delay"].index,s,o)&&(g=e.getModValue(c.modulators.dictionary["echo delay"].index,s,o,!1)*v,S=e.getModValue(c.modulators.dictionary["echo delay"].index,s,o,!0)*y);const b=Math.round((g+1)*c.echoDelayStepTicks*n),w=Math.round((S+1)*c.echoDelayStepTicks*n);null!=this.echoDelayOffsetEnd?this.echoDelayOffsetStart=this.echoDelayOffsetEnd:this.echoDelayOffsetStart=b,this.echoDelayOffsetEnd=w,N=.5*(this.echoDelayOffsetStart+this.echoDelayOffsetEnd)/r,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=1/i;const F=2*Math.PI*c.echoShelfHz/e.samplesPerSecond;Ge.tempFilterStartCoefficients.highShelf1stOrder(F,c.echoShelfGain),this.echoShelfA1=Ge.tempFilterStartCoefficients.a[1],this.echoShelfB0=Ge.tempFilterStartCoefficients.b[0],this.echoShelfB1=Ge.tempFilterStartCoefficients.b[1]}let U=0;if(k){const n=d[47],a=m[47];let r=t.reverb,l=t.reverb;e.isModActive(c.modulators.dictionary.reverb.index,s,o)&&(r=e.getModValue(c.modulators.dictionary.reverb.index,s,o,!1),l=e.getModValue(c.modulators.dictionary.reverb.index,s,o,!0)),e.isModActive(c.modulators.dictionary["song reverb"].index,s,o)&&(r*=(e.getModValue(c.modulators.dictionary["song reverb"].index,void 0,void 0,!1)-c.modulators.dictionary["song reverb"].convertRealFactor)/c.reverbRange,l*=(e.getModValue(c.modulators.dictionary["song reverb"].index,void 0,void 0,!0)-c.modulators.dictionary["song reverb"].convertRealFactor)/c.reverbRange);const p=.425*Math.min(1,Math.pow(n*r/c.reverbRange,.667)),u=.425*Math.min(1,Math.pow(a*l/c.reverbRange,.667));this.reverbMult=p,this.reverbMultDelta=(u-p)/i,U=Math.max(p,u);const h=2*Math.PI*c.reverbShelfHz/e.samplesPerSecond;Ge.tempFilterStartCoefficients.highShelf1stOrder(h,c.reverbShelfGain),this.reverbShelfA1=Ge.tempFilterStartCoefficients.a[1],this.reverbShelfB0=Ge.tempFilterStartCoefficients.b[0],this.reverbShelfB1=Ge.tempFilterStartCoefficients.b[1]}if(this.tonesAddedInThisTick)this.attentuationProgress=0,this.flushedSamples=0,this.flushingDelayLines=!1;else if(this.flushingDelayLines){O=0,L=0,A=0,B=0;let t=0;w&&(t+=e.chorusDelayBufferSize),F&&(t+=this.echoDelayLineL.length),k&&(t+=c.reverbDelayBufferSize),v&&(t+=this.granularMaximumDelayTimeInSeconds),this.flushedSamples+=i,this.flushedSamples>=t&&(this.deactivateAfterThisTick=!0)}else{0==this.attentuationProgress||(O=0),L=0;const e=1/256,t=-Math.log2(e);let i=0;if(w&&(i+=c.chorusMaxDelay),F){const e=Math.pow(R,1/N);i+=-1/Math.log2(e)*t}if(k){const e=2*U,n=c.reverbDelayBufferSize/4/r,a=Math.pow(e,1/n);i+=-1/Math.log2(a)*t}v&&(this.computeGrains=!1);const a=n/r/i,s=this.attentuationProgress+a;s>=1&&(B=0),this.attentuationProgress=s,this.attentuationProgress>=1&&(this.flushingDelayLines=!0)}this.eqFilterVolume=O,this.eqFilterVolumeDelta=(L-O)/i,this.delayInputMult=A,this.delayInputMultDelta=(B-A)/i,this.envelopeComputer.clearEnvelopes()}updateWaves(e,t){if(this.volumeScale=1,0==e.type)this.wave=this.aliases?c.rawChipWaves[e.chipWave].samples:c.chipWaves[e.chipWave].samples,this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(6==e.type)this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(9==e.type)this.wave=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.volumeScale=.05,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(2==e.type)this.wave=v(e.chipNoise,L,C),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(5==e.type)this.wave=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(7==e.type)this.wave=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(3==e.type)this.wave=this.spectrumWave.getCustomWave(e.spectrumWave,8),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(4==e.type){for(let t=0;t<c.drumCount;t++)this.drumsetSpectrumWaves[t].getCustomWave(e.drumsetSpectrumWaves[t],He.ee(t));this.wave=null,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign}else this.wave=null}getDrumsetWave(e){if(4==this.type)return this.drumsetSpectrumWaves[e].wave;throw new Error("Unhandled instrument type in getDrumsetWave")}static drumsetIndexReferenceDelta(e){return Me.frequencyFromPitch(c.spectrumBasePitch+6*e)/44100}static ee(e){return 15+Math.log2(He.drumsetIndexReferenceDelta(e))}}class Pe{constructor(){this.instruments=[],this.muted=!1,this.singleSeamlessInstrument=null}}class Ge{syncSongState(){const e=this.song.getChannelCount();for(let t=this.channels.length;t<e;t++)this.channels[t]=new Pe;this.channels.length=e;for(let t=0;t<e;t++){const e=this.song.channels[t],n=this.channels[t];for(let t=n.instruments.length;t<e.instruments.length;t++)n.instruments[t]=new He;if(n.instruments.length=e.instruments.length,n.muted!=e.muted&&(n.muted=e.muted,n.muted))for(const e of n.instruments)e.resetAllEffects()}}initModFilters(e){if(null!=e){e.tmpEqFilterStart=e.eqFilter,e.tmpEqFilterEnd=null;for(let t=0;t<e.getChannelCount();t++)for(let n=0;n<e.channels[t].instruments.length;n++){const i=e.channels[t].instruments[n];i.tmpEqFilterStart=i.eqFilter,i.tmpEqFilterEnd=null,i.tmpNoteFilterStart=i.noteFilter,i.tmpNoteFilterEnd=null}}}warmUpSynthesizer(e){if(null!=e){this.syncSongState();const t=this.getSamplesPerTick();for(let n=0;n<e.getChannelCount();n++)for(let i=0;i<e.channels[n].instruments.length;i++){const a=e.channels[n].instruments[i],s=this.channels[n].instruments[i];Ge.getInstrumentSynthFunction(a),s.vibratoTime=0,s.nextVibratoTime=0;for(let e=0;e<c.maxEnvelopeCount+1;e++)s.envelopeTime[e]=0;s.arpTime=0,s.updateWaves(a,this.samplesPerSecond),s.allocateNecessaryBuffers(this,a,t)}}var t=new Float32Array(1);this.isPlayingSong=!0,this.synthesize(t,t,1,!0),this.isPlayingSong=!1}computeLatestModValues(){if(null!=this.song&&this.song.modChannelCount>0){let e=[],t=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[],this.heldMods=[];for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++){t[e]=[],this.modInsValues[e]=[],this.nextModInsValues[e]=[];for(let n=0;n<this.song.channels[e].instruments.length;n++)this.modInsValues[e][n]=[],this.nextModInsValues[e][n]=[],t[e][n]=[]}let n=this.beat*c.partsPerBeat+this.part;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++)if(!this.song.channels[i].muted){let a;for(let s=this.bar;s>=0;s--)if(a=this.song.getPattern(i,s),null!=a){let o=a.instruments[0],r=this.song.channels[i].instruments[o],l=[],p=[],u=s==this.bar?n:this.findPartsInBar(s);for(const e of a.notes)if(e.start<=u&&(null==l[c.modCount-1-e.pitches[0]]||e.end>l[c.modCount-1-e.pitches[0]]))if(e.start==u&&(l[c.modCount-1-e.pitches[0]]=e.start,p[c.modCount-1-e.pitches[0]]=e.pins[0].size),e.end<=u)l[c.modCount-1-e.pitches[0]]=e.end,p[c.modCount-1-e.pitches[0]]=e.pins[e.pins.length-1].size;else{l[c.modCount-1-e.pitches[0]]=u;for(let t=0;t<e.pins.length;t++)if(e.pins[t].time+e.start>u){const n=e.pins[t].time-e.pins[t-1].time,i=u-e.start-e.pins[t-1].time,a=e.pins[t].size-e.pins[t-1].size;p[c.modCount-1-e.pitches[0]]=Math.round(e.pins[t-1].size+a*i/n),t=e.pins.length}}for(let n=0;n<c.modCount;n++)if(null!=l[n])if(c.modulators[r.modulators[n]].forSong){const t=r.modulators[n]==c.modulators.dictionary["song eq"].index;if(null==e[r.modulators[n]]||s*c.partsPerBeat*this.song.beatsPerBar+l[n]>e[r.modulators[n]]){if(t){let e=this.song;if(0==r.modFilterTypes[n])e.tmpEqFilterStart=e.eqSubFilters[p[n]];else{for(let t=0;t<c.filterMorphCount;t++)null!=e.tmpEqFilterStart&&e.tmpEqFilterStart==e.eqSubFilters[t]&&(e.tmpEqFilterStart=new ke,e.tmpEqFilterStart.fromJsonObject(e.eqSubFilters[t].toJsonObject()),t=c.filterMorphCount);null!=e.tmpEqFilterStart&&Math.floor((r.modFilterTypes[n]-1)/2)<e.tmpEqFilterStart.controlPointCount&&(r.modFilterTypes[n]%2?e.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].freq=p[n]:e.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].gain=p[n])}e.tmpEqFilterEnd=e.tmpEqFilterStart}this.setModValue(p[n],p[n],r.modChannels[n],r.modInstruments[n],r.modulators[n]),e[r.modulators[n]]=s*c.partsPerBeat*this.song.beatsPerBar+l[n]}}else{let e=[];if(r.modInstruments[n]==this.song.channels[r.modChannels[n]].instruments.length)for(let t=0;t<this.song.channels[r.modChannels[n]].instruments.length;t++)e.push(t);else if(r.modInstruments[n]>this.song.channels[r.modChannels[n]].instruments.length){const t=this.song.getPattern(r.modChannels[n],s);null!=t&&(e=t.instruments)}else e.push(r.modInstruments[n]);for(let i=0;i<e.length;i++){const a=r.modulators[n]==c.modulators.dictionary["eq filter"].index,o=r.modulators[n]==c.modulators.dictionary["note filter"].index;let u=r.modulators[n];if(a?u=c.modulators.length+(0|r.modFilterTypes[n]):o&&(u=c.modulators.length+1+2*c.filterMaxPoints+(0|r.modFilterTypes[n])),null==t[r.modChannels[n]][e[i]][u]||s*c.partsPerBeat*this.song.beatsPerBar+l[n]>t[r.modChannels[n]][e[i]][u]){if(a){let t=this.song.channels[r.modChannels[n]].instruments[e[i]];if(0==r.modFilterTypes[n])t.tmpEqFilterStart=t.eqSubFilters[p[n]];else{for(let e=0;e<c.filterMorphCount;e++)null!=t.tmpEqFilterStart&&t.tmpEqFilterStart==t.eqSubFilters[e]&&(t.tmpEqFilterStart=new ke,t.tmpEqFilterStart.fromJsonObject(t.eqSubFilters[e].toJsonObject()),e=c.filterMorphCount);null!=t.tmpEqFilterStart&&Math.floor((r.modFilterTypes[n]-1)/2)<t.tmpEqFilterStart.controlPointCount&&(r.modFilterTypes[n]%2?t.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].freq=p[n]:t.tmpEqFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].gain=p[n])}t.tmpEqFilterEnd=t.tmpEqFilterStart}else if(o){let t=this.song.channels[r.modChannels[n]].instruments[e[i]];if(0==r.modFilterTypes[n])t.tmpNoteFilterStart=t.noteSubFilters[p[n]];else{for(let e=0;e<c.filterMorphCount;e++)null!=t.tmpNoteFilterStart&&t.tmpNoteFilterStart==t.noteSubFilters[e]&&(t.tmpNoteFilterStart=new ke,t.tmpNoteFilterStart.fromJsonObject(t.noteSubFilters[e].toJsonObject()),e=c.filterMorphCount);null!=t.tmpNoteFilterStart&&Math.floor((r.modFilterTypes[n]-1)/2)<t.tmpNoteFilterStart.controlPointCount&&(r.modFilterTypes[n]%2?t.tmpNoteFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].freq=p[n]:t.tmpNoteFilterStart.controlPoints[Math.floor((r.modFilterTypes[n]-1)/2)].gain=p[n])}t.tmpNoteFilterEnd=t.tmpNoteFilterStart}else this.setModValue(p[n],p[n],r.modChannels[n],e[i],u);t[r.modChannels[n]][e[i]][u]=s*c.partsPerBeat*this.song.beatsPerBar+l[n]}}}}}}}determineInvalidModulators(e){if(null!=this.song)for(let t=0;t<c.modCount;t++){if(e.invalidModulators[t]=!0,-1==e.modChannels[t]){0!=e.modulators[t]&&(e.invalidModulators[t]=!1);continue}const n=this.song.channels[e.modChannels[t]];if(null==n)continue;let i=[];i=e.modInstruments[t]>=n.instruments.length?n.instruments:[n.instruments[e.modInstruments[t]]];for(let n=0;n<i.length;n++){const a=i[n];if(null==a)continue;const s=c.modulators[e.modulators[t]].name;15!=c.modulators[e.modulators[t]].associatedEffect&&!(a.effects&1<<c.modulators[e.modulators[t]].associatedEffect)||1!=a.type&&11!=a.type&&("fm slider 1"==s||"fm slider 2"==s||"fm slider 3"==s||"fm slider 4"==s||"fm feedback"==s)||11!=a.type&&("fm slider 5"==s||"fm slider 6"==s)||6!=a.type&&8!=a.type&&("pulse width"==s||"decimal offset"==s)||8!=a.type&&("dynamism"==s||"spread"==s||"saw shape"==s)||!a.getChord().arpeggiates&&("arp speed"==s||"reset arp"==s)||a.eqFilterType&&"eq filter"==s||!a.eqFilterType&&("eq filt cut"==s||"eq filt peak"==s)||"eq filter"==s&&Math.floor((e.modFilterTypes[t]+1)/2)>a.getLargestControlPointCount(!1)||a.noteFilterType&&"note filter"==s||!a.noteFilterType&&("note filt cut"==s||"note filt peak"==s)||"note filter"==s&&Math.floor((e.modFilterTypes[t]+1)/2)>a.getLargestControlPointCount(!0)||(e.invalidModulators[t]=!1,n=i.length)}}}static operatorAmplitudeCurve(e){return(Math.pow(16,e/15)-1)/15}get playing(){return this.isPlayingSong}get recording(){return this.isRecording}get playhead(){return this.playheadInternal}set playhead(e){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let t=this.playheadInternal;this.bar=Math.floor(t),t=this.song.beatsPerBar*(t-this.bar),this.beat=Math.floor(t),t=c.partsPerBeat*(t-this.beat),this.part=Math.floor(t),t=c.ticksPerPart*(t-this.part),this.tick=Math.floor(t),this.tickSampleCountdown=0,this.isAtStartOfTick=!0,this.prevBar=null}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*c.ticksPerPart*c.partsPerBeat*this.song.beatsPerBar}getTicksIntoBar(){return(this.beat*c.partsPerBeat+this.part)*c.ticksPerPart+this.tick}getCurrentPart(){return this.beat*c.partsPerBeat+this.part}findPartsInBar(e){if(null==this.song)return 0;let t=c.partsPerBeat*this.song.beatsPerBar;for(let n=this.song.pitchChannelCount+this.song.noiseChannelCount;n<this.song.getChannelCount();n++){let i=this.song.getPattern(n,e);if(null!=i){let e=this.song.channels[n].instruments[i.instruments[0]];for(let n=0;n<c.modCount;n++)if(e.modulators[n]==c.modulators.dictionary["next bar"].index)for(const e of i.notes)e.pitches[0]==c.modCount-1-n&&t>e.start&&(t=e.start)}}return t}getTotalSamples(e,t,n){if(null==this.song)return-1;let i=e?0:this.song.loopStart,a=t?this.song.barCount:this.song.loopStart+this.song.loopLength,s=!1,o=!1,r=this.song.tempo;for(let e=this.song.getChannelCount()-1;e>=this.song.pitchChannelCount+this.song.noiseChannelCount;e--)for(let t=i;t<a;t++){let n=this.song.getPattern(e,t);if(null!=n){let t=this.song.channels[e].instruments[n.instruments[0]];for(let e=0;e<c.modCount;e++)t.modulators[e]==c.modulators.dictionary.tempo.index&&(s=!0),t.modulators[e]==c.modulators.dictionary["next bar"].index&&(o=!0)}}if(i>0){let e=null,t=0;for(let n=i-1;n>=0;n--){for(let i=this.song.getChannelCount()-1;i>=this.song.pitchChannelCount+this.song.noiseChannelCount;i--){let a=this.song.getPattern(i,n);if(null!=a){let s=a.instruments[0],o=this.song.channels[i].instruments[s],r=this.findPartsInBar(n);for(const n of a.notes)if(o.modulators[c.modCount-1-n.pitches[0]]==c.modulators.dictionary.tempo.index&&n.start<r&&(null==e||n.end>e))if(n.end<=r)e=n.end,t=n.pins[n.pins.length-1].size;else{e=r;for(let e=0;e<n.pins.length;e++)if(n.pins[e].time+n.start>r){const i=n.pins[e].time-n.pins[e-1].time,a=r-n.start-n.pins[e-1].time,s=n.pins[e].size-n.pins[e-1].size;t=Math.round(n.pins[e-1].size+s*a/i),e=n.pins.length}}}}null!=e&&(r=t+c.modulators.dictionary.tempo.convertRealFactor,n=-1)}}if(s||o){let e=i,t=!1,l=0;for(;!t;){let i=c.partsPerBeat*this.song.beatsPerBar,p=0;if(o&&(i=this.findPartsInBar(e)),s){let t=!1;for(let n=this.song.getChannelCount()-1;n>=this.song.pitchChannelCount+this.song.noiseChannelCount;n--)if(0==t){let a=this.song.getPattern(n,e);if(null!=a){let e=this.song.channels[n].instruments[a.instruments[0]];for(let n=0;n<c.modCount;n++)if(0==t&&e.modulators[n]==c.modulators.dictionary.tempo.index&&a.notes.find((e=>e.pitches[0]==c.modCount-1-n))){t=!0,a.notes.sort((function(e,t){return e.start==t.start?e.pitches[0]-t.pitches[0]:e.start-t.start}));for(const e of a.notes)if(e.pitches[0]==c.modCount-1-n&&(l+=Math.min(i-p,e.start-p)*c.ticksPerPart*this.getSamplesPerTickSpecificBPM(r),e.start<i))for(let t=1;t<e.pins.length;t++){if(e.pins[t-1].time+e.start<=i){const n=c.ticksPerPart*Math.min(i-(e.start+e.pins[t-1].time),e.pins[t].time-e.pins[t-1].time),a=e.pins[t-1].size+c.modulators.dictionary.tempo.convertRealFactor;let s=e.pins[t].size+c.modulators.dictionary.tempo.convertRealFactor;e.pins[t].time+e.start>i&&(s=e.pins[t-1].size+(e.pins[t].size-e.pins[t-1].size)*(i-(e.start+e.pins[t-1].time))/(e.pins[t].time-e.pins[t-1].time)+c.modulators.dictionary.tempo.convertRealFactor);let o=c.partsPerBeat*c.ticksPerPart/60;l+=s!=a?-this.samplesPerSecond*n*(Math.log(o*s*n)-Math.log(o*a*n))/(o*(a-s)):n*this.getSamplesPerTickSpecificBPM(s),r=s}p=Math.min(e.start+e.pins[t].time,i)}}}}}l+=(i-p)*c.ticksPerPart*this.getSamplesPerTickSpecificBPM(r),e++,0!=n&&e==this.song.loopStart+this.song.loopLength&&(e=this.song.loopStart,n>0&&n--),e>=a&&(t=!0)}return Math.ceil(l)}return this.getSamplesPerBar()*this.getTotalBars(e,t,n)}getTotalBars(e,t,n=this.loopRepeatCount){if(null==this.song)throw new Error;let i=this.song.loopLength*(n+1);return e&&(i+=this.song.loopStart),t&&(i+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),i}constructor(e=null){this.samplesPerSecond=44100,this.song=null,this.preferLowerLatency=!1,this.anticipatePoorPerformance=!1,this.liveInputDuration=0,this.liveBassInputDuration=0,this.liveInputStarted=!1,this.liveBassInputStarted=!1,this.liveInputPitches=[],this.liveBassInputPitches=[],this.liveInputChannel=0,this.liveBassInputChannel=0,this.liveInputInstruments=[],this.liveBassInputInstruments=[],this.loopRepeatCount=-1,this.volume=1,this.oscRefreshEventTimer=0,this.oscEnabled=!0,this.enableMetronome=!1,this.countInMetronome=!1,this.renderingSong=!1,this.heldMods=[],this.wantToSkip=!1,this.playheadInternal=0,this.bar=0,this.prevBar=null,this.nextBar=null,this.beat=0,this.part=0,this.tick=0,this.isAtStartOfTick=!0,this.isAtEndOfTick=!0,this.tickSampleCountdown=0,this.modValues=[],this.modInsValues=[],this.nextModValues=[],this.nextModInsValues=[],this.isPlayingSong=!1,this.isRecording=!1,this.liveInputEndTime=0,this.browserAutomaticallyClearsAudioBuffer=!0,this.tempDrumSetControlPoint=new Fe,this.tempFrequencyResponse=new N,this.loopBarStart=-1,this.loopBarEnd=-1,this.channels=[],this.tonePool=new A,this.tempMatchedPitchTones=Array(c.maxChordSize).fill(null),this.startedMetronome=!1,this.metronomeSamplesRemaining=-1,this.metronomeAmplitude=0,this.metronomePrevAmplitude=0,this.metronomeFilter=0,this.limit=0,this.songEqFilterVolume=1,this.songEqFilterVolumeDelta=0,this.songEqFiltersL=[],this.songEqFiltersR=[],this.songEqFilterCount=0,this.initialSongEqFilterInput1L=0,this.initialSongEqFilterInput2L=0,this.initialSongEqFilterInput1R=0,this.initialSongEqFilterInput2R=0,this.tempMonoInstrumentSampleBuffer=null,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=e=>{const t=e.outputBuffer,n=t.getChannelData(0),i=t.getChannelData(1);if(!this.browserAutomaticallyClearsAudioBuffer||0==n[0]&&0==i[0]&&0==n[t.length-1]&&0==i[t.length-1]||(this.browserAutomaticallyClearsAudioBuffer=!1),!this.browserAutomaticallyClearsAudioBuffer){const e=t.length;for(let t=0;t<e;t++)n[t]=0,i[t]=0}!this.isPlayingSong&&performance.now()>=this.liveInputEndTime?this.deactivateAudio():(this.synthesize(n,i,t.length,this.isPlayingSong),this.oscEnabled&&(this.oscRefreshEventTimer<=0?(B.raise("oscilloscopeUpdate",n,i),this.oscRefreshEventTimer=2):this.oscRefreshEventTimer--))},this.computeDelayBufferSizes(),null!=e&&this.setSong(e)}setSong(e){"string"==typeof e?this.song=new ze(e):e instanceof ze&&(this.song=e),this.prevBar=null}computeDelayBufferSizes(){this.panningDelayBufferSize=Ge.fittingPowerOfTwo(this.samplesPerSecond*c.panDelaySecondsMax),this.panningDelayBufferMask=this.panningDelayBufferSize-1,this.chorusDelayBufferSize=Ge.fittingPowerOfTwo(this.samplesPerSecond*c.chorusMaxDelay),this.chorusDelayBufferMask=this.chorusDelayBufferSize-1}activateAudio(){const e=this.anticipatePoorPerformance?this.preferLowerLatency?2048:4096:this.preferLowerLatency?512:2048;if(null==this.audioCtx||null==this.scriptNode||this.scriptNode.bufferSize!=e){null!=this.scriptNode&&this.deactivateAudio();const t=this.anticipatePoorPerformance?this.preferLowerLatency?"balanced":"playback":this.preferLowerLatency?"interactive":"balanced";this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext)({latencyHint:t}),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(e,0,2):this.audioCtx.createJavaScriptNode(e,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination),this.computeDelayBufferSizes()}this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.initModFilters(this.song),this.computeLatestModValues(),this.activateAudio(),this.warmUpSynthesizer(this.song),this.isPlayingSong=!0)}pause(){if(this.isPlayingSong&&(this.isPlayingSong=!1,this.isRecording=!1,this.preferLowerLatency=!1,this.modValues=[],this.nextModValues=[],this.heldMods=[],null!=this.song)){this.song.inVolumeCap=0,this.song.outVolumeCap=0,this.song.tmpEqFilterStart=null,this.song.tmpEqFilterEnd=null;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.modInsValues[e]=[],this.nextModInsValues[e]=[]}}startRecording(){this.preferLowerLatency=!0,this.isRecording=!0,this.play()}resetEffects(){if(this.limit=0,this.freeAllTones(),null!=this.song)for(const e of this.channels)for(const t of e.instruments)t.resetAllEffects()}setModValue(e,t,n,i,a){let s=e+c.modulators[a].convertRealFactor,o=t+c.modulators[a].convertRealFactor;return c.modulators[a].forSong?null!=this.modValues[a]&&this.modValues[a]==s&&this.nextModValues[a]==o||(this.modValues[a]=s,this.nextModValues[a]=o):null!=this.modInsValues[n][i][a]&&this.modInsValues[n][i][a]==s&&this.nextModInsValues[n][i][a]==o||(this.modInsValues[n][i][a]=s,this.nextModInsValues[n][i][a]=o),s}getModValue(e,t,n,i){if(c.modulators[e].forSong){if(null!=this.modValues[e]&&null!=this.nextModValues[e])return i?this.nextModValues[e]:this.modValues[e]}else if(null!=t&&null!=n&&null!=this.modInsValues[t][n][e]&&null!=this.nextModInsValues[t][n][e])return i?this.nextModInsValues[t][n][e]:this.modInsValues[t][n][e];return-1}isAnyModActive(e,t){for(let n=0;n<c.modulators.length;n++)if(null!=this.modValues&&null!=this.modValues[n]||null!=this.modInsValues&&null!=this.modInsValues[e]&&null!=this.modInsValues[e][t]&&null!=this.modInsValues[e][t][n])return!0;return!1}unsetMod(e,t,n){if(this.isModActive(e)||null!=t&&null!=n&&this.isModActive(e,t,n)){this.modValues[e]=null,this.nextModValues[e]=null;for(let i=0;i<this.heldMods.length;i++)null!=t&&null!=n?this.heldMods[i].channelIndex==t&&this.heldMods[i].instrumentIndex==n&&this.heldMods[i].setting==e&&this.heldMods.splice(i,1):this.heldMods[i].setting==e&&this.heldMods.splice(i,1);null!=t&&null!=n&&(this.modInsValues[t][n][e]=null,this.nextModInsValues[t][n][e]=null)}}isFilterModActive(e,t,n,i){var a;const s=this.song.channels[t].instruments[n];if(e){if(s.noteFilterType)return!1;if(null!=s.tmpNoteFilterEnd)return!0}else if(i){if(null!=(null===(a=null==this?void 0:this.song)||void 0===a?void 0:a.tmpEqFilterEnd))return!0}else{if(s.eqFilterType)return!1;if(null!=s.tmpEqFilterEnd)return!0}return!1}isModActive(e,t,n){return c.modulators[e].forSong?null!=this.modValues&&null!=this.modValues[e]:null!=t&&null!=n&&null!=this.modInsValues&&null!=this.modInsValues[t]&&null!=this.modInsValues[t][n]&&null!=this.modInsValues[t][n][e]}forceHoldMods(e,t,n,i){let a=!1;for(let s=0;s<this.heldMods.length;s++)this.heldMods[s].channelIndex==t&&this.heldMods[s].instrumentIndex==n&&this.heldMods[s].setting==i&&(this.heldMods[s].volume=e,this.heldMods[s].holdFor=24,a=!0);a||this.heldMods.push({volume:e,channelIndex:t,instrumentIndex:n,setting:i,holdFor:24})}snapToStart(){this.bar=0,this.resetEffects(),this.snapToBar()}goToBar(e){this.bar=e,this.resetEffects(),this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const e=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}}goToNextBar(){if(!this.song)return;this.prevBar=this.bar;const e=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}goToPrevBar(){if(!this.song)return;this.prevBar=null;const e=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}getNextBar(){let e=this.bar+1;return this.isRecording?e>=this.song.barCount&&(e=this.song.barCount-1):this.bar!=this.loopBarEnd||this.renderingSong?0!=this.loopRepeatCount&&e==Math.max(this.loopBarEnd+1,this.song.loopStart+this.song.loopLength)&&(e=this.song.loopStart):e=this.loopBarStart,e}skipBar(){if(!this.song)return;const e=this.getSamplesPerTick();this.prevBar=this.bar,this.loopBarEnd!=this.bar?this.bar++:this.bar=this.loopBarStart,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=e,this.isAtStartOfTick=!0,0!=this.loopRepeatCount&&this.bar==Math.max(this.song.loopStart+this.song.loopLength,this.loopBarEnd)&&(this.bar=this.song.loopStart,-1!=this.loopBarStart&&(this.bar=this.loopBarStart),this.loopRepeatCount>0&&this.loopRepeatCount--)}computeSongState(e){if(null==this.song)return;const t=Math.ceil(e),n=this.samplesPerSecond;let i=1;if(this.song.eqFilterType){const e=this.song.eqFilter;null==this.song.eqSubFilters[1]&&(this.song.eqSubFilters[1]=new ke),this.song.eqSubFilters[1];let a,s=this.song.eqFilterSimpleCut,o=this.song.eqFilterSimplePeak;this.song.eqFilterSimpleCut,this.song.eqFilterSimplePeak,e.convertLegacySettingsForSynth(s,o,!0),a=e.controlPoints[0],a.toCoefficients(Ge.tempFilterStartCoefficients,n,1,1),this.songEqFiltersL.length<1&&(this.songEqFiltersL[0]=new V),this.songEqFiltersL[0].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterStartCoefficients,1/t,0==a.type),this.songEqFiltersR.length<1&&(this.songEqFiltersR[0]=new V),this.songEqFiltersR[0].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterStartCoefficients,1/t,0==a.type),i*=a.getVolumeCompensationMult(),this.songEqFilterCount=1,i=Math.min(3,i)}else{const e=null!=this.song.tmpEqFilterStart?this.song.tmpEqFilterStart:this.song.eqFilter;for(let a=0;a<e.controlPointCount;a++){let s=e.controlPoints[a],o=null!=this.song.tmpEqFilterEnd&&null!=this.song.tmpEqFilterEnd.controlPoints[a]?this.song.tmpEqFilterEnd.controlPoints[a]:e.controlPoints[a];s.type!=o.type&&(s=o),s.toCoefficients(Ge.tempFilterStartCoefficients,n,1,1),o.toCoefficients(Ge.tempFilterEndCoefficients,n,1,1),this.songEqFiltersL.length<=a&&(this.songEqFiltersL[a]=new V),this.songEqFiltersL[a].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterEndCoefficients,1/t,0==s.type),this.songEqFiltersR.length<=a&&(this.songEqFiltersR[a]=new V),this.songEqFiltersR[a].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterEndCoefficients,1/t,0==s.type),i*=s.getVolumeCompensationMult()}this.songEqFilterCount=e.controlPointCount,i=Math.min(3,i)}let a=i,s=i;this.songEqFilterVolume=a,this.songEqFilterVolumeDelta=(s-a)/t}synthesize(e,t,n,i=!0){if(null==this.song){for(let i=0;i<n;i++)e[i]=0,t[i]=0;return void this.deactivateAudio()}const a=e.slice(),s=t.slice(),o=this.song;this.song.inVolumeCap=0,this.song.outVolumeCap=0;let r=this.getSamplesPerTick(),l=!1;(this.tickSampleCountdown<=0||this.tickSampleCountdown>r)&&(this.tickSampleCountdown=r,this.isAtStartOfTick=!0),i&&(this.beat>=o.beatsPerBar&&(this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=r,this.isAtStartOfTick=!0,this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=o.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(l=!0,this.pause()))),this.syncSongState(),(null==this.tempMonoInstrumentSampleBuffer||this.tempMonoInstrumentSampleBuffer.length<n)&&(this.tempMonoInstrumentSampleBuffer=new Float32Array(n));const p=+this.volume,u=1-Math.pow(.5,this.song.limitDecay/this.samplesPerSecond),h=1-Math.pow(.5,this.song.limitRise/this.samplesPerSecond);let f=+this.limit,d=[],m=-1,v=0;for(;v<n&&!l;){this.nextBar=this.getNextBar(),this.nextBar>=o.barCount&&(this.nextBar=null);const y=n-v,g=Math.ceil(this.tickSampleCountdown),S=Math.min(g,y),b=v+S;if(this.isPlayingSong||this.renderingSong){for(let e=o.pitchChannelCount+o.noiseChannelCount;e<o.getChannelCount();e++){const t=o.channels[e],n=this.channels[e];this.determineCurrentActiveTones(o,e,r,i);for(let i=0;i<t.instruments.length;i++){const t=n.instruments[i];for(let n=0;n<t.activeModTones.count();n++){const i=t.activeModTones.get(n),a=o.channels[e].instruments[i.instrumentIndex];let s=c.modCount-1-i.pitches[0];(a.modulators[s]==c.modulators.dictionary["note filter"].index||a.modulators[s]==c.modulators.dictionary["eq filter"].index||a.modulators[s]==c.modulators.dictionary["song eq"].index)&&null!=a.modFilterTypes[s]&&a.modFilterTypes[s]>0||this.playModTone(o,e,r,v,S,i,!1,!1)}}}for(let e=o.pitchChannelCount+o.noiseChannelCount;e<o.getChannelCount();e++){const t=o.channels[e],n=this.channels[e];for(let i=0;i<t.instruments.length;i++){const t=n.instruments[i];for(let n=0;n<t.activeModTones.count();n++){const i=t.activeModTones.get(n),a=o.channels[e].instruments[i.instrumentIndex];let s=c.modCount-1-i.pitches[0];(a.modulators[s]==c.modulators.dictionary["note filter"].index||a.modulators[s]==c.modulators.dictionary["eq filter"].index||a.modulators[s]==c.modulators.dictionary["song eq"].index)&&null!=a.modFilterTypes[s]&&a.modFilterTypes[s]>0&&this.playModTone(o,e,r,v,S,i,!1,!1)}}}}if(this.wantToSkip){let e=d.includes(this.bar);if(e&&v==m)return void this.pause();-1==m&&(m=v),e||d.push(this.bar),this.wantToSkip=!1,this.skipBar();continue}this.computeSongState(r);for(let n=0;n<o.pitchChannelCount+o.noiseChannelCount;n++){const a=o.channels[n],s=this.channels[n];this.isAtStartOfTick&&(this.determineCurrentActiveTones(o,n,r,i&&!this.countInMetronome),this.determineLiveInputTones(o,n,r));for(let i=0;i<a.instruments.length;i++){const l=a.instruments[i],p=s.instruments[i];if(this.isAtStartOfTick){let e=p.activeTones.count()+p.liveInputTones.count();for(let t=0;t<p.releasedTones.count();t++){const i=p.releasedTones.get(t);if(i.ticksSinceReleased>=Math.abs(l.getFadeOutTicks())){this.freeReleasedTone(p,t),t--;continue}const a=e>=c.maximumTonesPerChannel;this.computeTone(o,n,r,i,!0,a),e++}p.awake&&(p.computed||p.compute(this,l,r,Math.ceil(r),null,n,i),p.computed=!1,p.envelopeComputer.clearEnvelopes())}for(let e=0;e<p.activeTones.count();e++){const t=p.activeTones.get(e);this.playTone(n,v,S,t)}for(let e=0;e<p.liveInputTones.count();e++){const t=p.liveInputTones.get(e);this.playTone(n,v,S,t)}for(let e=0;e<p.releasedTones.count();e++){const t=p.releasedTones.get(e);this.playTone(n,v,S,t)}p.awake&&Ge.effectsSynth(this,e,t,v,S,p);const u=this.tickSampleCountdown,h=1-u/r,f=1-(u-S)/r,d=(this.beat*c.partsPerBeat+this.part)*c.ticksPerPart+this.tick,m=d/c.ticksPerPart,y=(d+1)/c.ticksPerPart,g=m+(y-m)*h,b=m+(y-m)*f;let w=l.vibratoSpeed;p.vibratoTime=p.nextVibratoTime,this.isModActive(c.modulators.dictionary["vibrato speed"].index,n,i)&&(w=this.getModValue(c.modulators.dictionary["vibrato speed"].index,n,i)),0==w?(p.vibratoTime=0,p.nextVibratoTime=0):p.nextVibratoTime+=.1*w*(b-g)}}if(this.enableMetronome||this.countInMetronome)if(0==this.part){if(!this.startedMetronome){const e=o.beatsPerBar>4&&o.beatsPerBar%2==0&&this.beat==o.beatsPerBar/2,t=0==this.beat?8:e?6:4,n=0==this.beat?1600:e?1200:800,i=0==this.beat?.06:e?.05:.04,a=this.samplesPerSecond/n,s=2*Math.PI/a;this.metronomeSamplesRemaining=Math.floor(a*t),this.metronomeFilter=2*Math.cos(s),this.metronomeAmplitude=i*Math.sin(s),this.metronomePrevAmplitude=0,this.startedMetronome=!0}if(this.metronomeSamplesRemaining>0){const e=Math.min(b,v+this.metronomeSamplesRemaining);this.metronomeSamplesRemaining-=e-v;for(let t=v;t<e;t++){a[t]+=this.metronomeAmplitude,s[t]+=this.metronomeAmplitude;const e=this.metronomeFilter*this.metronomeAmplitude-this.metronomePrevAmplitude;this.metronomePrevAmplitude=this.metronomeAmplitude,this.metronomeAmplitude=e}}}else this.startedMetronome=!1;for(let n=v;n<b;n++){{let i=this.songEqFiltersL,a=this.songEqFiltersR;const s=0|this.songEqFilterCount;let o=+this.initialSongEqFilterInput1L,r=+this.initialSongEqFilterInput2L,l=+this.initialSongEqFilterInput1R,p=+this.initialSongEqFilterInput2R;const u=Ge.applyFilters;let c=+this.songEqFilterVolume;const h=+this.songEqFilterVolumeDelta,f=e[n];let d=f;d=u(d,o,r,s,i),r=o,o=f,d*=c,e[n]=d;const m=t[n];let v=m;v=u(v,l,p,s,a),p=l,l=m,v*=c,t[n]=v,c+=h,this.sanitizeFilters(i),o<100&&r<100||(o=0,r=0),Math.abs(o)<Z&&(o=0),Math.abs(r)<Z&&(r=0),this.initialSongEqFilterInput1L=o,this.initialSongEqFilterInput2L=r,this.sanitizeFilters(a),l<100&&p<100||(l=0,p=0),Math.abs(l)<Z&&(l=0),Math.abs(p)<Z&&(p=0),this.initialSongEqFilterInput1R=l,this.initialSongEqFilterInput2R=p}const i=(e[n]+a[n])*o.masterGain*o.masterGain,r=(t[n]+s[n])*o.masterGain*o.masterGain,l=i<0?-i:i,c=r<0?-r:r,d=l>c?l:c;this.song.inVolumeCap=this.song.inVolumeCap>d?this.song.inVolumeCap:d;const m=+(d>o.compressionThreshold)+ +(d>o.limitThreshold),v=+(0==m)*((.8*(d+1-o.compressionThreshold)+.25)*o.compressionRatio+1.05*(1-o.compressionRatio))+1.05*+(1==m)+ +(2==m)*(1.05*((d+1-o.limitThreshold)*o.limitRatio+(1-o.limitThreshold)));f+=(v-f)*(f<v?h:u);const y=p/(f>=1?1.05*f:.8*f+.25);e[n]=i*y,t[n]=r*y,this.song.outVolumeCap=this.song.outVolumeCap>d*y?this.song.outVolumeCap:d*y}if(v+=S,this.isAtStartOfTick=!1,this.tickSampleCountdown-=S,this.tickSampleCountdown<=0){this.isAtStartOfTick=!0;for(const e of this.channels)for(const t of e.instruments){for(let e=0;e<t.releasedTones.count();e++){const n=t.releasedTones.get(e);n.isOnLastTick?(this.freeReleasedTone(t,e),e--):n.ticksSinceReleased++}t.deactivateAfterThisTick&&t.deactivate(),t.tonesAddedInThisTick=!1}const e=this.getTicksIntoBar(),t=r/this.samplesPerSecond,n=this.getCurrentPart();for(let i=0;i<this.song.pitchChannelCount+this.song.noiseChannelCount;i++)for(let a=0;a<this.song.channels[i].instruments.length;a++){let s=this.song.channels[i].instruments[a],o=this.channels[i].instruments[a];const r=o.envelopeComputer,l=[];for(let e=0;e<c.maxEnvelopeCount;e++)l[e]=0;for(let e=0;e<s.envelopeCount;e++){let t=s.envelopeSpeed,n=s.envelopes[e].perEnvelopeSpeed;this.isModActive(c.modulators.dictionary["individual envelope speed"].index,i,a)&&null!=s.envelopes[e].tempEnvelopeSpeed&&(n=s.envelopes[e].tempEnvelopeSpeed),this.isModActive(c.modulators.dictionary["envelope speed"].index,i,a)?(t=Math.max(0,Math.min(c.arpSpeedScale.length-1,this.getModValue(c.modulators.dictionary["envelope speed"].index,i,a,!1))),Number.isInteger(t)?o.envelopeTime[e]+=c.arpSpeedScale[t]*n:o.envelopeTime[e]+=((1-t%1)*c.arpSpeedScale[Math.floor(t)]+t%1*c.arpSpeedScale[Math.ceil(t)])*n):o.envelopeTime[e]+=c.arpSpeedScale[t]*n}if(o.activeTones.count()>0){const p=o.activeTones.get(0);r.computeEnvelopes(s,n,o.envelopeTime,e,t,p,l,o,this,i,a)}const p=r.envelopeStarts[48];let u=s.arpeggioSpeed;this.isModActive(c.modulators.dictionary["arp speed"].index,i,a)?(u=X(0,c.arpSpeedScale.length,p*this.getModValue(c.modulators.dictionary["arp speed"].index,i,a,!1)),Number.isInteger(u)?o.arpTime+=c.arpSpeedScale[u]:o.arpTime+=(1-u%1)*c.arpSpeedScale[Math.floor(u)]+u%1*c.arpSpeedScale[Math.ceil(u)]):(u=X(0,c.arpSpeedScale.length,p*u),Number.isInteger(u)?o.arpTime+=c.arpSpeedScale[u]:o.arpTime+=(1-u%1)*c.arpSpeedScale[Math.floor(u)]+u%1*c.arpSpeedScale[Math.ceil(u)]),r.clearEnvelopes()}for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.song.channels[e].instruments.length;t++){let n=this.song.channels[e].instruments[t];null!=n.tmpEqFilterEnd?n.tmpEqFilterStart=n.tmpEqFilterEnd:n.tmpEqFilterStart=n.eqFilter,null!=n.tmpNoteFilterEnd?n.tmpNoteFilterStart=n.tmpNoteFilterEnd:n.tmpNoteFilterStart=n.noteFilter}if(null!=o.tmpEqFilterEnd?o.tmpEqFilterStart=o.tmpEqFilterEnd:o.tmpEqFilterStart=o.eqFilter,this.tick++,this.tickSampleCountdown+=r,this.tick==c.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--,this.liveBassInputDuration--;for(let e=0;e<this.heldMods.length;e++)this.heldMods[e].holdFor--,this.heldMods[e].holdFor<=0&&this.heldMods.splice(e,1);this.part==c.partsPerBeat&&(this.part=0,i&&(this.beat++,this.beat==o.beatsPerBar&&(this.beat=0,this.countInMetronome?this.countInMetronome=!1:(this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--,this.bar>=o.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(l=!0,this.resetEffects(),this.pause()))))))}}for(let e=0;e<c.modulators.length;e++)null!=this.nextModValues&&null!=this.nextModValues[e]&&(this.modValues[e]=this.nextModValues[e]);this.isModActive(c.modulators.dictionary.tempo.index)&&(r=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,r));for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.channels[e].instruments.length;t++){const n=this.channels[e].instruments[t],i=this.song.channels[e].instruments[t];n.nextVibratoTime=n.nextVibratoTime%(c.vibratoTypes[i.vibratoType].period/(c.ticksPerPart*r/this.samplesPerSecond)),n.arpTime=n.arpTime%(2520*c.ticksPerArpeggio);for(let e=0;e<i.envelopeCount;e++)n.envelopeTime[e]=n.envelopeTime[e]%(c.partsPerBeat*c.ticksPerPart*this.song.beatsPerBar)}const w=this.song.getMaxInstrumentsPerChannel();for(let e=0;e<c.modulators.length;e++)for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++)for(let n=0;n<w;n++)null!=this.nextModInsValues&&null!=this.nextModInsValues[t]&&null!=this.nextModInsValues[t][n]&&null!=this.nextModInsValues[t][n][e]&&(this.modInsValues[t][n][e]=this.nextModInsValues[t][n][e])}(!Number.isFinite(f)||Math.abs(f)<Z)&&(f=0),this.limit=f,i&&!this.countInMetronome&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/r)/2+this.part)/c.partsPerBeat+this.beat)/o.beatsPerBar+this.bar)}freeTone(e){this.tonePool.pushBack(e)}newTone(){if(this.tonePool.count()>0){const e=this.tonePool.popBack();return e.freshlyAllocated=!0,e}return new Ee}releaseTone(e,t){e.releasedTones.pushFront(t),t.atNoteStart=!1,t.passedEndOfNote=!0}freeReleasedTone(e,t){this.freeTone(e.releasedTones.get(t)),e.releasedTones.remove(t)}freeAllTones(){for(const e of this.channels)for(const t of e.instruments){for(;t.activeTones.count()>0;)this.freeTone(t.activeTones.popBack());for(;t.activeModTones.count()>0;)this.freeTone(t.activeModTones.popBack());for(;t.releasedTones.count()>0;)this.freeTone(t.releasedTones.popBack());for(;t.liveInputTones.count()>0;)this.freeTone(t.liveInputTones.popBack())}}determineLiveInputTones(e,t,n){const i=e.channels[t],a=this.channels[t],s=this.liveInputPitches,o=this.liveBassInputPitches;(this.liveInputPitches.length>0||this.liveBassInputPitches.length>0)&&this.computeLatestModValues();for(let r=0;r<i.instruments.length;r++){const l=a.instruments[r],p=l.liveInputTones;let u=0;if(this.liveInputDuration>0&&t==this.liveInputChannel&&s.length>0&&-1!=this.liveInputInstruments.indexOf(r)){const a=i.instruments[r];if(a.getChord().singleTone){let i;p.count()<=u?(i=this.newTone(),p.pushBack(i)):!a.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(l,p.get(u)),i=this.newTone(),p.set(u,i)):i=p.get(u),u++;for(let e=0;e<s.length;e++)i.pitches[e]=s[e];i.pitchCount=s.length,i.chordSize=1,i.instrumentIndex=r,i.note=i.prevNote=i.nextNote=null,i.atNoteStart=this.liveInputStarted,i.forceContinueAtStart=!1,i.forceContinueAtEnd=!1,this.computeTone(e,t,n,i,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(p,s);for(let i=0;i<s.length;i++){let a;null!=this.tempMatchedPitchTones[u]?(a=this.tempMatchedPitchTones[u],this.tempMatchedPitchTones[u]=null,1==a.pitchCount&&a.pitches[0]==s[i]||(this.releaseTone(l,a),a=this.newTone()),p.pushBack(a)):(a=this.newTone(),p.pushBack(a)),u++,a.pitches[0]=s[i],a.pitchCount=1,a.chordSize=s.length,a.instrumentIndex=r,a.note=a.prevNote=a.nextNote=null,a.atNoteStart=this.liveInputStarted,a.forceContinueAtStart=!1,a.forceContinueAtEnd=!1,this.computeTone(e,t,n,a,!1,!1)}}}if(this.liveBassInputDuration>0&&t==this.liveBassInputChannel&&o.length>0&&-1!=this.liveBassInputInstruments.indexOf(r)){const a=i.instruments[r];if(a.getChord().singleTone){let i;p.count()<=u?(i=this.newTone(),p.pushBack(i)):!a.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(l,p.get(u)),i=this.newTone(),p.set(u,i)):i=p.get(u),u++;for(let e=0;e<o.length;e++)i.pitches[e]=o[e];i.pitchCount=o.length,i.chordSize=1,i.instrumentIndex=r,i.note=i.prevNote=i.nextNote=null,i.atNoteStart=this.liveBassInputStarted,i.forceContinueAtStart=!1,i.forceContinueAtEnd=!1,this.computeTone(e,t,n,i,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(p,o);for(let i=0;i<o.length;i++){let a;null!=this.tempMatchedPitchTones[u]?(a=this.tempMatchedPitchTones[u],this.tempMatchedPitchTones[u]=null,1==a.pitchCount&&a.pitches[0]==o[i]||(this.releaseTone(l,a),a=this.newTone()),p.pushBack(a)):(a=this.newTone(),p.pushBack(a)),u++,a.pitches[0]=o[i],a.pitchCount=1,a.chordSize=o.length,a.instrumentIndex=r,a.note=a.prevNote=a.nextNote=null,a.atNoteStart=this.liveBassInputStarted,a.forceContinueAtStart=!1,a.forceContinueAtEnd=!1,this.computeTone(e,t,n,a,!1,!1)}}}for(;p.count()>u;)this.releaseTone(l,p.popBack());this.clearTempMatchedPitchTones(u,l)}this.liveInputStarted=!1,this.liveBassInputStarted=!1}adjacentPatternHasCompatibleInstrumentTransition(e,t,n,i,a,s,o,r,l,p){if(e.patternInstruments&&-1==i.instruments.indexOf(a)){if(n.instruments.length>1||i.instruments.length>1)return null;const e=t.instruments[i.instruments[0]];if(p)return e.getChord();const a=e.getTransition();return s.includeAdjacentPatterns&&a.includeAdjacentPatterns&&a.slides==s.slides?e.getChord():null}return p||s.includeAdjacentPatterns?o:null}static adjacentNotesHaveMatchingPitches(e,t){if(e.pitches.length!=t.pitches.length)return!1;const n=e.pins[e.pins.length-1].interval;for(const i of e.pitches)if(-1==t.pitches.indexOf(i+n))return!1;return!0}moveTonesIntoOrderedTempMatchedList(e,t){for(let n=0;n<e.count();n++){const i=e.get(n),a=i.pitches[0]+i.lastInterval;for(let s=0;s<t.length;s++)if(t[s]==a){this.tempMatchedPitchTones[s]=i,e.remove(n),n--;break}}for(;e.count()>0;){const t=e.popFront();for(let e=0;e<this.tempMatchedPitchTones.length;e++)if(null==this.tempMatchedPitchTones[e]){this.tempMatchedPitchTones[e]=t;break}}}determineCurrentActiveTones(e,t,n,i){const a=e.channels[t],s=this.channels[t],o=e.getPattern(t,this.bar),r=this.getCurrentPart(),l=this.tick+c.ticksPerPart*r;if(i&&e.getChannelIsMod(t)){let n=[],i=[],p=[],u=c.modCount;for(;u--;)n.push(null),i.push(null),p.push(null);if(null!=o&&!a.muted)for(let e=0;e<o.notes.length;e++)o.notes[e].end<=r?(null==i[o.notes[e].pitches[0]]||o.notes[e].end>i[o.notes[e].pitches[0]].start)&&(i[o.notes[e].pitches[0]]=o.notes[e]):o.notes[e].start<=r&&o.notes[e].end>r?n[o.notes[e].pitches[0]]=o.notes[e]:o.notes[e].start>r&&(null==p[o.notes[e].pitches[0]]||o.notes[e].start<p[o.notes[e].pitches[0]].start)&&(p[o.notes[e].pitches[0]]=o.notes[e]);let h=0;const f=e.patternInstruments&&null!=o?o.instruments[0]:0,d=s.instruments[f],m=d.activeModTones;for(let e=0;e<c.modCount;e++){if(null!=n[e]&&(null!=i[e]&&i[e].end!=n[e].start&&(i[e]=null),null!=p[e]&&p[e].start!=n[e].end&&(p[e]=null)),null!=s.singleSeamlessInstrument&&s.singleSeamlessInstrument!=f&&s.singleSeamlessInstrument<s.instruments.length){const e=s.instruments[s.singleSeamlessInstrument],t=s.instruments[f];for(;e.activeModTones.count()>0;)t.activeModTones.pushFront(e.activeModTones.popBack())}if(s.singleSeamlessInstrument=f,null!=n[e]){let t=i[e],a=p[e],s=!1,o=!1;const r=c.ticksPerPart*n[e].start==l&&this.isAtStartOfTick;let u;if(m.count()<=h)u=this.newTone(),m.pushBack(u);else if(r&&null==t){const e=m.get(h);e.isOnLastTick?this.freeTone(e):this.releaseTone(d,e),u=this.newTone(),m.set(h,u)}else u=m.get(h);h++;for(let t=0;t<n[e].pitches.length;t++)u.pitches[t]=n[e].pitches[t];u.pitchCount=n[e].pitches.length,u.chordSize=1,u.instrumentIndex=f,u.note=n[e],u.noteStartPart=n[e].start,u.noteEndPart=n[e].end,u.prevNote=t,u.nextNote=a,u.prevNotePitchIndex=0,u.nextNotePitchIndex=0,u.atNoteStart=r,u.passedEndOfNote=!1,u.forceContinueAtStart=s,u.forceContinueAtEnd=o}}for(;m.count()>h;){const n=m.popBack(),i=e.channels[t];if(n.instrumentIndex<i.instruments.length&&!n.isOnLastTick){const e=this.channels[t].instruments[n.instrumentIndex];this.releaseTone(e,n)}else this.freeTone(n)}}else if(!e.getChannelIsMod(t)){let p=null,u=null,h=null;if(i&&null!=o&&!a.muted&&(!this.isRecording||this.liveInputChannel!=t)){for(let e=0;e<o.notes.length;e++)if(o.notes[e].end<=r)u=o.notes[e];else if(o.notes[e].start<=r&&o.notes[e].end>r)p=o.notes[e];else if(o.notes[e].start>r){h=o.notes[e];break}null!=p&&(null!=u&&u.end!=p.start&&(u=null),null!=h&&h.start!=p.end&&(h=null))}if(null!=o&&(!e.layeredInstruments||1==a.instruments.length||e.patternInstruments&&1==o.instruments.length)){const t=e.patternInstruments?o.instruments[0]:0;if(null!=s.singleSeamlessInstrument&&s.singleSeamlessInstrument!=t&&s.singleSeamlessInstrument<s.instruments.length){const e=s.instruments[s.singleSeamlessInstrument],n=s.instruments[t];for(;e.activeTones.count()>0;)n.activeTones.pushFront(e.activeTones.popBack())}s.singleSeamlessInstrument=t}else s.singleSeamlessInstrument=null;for(let i=0;i<a.instruments.length;i++){const f=s.instruments[i],d=f.activeTones;let m=0;if(null!=p&&(!e.patternInstruments||-1!=o.instruments.indexOf(i))){const s=a.instruments[i];let v=u,y=h;const g=c.partsPerBeat*e.beatsPerBar,S=s.getTransition(),b=s.getChord();let w=!1,F=!1,k=0,q=0;if(0==p.start){let n=null==this.prevBar?null:e.getPattern(t,this.prevBar);if(null!=n){const t=n.notes.length<=0?null:n.notes[n.notes.length-1];if(null!=t&&t.end==g){const s=p.continuesLastPattern&&Ge.adjacentNotesHaveMatchingPitches(t,p),r=this.adjacentPatternHasCompatibleInstrumentTransition(e,a,o,n,i,S,b,p,t,s);null!=r&&(v=t,k=r.singleTone?1:v.pitches.length,w=s)}}}else null!=v&&(k=b.singleTone?1:v.pitches.length);if(p.end==g){let n=null==this.nextBar?null:e.getPattern(t,this.nextBar);if(null!=n){const t=n.notes.length<=0?null:n.notes[0];if(null!=t&&0==t.start){const s=t.continuesLastPattern&&Ge.adjacentNotesHaveMatchingPitches(p,t),r=this.adjacentPatternHasCompatibleInstrumentTransition(e,a,o,n,i,S,b,p,t,s);null!=r&&(y=t,q=r.singleTone?1:y.pitches.length,F=s)}}}else null!=y&&(q=b.singleTone?1:y.pitches.length);if(b.singleTone){const a=c.ticksPerPart*p.start==l;let o;if(d.count()<=m)o=this.newTone(),d.pushBack(o);else if(!a||(S.isSeamless||s.clicklessTransition||w)&&null!=v)o=d.get(m);else{const e=d.get(m);e.isOnLastTick?this.freeTone(e):this.releaseTone(f,e),o=this.newTone(),d.set(m,o)}m++;for(let e=0;e<p.pitches.length;e++)o.pitches[e]=p.pitches[e];o.pitchCount=p.pitches.length,o.chordSize=1,o.instrumentIndex=i,o.note=p,o.noteStartPart=p.start,o.noteEndPart=p.end,o.prevNote=v,o.nextNote=y,o.prevNotePitchIndex=0,o.nextNotePitchIndex=0,o.atNoteStart=a,o.passedEndOfNote=!1,o.forceContinueAtStart=w,o.forceContinueAtEnd=F,this.computeTone(e,t,n,o,!1,!1)}else{const a=s.getTransition();(a.isSeamless&&!a.slides&&0==b.strumParts||w)&&c.ticksPerPart*p.start==l&&null!=v&&this.moveTonesIntoOrderedTempMatchedList(d,p.pitches);let o=0;for(let s=0;s<p.pitches.length;s++){let u=k>s?v:null,h=p,g=q>s?y:null,S=h.start+o,M=!1;if(S>r){if(!(d.count()>s&&(a.isSeamless||w)&&null!=u))break;g=h,h=u,u=null,S=h.start+o,M=!0}let x=h.end;(a.isSeamless||w)&&null!=g&&(x=Math.min(c.partsPerBeat*this.song.beatsPerBar,x+o)),(a.continues||w)&&null!=u||(o+=b.strumParts);const z=c.ticksPerPart*S==l;let T;if(null!=this.tempMatchedPitchTones[m])T=this.tempMatchedPitchTones[m],this.tempMatchedPitchTones[m]=null,d.pushBack(T);else if(d.count()<=m)T=this.newTone(),d.pushBack(T);else if(!z||(a.isSeamless||w)&&null!=u)T=d.get(m);else{const e=d.get(m);e.isOnLastTick?this.freeTone(e):this.releaseTone(f,e),T=this.newTone(),d.set(m,T)}m++,T.pitches[0]=h.pitches[s],T.pitchCount=1,T.chordSize=h.pitches.length,T.instrumentIndex=i,T.note=h,T.noteStartPart=S,T.noteEndPart=x,T.prevNote=u,T.nextNote=g,T.prevNotePitchIndex=s,T.nextNotePitchIndex=s,T.atNoteStart=z,T.passedEndOfNote=M,T.forceContinueAtStart=w&&null!=u,T.forceContinueAtEnd=F&&null!=g,this.computeTone(e,t,n,T,!1,!1)}}(S.continues&&d.count()<=0||p.pitches.length<=0)&&f.envelopeComputer.reset()}for(;d.count()>m;){const n=d.popBack(),i=e.channels[t];if(n.instrumentIndex<i.instruments.length&&!n.isOnLastTick){const e=s.instruments[n.instrumentIndex];this.releaseTone(e,n)}else this.freeTone(n)}this.clearTempMatchedPitchTones(m,f)}}}clearTempMatchedPitchTones(e,t){for(let n=e;n<this.tempMatchedPitchTones.length;n++){const e=this.tempMatchedPitchTones[n];null!=e&&(e.isOnLastTick?this.freeTone(e):this.releaseTone(t,e),this.tempMatchedPitchTones[n]=null)}}playTone(e,t,n,i){const a=this.channels[e].instruments[i.instrumentIndex];null!=a.synthesizer&&a.synthesizer(this,t,n,i,a),i.envelopeComputer.clearEnvelopes(),a.envelopeComputer.clearEnvelopes()}playModTone(e,t,n,i,a,s,o,r){const l=e.channels[t].instruments[s.instrumentIndex];if(null!=s.note){const e=this.getTicksIntoBar(),t=e/c.ticksPerPart,o=(e+1)/c.ticksPerPart,r=this.tickSampleCountdown,p=t+(o-t)*(1-r/n),u=t+(o-t)*(1-(r-a)/n),h=c.ticksPerPart*p,f=c.ticksPerPart*u,d=s.note.getEndPinIndex(this.getCurrentPart()),m=s.note.pins[d-1],v=s.note.pins[d],y=(s.note.start+m.time)*c.ticksPerPart,g=(s.note.start+v.time)*c.ticksPerPart,S=(h-y)/(g-y),b=(f-y)/(g-y);s.expression=m.size+(v.size-m.size)*S,s.expressionDelta=m.size+(v.size-m.size)*b-s.expression,Ge.modSynth(this,i,a,s,l)}}static computeChordExpression(e){return 1/(.25*(e-1)+1)}computeTone(e,t,n,i,a,s){const o=Math.ceil(n),r=e.channels[t],l=this.channels[t],p=r.instruments[i.instrumentIndex],u=l.instruments[i.instrumentIndex];u.awake=!0,u.tonesAddedInThisTick=!0,u.computed||u.compute(this,p,n,o,i,t,i.instrumentIndex);const h=p.getTransition(),f=p.getChord(),d=f.singleTone?1:Ge.computeChordExpression(i.chordSize),v=e.getChannelIsNoise(t),y=v?c.noiseInterval:1,S=c.ticksPerPart*n/this.samplesPerSecond,b=1/this.samplesPerSecond,w=1/c.partsPerBeat,x=this.getTicksIntoBar(),z=x/c.ticksPerPart,T=(x+1)/c.ticksPerPart,I=this.getCurrentPart();let E=1;i.specialIntervalExpressionMult=1;let H=s,P=0,G=0,D=1,W=1,C=d,O=d,L=16,A=c.keys[e.key].basePitch+c.pitchesPerOctave*e.octave,B=1,R=48;if(3==p.type)B=c.spectrumBaseExpression,v&&(A=c.spectrumBasePitch,B*=2),L=c.spectrumBasePitch,R=28;else if(4==p.type)A=c.spectrumBasePitch,B=c.drumsetBaseExpression,L=A;else if(2==p.type)A=v?c.chipNoises[p.chipNoise].basePitch:A+c.chipNoises[p.chipNoise].basePitch-12,B=c.noiseBaseExpression,L=A,R=c.chipNoises[p.chipNoise].isSoft?24:60;else if(1==p.type||11==p.type)B=c.fmBaseExpression;else if(0==p.type)B=c.chipBaseExpression,c.chipWaves[p.chipWave].isCustomSampled?c.chipWaves[p.chipWave].isPercussion?A=-12*Math.log2(c.chipWaves[p.chipWave].samples.length/c.chipWaves[p.chipWave].sampleRate)-84.37-(-60+c.chipWaves[p.chipWave].rootKey):A+=-12*Math.log2(c.chipWaves[p.chipWave].samples.length/c.chipWaves[p.chipWave].sampleRate)-96.37-(-60+c.chipWaves[p.chipWave].rootKey):c.chipWaves[p.chipWave].isSampled&&!c.chipWaves[p.chipWave].isPercussion?A=A-63+c.chipWaves[p.chipWave].extraSampleDetune:c.chipWaves[p.chipWave].isSampled&&c.chipWaves[p.chipWave].isPercussion&&(A=-51+c.chipWaves[p.chipWave].extraSampleDetune);else if(9==p.type)B=c.chipBaseExpression;else if(5==p.type)B=c.harmonicsBaseExpression;else if(6==p.type)B=c.pwmBaseExpression;else if(8==p.type)B=c.supersawBaseExpression;else if(7==p.type)B=c.pickedStringBaseExpression;else{if(10!=p.type)throw new Error("Unknown instrument type in computeTone.");B=1,L=0,R=1,A=0}if((i.atNoteStart&&!h.isSeamless&&!i.forceContinueAtStart||i.freshlyAllocated)&&(i.reset(),u.envelopeComputer.reset(),0==p.type&&p.isUsingAdvancedLoopControls)){const e=c.rawRawChipWaves[p.chipWave].samples.length-1,t=p.chipWaveStartOffset/e,n=.999999999999999;for(let e=0;e<c.maxPitchOrOperatorCount;e++)i.phases[e]=p.chipWavePlayBackwards?Math.max(0,Math.min(n,t)):Math.max(0,t),i.directions[e]=p.chipWavePlayBackwards?-1:1,i.chipWaveCompletions[e]=0,i.chipWavePrevWaves[e]=0,i.chipWaveCompletionsLastWave[e]=0}i.freshlyAllocated=!1;for(let e=0;e<c.maxPitchOrOperatorCount;e++)i.phaseDeltas[e]=0,i.phaseDeltaScales[e]=0,i.operatorExpressions[e]=0,i.operatorExpressionDeltas[e]=0;i.expression=0,i.expressionDelta=0;for(let e=0;e<(11==p.type?6:c.operatorCount);e++)i.operatorWaves[e]=Ge.getOperatorWave(p.operators[e].waveform,p.operators[e].pulseWidth);if(a){const e=i.ticksSinceReleased,t=i.ticksSinceReleased+1;P=G=i.lastInterval;const n=Math.abs(p.getFadeOutTicks());D=Ge.noteSizeToVolumeMult((1-e/n)*c.noteSizeMax),W=Ge.noteSizeToVolumeMult((1-t/n)*c.noteSizeMax),s&&(W=0),i.ticksSinceReleased+1>=n&&(H=!0)}else if(null==i.note)D=W=1,i.lastInterval=0,i.ticksSinceReleased=0,i.liveInputSamplesHeld+=o;else{const e=i.note,t=i.nextNote,n=i.noteStartPart,a=i.noteEndPart,s=e.getEndPinIndex(I),o=e.pins[s-1],r=e.pins[s],l=n*c.ticksPerPart,u=a*c.ticksPerPart,f=(e.start+o.time)*c.ticksPerPart,d=(e.start+r.time)*c.ticksPerPart;i.ticksSinceReleased=0;const m=I*c.ticksPerPart+this.tick,v=m+1,y=m-l,g=v-l,S=Math.min(1,(m-f)/(d-f)),b=Math.min(1,(v-f)/(d-f));if(D=1,W=1,P=o.interval+(r.interval-o.interval)*S,G=o.interval+(r.interval-o.interval)*b,i.lastInterval=G,!h.isSeamless&&!i.forceContinueAtEnd||null==t){const e=-p.getFadeOutTicks();if(e>0){const t=u-l;D*=Math.min(1,(t-y)/e),W*=Math.min(1,(t-g)/e),v>=l+t&&(H=!0)}}}i.isOnLastTick=H;let N,U,$=p.noteFilter;if(p.noteFilterType){const e=p.noteFilter;null==p.noteSubFilters[1]&&(p.noteSubFilters[1]=new ke);const n=p.noteSubFilters[1];let a=p.noteFilterSimpleCut,s=p.noteFilterSimplePeak,o=p.noteFilterSimpleCut,r=p.noteFilterSimplePeak,l=!1;this.isModActive(c.modulators.dictionary["note filt cut"].index,t,i.instrumentIndex)&&(a=this.getModValue(c.modulators.dictionary["note filt cut"].index,t,i.instrumentIndex,!1),o=this.getModValue(c.modulators.dictionary["note filt cut"].index,t,i.instrumentIndex,!0),l=!0),this.isModActive(c.modulators.dictionary["note filt peak"].index,t,i.instrumentIndex)&&(s=this.getModValue(c.modulators.dictionary["note filt peak"].index,t,i.instrumentIndex,!1),r=this.getModValue(c.modulators.dictionary["note filt peak"].index,t,i.instrumentIndex,!0),l=!0),e.convertLegacySettingsForSynth(a,s,!l),n.convertLegacySettingsForSynth(o,r,!l),N=e.controlPoints[0],U=n.controlPoints[0],p.noteFilter=e,p.tmpNoteFilterStart=e}const j=i.envelopeComputer,Q=[];for(let e=0;e<c.maxEnvelopeCount;e++)Q[e]=0;for(let e=0;e<p.envelopeCount;e++){let n=p.envelopes[e].perEnvelopeSpeed;this.isModActive(c.modulators.dictionary["individual envelope speed"].index,t,i.instrumentIndex)&&null!=p.envelopes[e].tempEnvelopeSpeed&&(n=p.envelopes[e].tempEnvelopeSpeed);let a=c.arpSpeedScale[p.envelopeSpeed]*n;this.isModActive(c.modulators.dictionary["envelope speed"].index,t,i.instrumentIndex)&&(a=Math.max(0,Math.min(c.arpSpeedScale.length-1,this.getModValue(c.modulators.dictionary["envelope speed"].index,t,i.instrumentIndex,!1))),a=Number.isInteger(a)?c.arpSpeedScale[a]*n:(1-a%1)*c.arpSpeedScale[Math.floor(a)]+a%1*c.arpSpeedScale[Math.ceil(a)]*n),Q[e]=a}j.computeEnvelopes(p,I,u.envelopeTime,c.ticksPerPart*z,n/this.samplesPerSecond,i,Q,u,this,t,i.instrumentIndex);const _=i.envelopeComputer.envelopeStarts,K=i.envelopeComputer.envelopeEnds;if(p.noteFilter=$,!h.continues||null!=i.prevNote&&null!=i.note||u.envelopeComputer.reset(),null!=i.note&&h.slides){const e=i.prevNote,t=i.nextNote;if(null!=e){const t=e.pitches[i.prevNotePitchIndex]+e.pins[e.pins.length-1].interval-i.pitches[0];if(j.prevSlideStart&&(P+=t*j.prevSlideRatioStart),j.prevSlideEnd&&(G+=t*j.prevSlideRatioEnd),!f.singleTone){const t=e.pitches.length-i.chordSize;j.prevSlideStart&&(C=Ge.computeChordExpression(i.chordSize+t*j.prevSlideRatioStart)),j.prevSlideEnd&&(O=Ge.computeChordExpression(i.chordSize+t*j.prevSlideRatioEnd))}}if(null!=t){const e=t.pitches[i.nextNotePitchIndex]-(i.pitches[0]+i.note.pins[i.note.pins.length-1].interval);if(j.nextSlideStart&&(P+=e*j.nextSlideRatioStart),j.nextSlideEnd&&(G+=e*j.nextSlideRatioEnd),!f.singleTone){const e=t.pitches.length-i.chordSize;j.nextSlideStart&&(C=Ge.computeChordExpression(i.chordSize+e*j.nextSlideRatioStart)),j.nextSlideEnd&&(O=Ge.computeChordExpression(i.chordSize+e*j.nextSlideRatioEnd))}}}if(F(p.effects)){let e=c.justIntonationSemitones[p.pitchShift]/y,n=1,a=1;this.isModActive(c.modulators.dictionary["pitch shift"].index,t,i.instrumentIndex)&&(e=c.justIntonationSemitones[c.justIntonationSemitones.length-1],n=this.getModValue(c.modulators.dictionary["pitch shift"].index,t,i.instrumentIndex,!1)/c.pitchShiftCenter,a=this.getModValue(c.modulators.dictionary["pitch shift"].index,t,i.instrumentIndex,!0)/c.pitchShiftCenter);P+=e*_[18]*n,G+=e*K[18]*a}if(k(p.effects)||this.isModActive(c.modulators.dictionary["song detune"].index,t,i.instrumentIndex)){const e=_[19],n=K[19];let a=p.detune,s=p.detune;this.isModActive(c.modulators.dictionary.detune.index,t,i.instrumentIndex)&&(a=this.getModValue(c.modulators.dictionary.detune.index,t,i.instrumentIndex,!1)+c.detuneCenter,s=this.getModValue(c.modulators.dictionary.detune.index,t,i.instrumentIndex,!0)+c.detuneCenter),this.isModActive(c.modulators.dictionary["song detune"].index,t,i.instrumentIndex)&&(a+=4*this.getModValue(c.modulators.dictionary["song detune"].index,t,i.instrumentIndex,!1),s+=4*this.getModValue(c.modulators.dictionary["song detune"].index,t,i.instrumentIndex,!0)),P+=Ge.detuneToCents(a)*e*c.pitchesPerOctave/1200,G+=Ge.detuneToCents(s)*n*c.pitchesPerOctave/1200}if(q(p.effects)){let e,n,a,s;if(p.vibrato==c.vibratos.length?(e=2*p.vibratoDelay,p.vibratoDelay==c.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY),n=p.vibratoDepth,a=n):(e=c.vibratos[p.vibrato].delayTicks,n=c.vibratos[p.vibrato].amplitude,a=n),this.isModActive(c.modulators.dictionary["vibrato delay"].index,t,i.instrumentIndex)&&(e=2*this.getModValue(c.modulators.dictionary["vibrato delay"].index,t,i.instrumentIndex,!1),e==2*c.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY)),this.isModActive(c.modulators.dictionary["vibrato depth"].index,t,i.instrumentIndex)&&(n=this.getModValue(c.modulators.dictionary["vibrato depth"].index,t,i.instrumentIndex,!1)/25,a=this.getModValue(c.modulators.dictionary["vibrato depth"].index,t,i.instrumentIndex,!0)/25),null!=i.prevVibrato)s=i.prevVibrato;else{if(s=n*Ge.getLFOAmplitude(p,S*u.vibratoTime)*_[20],e>0){const t=e-j.noteTicksStart;s*=Math.max(0,Math.min(1,1-t/2))}}let o=Ge.getLFOAmplitude(p,S*u.nextVibratoTime);const r=K[20];if(10!=p.type){let t=a*o*r;if(e>0){const n=e-j.noteTicksEnd;t*=Math.max(0,Math.min(1,1-n/2))}i.prevVibrato=t,P+=s,G+=t}}if(!h.isSeamless&&!i.forceContinueAtStart||null==i.prevNote){const e=p.getFadeInSeconds();e>0&&(D*=Math.min(1,j.noteSecondsStartUnscaled/e),W*=Math.min(1,j.noteSecondsEndUnscaled/e))}4==p.type&&null==i.drumsetPitch&&(i.drumsetPitch=i.pitches[0],null!=i.note&&(i.drumsetPitch+=i.note.pickMainInterval()),i.drumsetPitch=Math.max(0,Math.min(c.drumCount-1,i.drumsetPitch)));let J=j.lowpassCutoffDecayVolumeCompensation;if(M(p.effects)){const e=_[1],t=K[1];if(p.noteFilterType){const n=_[21],a=K[21],s=_[29],r=K[29];N.toCoefficients(Ge.tempFilterStartCoefficients,this.samplesPerSecond,e*n,s),U.toCoefficients(Ge.tempFilterEndCoefficients,this.samplesPerSecond,t*a,r),i.noteFilters.length<1&&(i.noteFilters[0]=new V),i.noteFilters[0].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterEndCoefficients,1/o,0==N.type),J*=N.getVolumeCompensationMult(),i.noteFilterCount=1}else{const n=null!=p.tmpNoteFilterStart?p.tmpNoteFilterStart:p.noteFilter;for(let a=0;a<n.controlPointCount;a++){const s=_[21+a],r=K[21+a],l=_[29+a],u=K[29+a];let c=n.controlPoints[a];const h=null!=p.tmpNoteFilterEnd&&null!=p.tmpNoteFilterEnd.controlPoints[a]?p.tmpNoteFilterEnd.controlPoints[a]:n.controlPoints[a];c.type!=h.type&&(c=h),c.toCoefficients(Ge.tempFilterStartCoefficients,this.samplesPerSecond,e*s,l),h.toCoefficients(Ge.tempFilterEndCoefficients,this.samplesPerSecond,t*r,u),i.noteFilters.length<=a&&(i.noteFilters[a]=new V),i.noteFilters[a].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterEndCoefficients,1/o,0==c.type),J*=c.getVolumeCompensationMult()}i.noteFilterCount=n.controlPointCount}}else i.noteFilterCount=0;if(4==p.type){const e=i.envelopeComputer,t=p.getDrumsetEnvelope(i.drumsetPitch);J*=Ie.getLowpassCutoffDecayVolumeCompensation(t),e.computeDrumsetEnvelopes(p,t,w,z,T);const n=e.drumsetFilterEnvelopeStart,a=e.drumsetFilterEnvelopeEnd,s=this.tempDrumSetControlPoint;s.type=0,s.gain=Fe.getRoundedSettingValueFromLinearGain(.5),s.freq=Fe.getRoundedSettingValueFromHz(8e3),s.toCoefficients(Ge.tempFilterStartCoefficients,this.samplesPerSecond,n*(1+n),1),s.toCoefficients(Ge.tempFilterEndCoefficients,this.samplesPerSecond,a*(1+a),1),i.noteFilters.length==i.noteFilterCount&&(i.noteFilters[i.noteFilterCount]=new V),i.noteFilters[i.noteFilterCount].loadCoefficientsWithGradient(Ge.tempFilterStartCoefficients,Ge.tempFilterEndCoefficients,1/o,!0),i.noteFilterCount++}if(J=Math.min(3,J),1==p.type||11==p.type){let e=1,n=0,a=0;const s=f.arpeggiates,r="monophonic"==f.name;if(i.pitchCount>1&&s){const e=Math.floor(u.arpTime/c.ticksPerArpeggio);a=i.pitches[g(i.pitchCount,p.fastTwoNoteArp,e)]-i.pitches[0]}const l=11==p.type?p.customAlgorithm.carrierCount:c.algorithms[p.algorithm].carrierCount;for(let u=0;u<(11==p.type?6:c.operatorCount);u++){const h=11==p.type?p.customAlgorithm.associatedCarrier[u]-1:c.algorithms[p.algorithm].associatedCarrier[u]-1,f=i.pitches[s?0:r?p.monoChordTone:u<i.pitchCount?u:h<i.pitchCount?h:0],d=c.operatorFrequencies[p.operators[u].frequency].mult,m=c.operatorCarrierInterval[h]+a,v=A+(f+P)*y+m,g=A+(f+G)*y+m,S=Me.frequencyFromPitch(v),w=Me.frequencyFromPitch(g),F=c.operatorFrequencies[p.operators[u].frequency].hzOffset,k=d*S+F,q=d*w+F,M=_[5+u],x=K[5+u];let z,T;1!=M||1!=x?(z=Math.pow(2,Math.log2(k/S)*M)*S,T=Math.pow(2,Math.log2(q/w)*x)*w):(z=k,T=q),i.phaseDeltas[u]=z*b,i.phaseDeltaScales[u]=Math.pow(T/z,1/o);let I=p.operators[u].amplitude,E=p.operators[u].amplitude;u<4?this.isModActive(c.modulators.dictionary["fm slider 1"].index+u,t,i.instrumentIndex)&&(I*=this.getModValue(c.modulators.dictionary["fm slider 1"].index+u,t,i.instrumentIndex,!1)/15,E*=this.getModValue(c.modulators.dictionary["fm slider 1"].index+u,t,i.instrumentIndex,!0)/15):this.isModActive(c.modulators.dictionary["fm slider 5"].index+u-4,t,i.instrumentIndex)&&(I*=this.getModValue(c.modulators.dictionary["fm slider 5"].index+u-4,t,i.instrumentIndex,!1)/15,E*=this.getModValue(c.modulators.dictionary["fm slider 5"].index+u-4,t,i.instrumentIndex,!0)/15);const H=Ge.operatorAmplitudeCurve(I),D=Ge.operatorAmplitudeCurve(E);let W=H*c.operatorFrequencies[p.operators[u].frequency].amplitudeSign,C=D*c.operatorFrequencies[p.operators[u].frequency].amplitudeSign;if(u<l){let e;e=null!=i.prevPitchExpressions[u]?i.prevPitchExpressions[u]:Math.pow(2,-(v-L)/R);const t=Math.pow(2,-(g-L)/R);i.prevPitchExpressions[u]=t,W*=e,C*=t,n+=D}else W*=1.5*c.sineWaveLength,C*=1.5*c.sineWaveLength,e*=1-Math.min(1,p.operators[u].amplitude/15);if(W*=_[11+u],C*=K[11+u],this.isModActive(c.modulators.dictionary["note volume"].index,t,i.instrumentIndex)){const e=this.getModValue(c.modulators.dictionary["note volume"].index,t,i.instrumentIndex,!1),n=this.getModValue(c.modulators.dictionary["note volume"].index,t,i.instrumentIndex,!0);W*=e<=0?(e+c.volumeRange/2)/(c.volumeRange/2):Ge.instrumentVolumeToVolumeMult(e),C*=n<=0?(n+c.volumeRange/2)/(c.volumeRange/2):Ge.instrumentVolumeToVolumeMult(n)}i.operatorExpressions[u]=W,i.operatorExpressionDeltas[u]=(C-W)/o}e*=(Math.pow(2,2-1.4*p.feedbackAmplitude/15)-1)/3,e*=1-Math.min(1,Math.max(0,n-1)/2),e=1+3*e;let h=B*e*J*D*C*_[0],d=B*e*J*W*O*K[0];r&&i.pitchCount<=p.monoChordTone&&(h=0,d=0),i.expression=h,i.expressionDelta=(d-h)/o;let m=p.feedbackAmplitude,v=p.feedbackAmplitude;this.isModActive(c.modulators.dictionary["fm feedback"].index,t,i.instrumentIndex)&&(m*=this.getModValue(c.modulators.dictionary["fm feedback"].index,t,i.instrumentIndex,!1)/15,v*=this.getModValue(c.modulators.dictionary["fm feedback"].index,t,i.instrumentIndex,!0)/15);let S=.3*c.sineWaveLength*m/15;const w=.3*c.sineWaveLength*v/15;let F=S*_[17],k=w*K[17];i.feedbackMult=F,i.feedbackDelta=(k-F)/o}else{const e=Math.pow(2,(G-P)*y/12),n=Math.pow(e,1/o),a="monophonic"==f.name;let s=i.pitches[0];if(i.pitchCount>1&&(f.arpeggiates||f.customInterval||a)){const e=Math.floor(u.arpTime/c.ticksPerArpeggio);if(f.customInterval){const t=i.pitches[1+g(i.pitchCount-1,p.fastTwoNoteArp,e)]-i.pitches[0];E=Math.pow(2,t/12),i.specialIntervalExpressionMult=Math.pow(2,-t/R)}else s=f.arpeggiates?i.pitches[g(i.pitchCount,p.fastTwoNoteArp,e)]:i.pitches[p.monoChordTone]}const r=A+(s+P)*y,l=A+(s+G)*y;let d;d=null!=i.prevPitchExpressions[0]?i.prevPitchExpressions[0]:Math.pow(2,-(r-L)/R);const v=Math.pow(2,-(l-L)/R);i.prevPitchExpressions[0]=v;let S=B*J;if(2==p.type&&(S*=c.chipNoises[p.chipNoise].expression),0==p.type&&(S*=c.chipWaves[p.chipWave].expression),6==p.type){const e=m(p.pulseWidth);let n=e,a=e;this.isModActive(c.modulators.dictionary["pulse width"].index,t,i.instrumentIndex)&&(n=this.getModValue(c.modulators.dictionary["pulse width"].index,t,i.instrumentIndex,!1)/(2*c.pulseWidthRange),a=this.getModValue(c.modulators.dictionary["pulse width"].index,t,i.instrumentIndex,!0)/(2*c.pulseWidthRange));const s=n*_[2],r=a*K[2];i.pulseWidth=s,i.pulseWidthDelta=(r-s)/o;let l=p.decimalOffset;this.isModActive(c.modulators.dictionary["decimal offset"].index,t,i.instrumentIndex)&&(l=this.getModValue(c.modulators.dictionary["decimal offset"].index,t,i.instrumentIndex,!1));const u=l*_[37];i.decimalOffset=u,i.pulseWidth-=i.decimalOffset/1e4}if(7==p.type){let e=p.stringSustain,n=p.stringSustain;this.isModActive(c.modulators.dictionary.sustain.index,t,i.instrumentIndex)&&(e=this.getModValue(c.modulators.dictionary.sustain.index,t,i.instrumentIndex,!1),n=this.getModValue(c.modulators.dictionary.sustain.index,t,i.instrumentIndex,!0)),i.stringSustainStart=e,i.stringSustainEnd=n,S*=Math.pow(2,.7*(1-e/(c.stringSustainRange-1)))}const w=Me.frequencyFromPitch(r);if(0==p.type||9==p.type||5==p.type||7==p.type||3==p.type||6==p.type||2==p.type||4==p.type){const e=p.unisonVoices,t=p.unisonSpread,a=p.unisonOffset;S*=p.unisonExpression*(7==p.type?1:e/2);const s=_[4],r=K[4],l=Math.pow(2,(a+t)*s/12),u=Math.pow(2,(a+t)*r/12);i.phaseDeltas[0]=w*b*l,i.phaseDeltaScales[0]=n*Math.pow(u/l,1/o);const h=1==e?1:e-1;for(let l=1;l<=e;l++){const e=Math.pow(2,(a+t-2*l*t/h)*s/12)*E,p=Math.pow(2,(a+t-2*l*t/h)*r/12)*E;i.phaseDeltas[l]=w*b*e,i.phaseDeltaScales[l]=n*Math.pow(p/e,1/o)}for(let l=e+1;l<c.unisonVoicesMax;l++)if(2==l){const e=Math.pow(2,(a-t)*s/12)*E,p=Math.pow(2,(a-t)*r/12)*E;i.phaseDeltas[l]=w*b*e,i.phaseDeltaScales[l]=n*Math.pow(p/e,1/o)}else i.phaseDeltas[l]=i.phaseDeltas[0],i.phaseDeltaScales[l]=i.phaseDeltaScales[0]}else i.phaseDeltas[0]=w*b,i.phaseDeltaScales[0]=n;let F=1,k=1;if(8==p.type){const n=1/Math.sqrt(c.supersawVoiceCount);let a=p.supersawDynamism/c.supersawDynamismMax,s=p.supersawDynamism/c.supersawDynamismMax;this.isModActive(c.modulators.dictionary.dynamism.index,t,i.instrumentIndex)&&(a=this.getModValue(c.modulators.dictionary.dynamism.index,t,i.instrumentIndex,!1)/c.supersawDynamismMax,s=this.getModValue(c.modulators.dictionary.dynamism.index,t,i.instrumentIndex,!0)/c.supersawDynamismMax);const r=1-Math.pow(Math.max(0,1-a*_[38]),.2),l=1-Math.pow(Math.max(0,1-s*K[38]),.2),u=Math.pow(2,Math.log2(n)*r),h=Math.pow(2,Math.log2(n)*l),f=Math.sqrt((1/Math.pow(u,2)-1)/(c.supersawVoiceCount-1)),d=Math.sqrt((1/Math.pow(h,2)-1)/(c.supersawVoiceCount-1));i.supersawDynamism=f,i.supersawDynamismDelta=(d-f)/o;const v=-1==i.supersawDelayIndex;if(v){let e=0;for(let t=0;t<c.supersawVoiceCount;t++)i.phases[t]=e,e+=-Math.log(Math.random());const t=1+(c.supersawVoiceCount-1)*f;let n=0;for(let t=0;t<c.supersawVoiceCount;t++){const a=0==t?1:f,s=i.phases[t]/e;i.phases[t]=s,n+=(s-.5)*a}let a=1,s=0;for(let e=c.supersawVoiceCount-1;e>=0;e--){const o=1-i.phases[e],r=o-s;if(n<0){const e=-n/t;if(e<r){a=s+e;break}}n+=r*t-(0==e?1:f),s=o}for(let e=0;e<c.supersawVoiceCount;e++)i.phases[e]+=a;for(let e=1;e<c.supersawVoiceCount-1;e++){const t=e+Math.floor(Math.random()*(c.supersawVoiceCount-e)),n=i.phases[e];i.phases[e]=i.phases[t],i.phases[t]=n}}const y=p.supersawSpread/c.supersawSpreadMax;let g=y,S=y;this.isModActive(c.modulators.dictionary.spread.index,t,i.instrumentIndex)&&(g=this.getModValue(c.modulators.dictionary.spread.index,t,i.instrumentIndex,!1)/c.supersawSpreadMax,S=this.getModValue(c.modulators.dictionary.spread.index,t,i.instrumentIndex,!0)/c.supersawSpreadMax);const q=.5*(g*_[39]+S*K[39]),M=Math.pow(1-Math.sqrt(Math.max(0,1-q)),1.75);for(let e=0;e<c.supersawVoiceCount;e++){const t=0==e?0:Math.pow(((e+1>>1)-.5+.025*((2&e)-1))/(c.supersawVoiceCount>>1),1.1)*(2*(1&e)-1);i.supersawUnisonDetunes[e]=Math.pow(2,M*t/12)}const x=p.supersawShape/c.supersawShapeMax;let z=x*_[40],T=x*K[40];this.isModActive(c.modulators.dictionary["saw shape"].index,t,i.instrumentIndex)&&(z=this.getModValue(c.modulators.dictionary["saw shape"].index,t,i.instrumentIndex,!1)/c.supersawShapeMax,T=this.getModValue(c.modulators.dictionary["saw shape"].index,t,i.instrumentIndex,!0)/c.supersawShapeMax);const I=z*_[40],E=T*K[40];i.supersawShape=I,i.supersawShapeDelta=(E-I)/o;let H=p.decimalOffset;this.isModActive(c.modulators.dictionary["decimal offset"].index,t,i.instrumentIndex)&&(H=this.getModValue(c.modulators.dictionary["decimal offset"].index,t,i.instrumentIndex,!1));const P=H*_[37];i.decimalOffset=P;const G=m(p.pulseWidth);let D=G,W=G;this.isModActive(c.modulators.dictionary["pulse width"].index,t,i.instrumentIndex)&&(D=this.getModValue(c.modulators.dictionary["pulse width"].index,t,i.instrumentIndex,!1)/(2*c.pulseWidthRange),W=this.getModValue(c.modulators.dictionary["pulse width"].index,t,i.instrumentIndex,!0)/(2*c.pulseWidthRange));let C=D*_[2],O=W*K[2];C-=P/1e4,O-=P/1e4;const L=null!=i.supersawPrevPhaseDelta?i.supersawPrevPhaseDelta:w*b,A=w*b*e;i.supersawPrevPhaseDelta=A;const B=C/L,R=O/A;i.supersawDelayLength=B,i.supersawDelayLengthDelta=(R-B)/o;const N=Math.ceil(Math.max(B,R))+2;if(null==i.supersawDelayLine||i.supersawDelayLine.length<=N){const e=Math.ceil(.5*this.samplesPerSecond/Me.frequencyFromPitch(24)),t=new Float32Array(Ge.fittingPowerOfTwo(Math.max(e,N)));if(!v&&null!=i.supersawDelayLine){const e=i.supersawDelayLine.length-1>>0,n=i.supersawDelayIndex;for(let a=0;a<i.supersawDelayLine.length;a++)t[a]=i.supersawDelayLine[n+a&e]}i.supersawDelayLine=t,i.supersawDelayIndex=i.supersawDelayLine.length}else v&&(i.supersawDelayLine.fill(0),i.supersawDelayIndex=i.supersawDelayLine.length);const V=c.pwmBaseExpression/c.supersawBaseExpression;F*=(1+(V-1)*I)/Math.sqrt(1+(c.supersawVoiceCount-1)*f*f),k*=(1+(V-1)*E)/Math.sqrt(1+(c.supersawVoiceCount-1)*d*d)}let q=S*D*C*d*_[0]*F,M=S*W*O*v*K[0]*k;if(this.isModActive(c.modulators.dictionary["note volume"].index,t,i.instrumentIndex)){const e=this.getModValue(c.modulators.dictionary["note volume"].index,t,i.instrumentIndex,!1),n=this.getModValue(c.modulators.dictionary["note volume"].index,t,i.instrumentIndex,!0);q*=e<=0?(e+c.volumeRange/2)/(c.volumeRange/2):Ge.instrumentVolumeToVolumeMult(e),M*=n<=0?(n+c.volumeRange/2)/(c.volumeRange/2):Ge.instrumentVolumeToVolumeMult(n)}if(a&&i.pitchCount<=p.monoChordTone&&(q=0,M=0,u.awake=!1),i.expression=q,i.expressionDelta=(M-q)/o,7==p.type){let e;if(null!=i.prevStringDecay)e=i.prevStringDecay;else{const t=i.envelopeComputer.envelopeStarts[3];e=1-Math.min(1,t*i.stringSustainStart/(c.stringSustainRange-1))}const t=i.envelopeComputer.envelopeEnds[3];let n=1-Math.min(1,t*i.stringSustainEnd/(c.stringSustainRange-1));i.prevStringDecay=n;const a=p.unisonVoices;for(let e=i.pickedStrings.length;e<a;e++)i.pickedStrings[e]=new Te;if(i.atNoteStart&&!h.continues&&!i.forceContinueAtStart)for(const e of i.pickedStrings)e.delayIndex=-1;for(let t=0;t<a;t++)i.pickedStrings[t].update(this,u,i,t,o,e,n,p.stringSustainType)}}}static getLFOAmplitude(e,t){let n=0;for(const i of c.vibratoTypes[e.vibratoType].periodsSeconds)n+=Math.sin(2*Math.PI*t/i);return n}static getInstrumentSynthFunction(e){if(1==e.type){const t=e.algorithm+"_"+e.feedbackType;if(null==Ge.fmSynthFunctionCache[t]){const n=[];for(const t of Ge.fmSourceTemplate)if(-1!=t.indexOf("// CARRIER OUTPUTS")){const i=[];for(let t=0;t<c.algorithms[e.algorithm].carrierCount;t++)i.push("operator"+t+"Scaled");n.push(t.replace("/*operator#Scaled*/",i.join(" + ")))}else if(-1!=t.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let t=c.operatorCount-1;t>=0;t--)for(const i of Ge.operatorSourceTemplate)if(-1!=i.indexOf("/* + operator@Scaled*/")){let a="";for(const n of c.algorithms[e.algorithm].modulatedBy[t])a+=" + operator"+(n-1)+"Scaled";const s=c.feedbacks[e.feedbackType].indices[t];if(s.length>0){a+=" + feedbackMult * (";const e=[];for(const t of s)e.push("operator"+(t-1)+"Output");a+=e.join(" + ")+")"}n.push(i.replace(/\#/g,t+"").replace("/* + operator@Scaled*/",a))}else n.push(i.replace(/\#/g,t+""));else if(-1!=t.indexOf("#"))for(let e=0;e<c.operatorCount;e++)n.push(t.replace(/\#/g,e+""));else n.push(t);const i="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+n.join("\n")+"}";Ge.fmSynthFunctionCache[t]=new Function("Config","Synth",i)(c,Ge)}return Ge.fmSynthFunctionCache[t]}if(0==e.type)return e.isUsingAdvancedLoopControls?Ge.loopableChipSynth:Ge.chipSynth;if(9==e.type)return Ge.chipSynth;if(5==e.type)return Ge.harmonicsSynth;if(6==e.type)return Ge.pulseWidthSynth;if(8==e.type)return Ge.supersawSynth;if(7==e.type)return Ge.pickedStringSynth;if(2==e.type)return Ge.noiseSynth;if(3==e.type)return Ge.spectrumSynth;if(4==e.type)return Ge.drumsetSynth;if(10==e.type)return Ge.modSynth;if(11==e.type){const t=e.customAlgorithm.name+"_"+e.customFeedbackType.name;if(null==Ge.fm6SynthFunctionCache[t]){const n=[];for(const t of Ge.fmSourceTemplate)if(-1!=t.indexOf("// CARRIER OUTPUTS")){const i=[];for(let t=0;t<e.customAlgorithm.carrierCount;t++)i.push("operator"+t+"Scaled");n.push(t.replace("/*operator#Scaled*/",i.join(" + ")))}else if(-1!=t.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let t=c.operatorCount+2-1;t>=0;t--)for(const i of Ge.operatorSourceTemplate)if(-1!=i.indexOf("/* + operator@Scaled*/")){let a="";for(const n of e.customAlgorithm.modulatedBy[t])a+=" + operator"+(n-1)+"Scaled";const s=e.customFeedbackType.indices[t];if(s.length>0){a+=" + feedbackMult * (";const e=[];for(const t of s)e.push("operator"+(t-1)+"Output");a+=e.join(" + ")+")"}n.push(i.replace(/\#/g,t+"").replace("/* + operator@Scaled*/",a))}else n.push(i.replace(/\#/g,t+""));else if(-1!=t.indexOf("#"))for(let e=0;e<c.operatorCount+2;e++)n.push(t.replace(/\#/g,e+""));else n.push(t);const i="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+n.join("\n")+"}";Ge.fm6SynthFunctionCache[t]=new Function("Config","Synth",i)(c,Ge)}return Ge.fm6SynthFunctionCache[t]}throw new Error("Unrecognized instrument type: "+e.type)}static wrap(e,t){return(e%t+t)%t}static loopableChipSynth(e,t,n,i,a){const s=Math.max(2,a.unisonVoices);let o=Ge.loopableChipFunctionCache[a.unisonVoices];if(null==o){let e="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {";e+="\n            const aliases = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n            // const aliases = false;\n            const data = synth.tempMonoInstrumentSampleBuffer;\n            const wave = instrumentState.wave;\n            const volumeScale = instrumentState.volumeScale;\n            const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\n            let chipWaveLoopEnd = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\n            let chipWaveLoopStart = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\n            ",e+="\n            let chipWaveLoopLength = chipWaveLoopEnd - chipWaveLoopStart;\n            if (chipWaveLoopLength < 2) {\n                chipWaveLoopStart = 0;\n                chipWaveLoopEnd = waveLength;\n                chipWaveLoopLength = waveLength;\n            }\n            const chipWaveLoopMode = instrumentState.chipWaveLoopMode;\n            const chipWavePlayBackwards = instrumentState.chipWavePlayBackwards;\n            const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n            if(instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n            ";for(let t=1;t<s;t++)e+="\n                if (instrumentState.unisonVoices <= #)\n                    tone.phases[#] = tone.phases[#-1];\n                ".replaceAll("#",t+"");e+="\n            }";for(let t=0;t<s;t++)e+="\n                let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n                let direction# = tone.directions[#];\n                let chipWaveCompletion# = tone.chipWaveCompletions[#];\n\n                ".replaceAll("#",t+"");e+="\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\n                // If playing once or looping, we force the correct direction,\n                // since it shouldn't really change. This is mostly so that if\n                // the mode is changed midway through playback, it won't get\n                // stuck on the wrong direction.\n                if (!chipWavePlayBackwards) {";for(let t=0;t<s;t++)e+="\n                        direction# = 1;\n                        ".replaceAll("#",t+"");e+="} else {";for(let t=0;t<s;t++)e+="\n                        direction# = -1;\n                        ".replaceAll("#",t+"");e+="\n                }\n            }\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {";for(let t=0;t<s;t++)e+="\n                    chipWaveCompletion# = 0;\n                    ".replaceAll("#",t+"");e+="    \n            }\n            \n            const chipWaveCompletionFadeLength = 1000;\n            let expression = +tone.expression;\n            const expressionDelta = +tone.expressionDelta;\n            ";for(let t=0;t<s;t++)e+="\n                let lastWave# = tone.chipWaveCompletionsLastWave[#];\n                const phaseDeltaScale# = +tone.phaseDeltaScales[#];\n                let phase# = Synth.wrap(tone.phases[#], 1) * waveLength;\n                let prevWaveIntegral# = 0;\n\n                ".replaceAll("#",t+"");e+="\n            if (!aliases) {\n            ";for(let t=0;t<s;t++)e+="\n                    const phase#Int = Math.floor(phase#);\n                    const index# = Synth.wrap(phase#Int, waveLength);\n                    const phaseRatio# = phase# - phase#Int;\n                    prevWaveIntegral# = +wave[index#];\n                    prevWaveIntegral# += (wave[Synth.wrap(index# + 1, waveLength)] - prevWaveIntegral#) * phaseRatio#;\n                    ".replaceAll("#",t+"");e+="\n            }\n            const filters = tone.noteFilters;\n            const filterCount = tone.noteFilterCount | 0;\n            let initialFilterInput1 = +tone.initialNoteFilterInput1;\n            let initialFilterInput2 = +tone.initialNoteFilterInput2;\n            const applyFilters = Synth.applyFilters;\n            const stopIndex = bufferIndex + roundedSamplesPerTick;\n            ";for(let t=0;t<s;t++)e+="\n                let prevWave# = tone.chipWavePrevWaves[#];\n\n                ".replaceAll("#",t+"");e+="\n            for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                let wrapped = 0;\n            ";for(let t=0;t<s;t++)e+="\n                    if (chipWaveCompletion# > 0 && chipWaveCompletion# < chipWaveCompletionFadeLength) {\n                        chipWaveCompletion#++;\n                    }\n                    phase# += phaseDelta# * direction#;\n\n                    ".replaceAll("#",t+"");e+="\n                if (chipWaveLoopMode === 2) {\n                ";for(let t=0;t<s;t++)e+="\n                        if (direction# === 1) {\n                            if (phase# > waveLength) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = #;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < 0) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        }\n\n                        ".replaceAll("#",t+"");e+="\n                } else if (chipWaveLoopMode === 3) {\n                ";for(let t=0;t<s;t++)e+="\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                if (chipWaveCompletion# <= 0) {\n                                    lastWave# = prevWave#;\n                                    chipWaveCompletion#++;\n                                }\n                                wrapped = 1;\n                            }\n                        }\n\n                        ".replaceAll("#",t+"");e+="\n                } else if (chipWaveLoopMode === 0) {\n                ";for(let t=0;t<s;t++)e+="\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                phase# = chipWaveLoopStart + Synth.wrap(phase# - chipWaveLoopEnd, chipWaveLoopLength);\n                                // phase# = chipWaveLoopStart;\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                phase# = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phase#, chipWaveLoopLength);\n                                // phase# = chipWaveLoopEnd;\n                                wrapped = 1;\n                            }\n                        }\n\n                        ".replaceAll("#",t+"");e+="    \n                } else if (chipWaveLoopMode === 1) {\n                ";for(let t=0;t<s;t++)e+="\n                        if (direction# === 1) {\n                            if (phase# > chipWaveLoopEnd) {\n                                phase# = chipWaveLoopEnd - Synth.wrap(phase# - chipWaveLoopEnd, chipWaveLoopLength);\n                                // phase# = chipWaveLoopEnd;\n                                direction# = -1;\n                                wrapped = 1;\n                            }\n                        } else if (direction# === -1) {\n                            if (phase# < chipWaveLoopStart) {\n                                phase# = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phase#, chipWaveLoopLength);\n                                // phase# = chipWaveLoopStart;\n                                direction# = 1;\n                                wrapped = 1;\n                            }\n                        }\n\n                        ".replaceAll("#",t+"");e+="    \n                }\n                ";for(let t=0;t<s;t++)e+="\n                    let wave# = 0;\n                    ".replaceAll("#",t+"");e+="    \n                let inputSample = 0;\n                if (aliases) {\n                    inputSample = 0;\n                ";for(let t=0;t<s;t++)e+="\n                        wave# = wave[Synth.wrap(Math.floor(phase#), waveLength)];\n                        prevWave# = wave#;\n                        const completionFade# = chipWaveCompletion# > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletion#, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                        \n                        if (chipWaveCompletion# > 0) {\n                            inputSample += lastWave# * completionFade#;\n                        } else {\n                            inputSample += wave#;\n                        }\n                        ".replaceAll("#",t+"");e+="   \n                } else {\n                ";for(let t=0;t<s;t++)e+="\n                        const phase#Int = Math.floor(phase#);\n                        const index# = Synth.wrap(phase#Int, waveLength);\n                        let nextWaveIntegral# = wave[index#];\n                        const phaseRatio# = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[Synth.wrap(index# + 1, waveLength)] - nextWaveIntegral#) * phaseRatio#;\n                        ".replaceAll("#",t+"");e+="\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\n                    ";for(let t=0;t<s;t++)e+="\n                            let pwi# = 0;\n                            const phase#_ = Math.max(0, phase# - phaseDelta# * direction#);\n                            const phase#Int = Math.floor(phase#_);\n                            const index# = Synth.wrap(phase#Int, waveLength);\n                            pwi# = wave[index#];\n                            pwi# += (wave[Synth.wrap(index# + 1, waveLength)] - pwi#) * (phase#_ - phase#Int) * direction#;\n                            prevWaveIntegral# = pwi#;\n                            ".replaceAll("#",t+"");e+="    \n                    }\n                    if (chipWaveLoopMode === 1 && wrapped !== 0) {\n                    ";for(let t=0;t<s;t++)e+="\n                            wave# = prevWave#;\n                            ".replaceAll("#",t+"");e+="\n                    } else {\n                    ";for(let t=0;t<s;t++)e+="\n                            wave# = (nextWaveIntegral# - prevWaveIntegral#) / (phaseDelta# * direction#);\n                            ".replaceAll("#",t+"");e+="\n                    }\n                    ";for(let t=0;t<s;t++)e+="\n                        prevWave# = wave#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        const completionFade# = chipWaveCompletion# > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletion#, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                        if (chipWaveCompletion# > 0) {\n                            inputSample += lastWave# * completionFade#;\n                        } else {\n                            inputSample += wave#;\n                        }\n                        ".replaceAll("#",t+"");e+="\n                }\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n                initialFilterInput2 = initialFilterInput1;\n                initialFilterInput1 = inputSample * volumeScale;\n                const output = sample * expression;\n                expression += expressionDelta;\n                data[sampleIndex] += output;\n                ";for(let t=0;t<s;t++)e+="\n                    phaseDelta# *= phaseDeltaScale#;\n                    ".replaceAll("#",t+"");e+="\n            }\n            ";for(let t=0;t<s;t++)e+="\n                tone.phases[#] = phase# / waveLength;\n                tone.phaseDeltas[#] = phaseDelta# / waveLength;\n                tone.directions[#] = direction#;\n                tone.chipWaveCompletions[#] = chipWaveCompletion#;\n                tone.chipWavePrevWaves[#] = prevWave#;\n                tone.chipWaveCompletionsLastWave[#] = lastWave#;\n                \n                ".replaceAll("#",t+"");e+="\n            tone.expression = expression;\n            synth.sanitizeFilters(filters);\n            tone.initialNoteFilterInput1 = initialFilterInput1;\n            tone.initialNoteFilterInput2 = initialFilterInput2;\n        }",o=new Function("Config","Synth","effectsIncludeDistortion",e)(c,Ge,x),Ge.loopableChipFunctionCache[a.unisonVoices]=o}o(e,t,n,i,a)}static chipSynth(e,t,n,i,a){const s=Math.max(2,a.unisonVoices);let o=Ge.chipFunctionCache[a.unisonVoices];if(null==o){let e="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {";e+="\n        const aliases = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const volumeScale = instrumentState.volumeScale;\n\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        ";for(let t=0;t<s;t++)e+="let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            ".replaceAll("#",t+"");for(let t=0;t<s;t++)e+="let phase# = (tone.phases[#] % 1) * waveLength;\n            let prevWaveIntegral# = 0.0;\n            ".replaceAll("#",t+"");e+="const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        if (!aliases) {\n        ";for(let t=0;t<s;t++)e+="const phase#Int = phase# | 0;\n                const index# = phase#Int % waveLength;\n                prevWaveIntegral# = +wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                prevWaveIntegral# += (wave[index# + 1] - prevWaveIntegral#) * phase#Ratio;\n                ".replaceAll("#",t+"");e+="\n        } \n\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        let inputSample = 0;\n            if (aliases) {\n                ";for(let t=0;t<s;t++)e+="phase# += phaseDelta#;\n\n                    const inputSample# = wave[(0 | phase#) % waveLength];\n                    ".replaceAll("#",t+"");const t=[];for(let e=0;e<s;e++)t.push("inputSample"+e+(0!=e?" * unisonSign":""));e+="inputSample = "+t.join(" + ")+";",e+="} else {\n                    ";for(let t=0;t<s;t++)e+="phase# += phaseDelta#;\n\n                     \n                        const phase#Int = phase# | 0;\n                        const index# = phase#Int % waveLength;\n                        let nextWaveIntegral# = wave[index#]\n                        const phase#Ratio = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[index# + 1] - nextWaveIntegral#) * phase#Ratio;\n                        const wave# = (nextWaveIntegral# - prevWaveIntegral#) / phaseDelta#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        let inputSample# = wave#;\n                        ".replaceAll("#",t+"");const n=[];for(let e=0;e<s;e++)n.push("inputSample"+e+(0!=e?" * unisonSign":""));e+="inputSample = "+n.join(" + ")+";",e+="}\n        ",e+="const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample * volumeScale;";for(let t=0;t<s;t++)e+="\n                phaseDelta# *= phaseDeltaScale#;\n                ".replaceAll("#",t+"");e+="const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n            ";for(let t=0;t<s;t++)e+="tone.phases[#] = phase# / waveLength;\n            tone.phaseDeltas[#] = phaseDelta# / waveLength;\n            ".replaceAll("#",t+"");e+="tone.expression = expression;",e+="\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }",o=new Function("Config","Synth","effectsIncludeDistortion",e)(c,Ge,x),Ge.chipFunctionCache[a.unisonVoices]=o}o(e,t,n,i,a)}static harmonicsSynth(e,t,n,i,a){const s=Math.max(2,a.unisonVoices);let o=Ge.harmonicsFunctionCache[a.unisonVoices];if(null==o){let e="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {";e+="\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const waveLength = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n         ";for(let t=0;t<s;t++)e+="let phaseDelta# = tone.phaseDeltas[#] * waveLength;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            ".replaceAll("#",t+"");for(let t=0;t<s;t++)e+="let phase# = (tone.phases[#] % 1) * waveLength;\n            ".replaceAll("#",t+"");e+="const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n        ";for(let t=0;t<s;t++)e+="const phase#Int = phase# | 0;\n            const index# = phase#Int % waveLength;\n            prevWaveIntegral# = +wave[index#]\n            const phase#Ratio = phase# - phase#Int;\n            prevWaveIntegral# += (wave[index# + 1] - prevWaveIntegral#) * phase#Ratio;\n            ".replaceAll("#",t+"");e+="const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        ";for(let t=0;t<s;t++)e+="\n                        phase# += phaseDelta#;\n                        const phase#Int = phase# | 0;\n                        const index# = phase#Int % waveLength;\n                        let nextWaveIntegral# = wave[index#]\n                        const phase#Ratio = phase# - phase#Int;\n                        nextWaveIntegral# += (wave[index# + 1] - nextWaveIntegral#) * phase#Ratio;\n                        const wave# = (nextWaveIntegral# - prevWaveIntegral#) / phaseDelta#;\n                        prevWaveIntegral# = nextWaveIntegral#;\n                        let inputSample# = wave#;\n                        ".replaceAll("#",t+"");const t=[];for(let e=0;e<s;e++)t.push("inputSample"+e+(0!=e?" * unisonSign":""));e+="inputSample = "+t.join(" + ")+";",e+="const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;";for(let t=0;t<s;t++)e+="\n                phaseDelta# *= phaseDeltaScale#;\n                ".replaceAll("#",t+"");e+="const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n            ";for(let t=0;t<s;t++)e+="tone.phases[#] = phase# / waveLength;\n            tone.phaseDeltas[#] = phaseDelta# / waveLength;\n            ".replaceAll("#",t+"");e+="tone.expression = expression;",e+="\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }",o=new Function("Config","Synth",e)(c,Ge),Ge.harmonicsFunctionCache[a.unisonVoices]=o}o(e,t,n,i,a)}static pickedStringSynth(e,t,n,i,a){const s=a.unisonVoices;let o=Ge.pickedStringFunctionCache[s];if(null==o){let e="return (synth, bufferIndex, runLength, tone, instrumentState) => {";e+="\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n                if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[1] = tone.phases[0];\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (";const t=[];for(let e=0;e<s;e++)t.push("fractionalDelaySample"+e+(0!=e?" * unisonSign":""));e+=t.join(" + "),e+=") * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}",e=e.replace(/^.*\#.*$/gm,(e=>{const t=[];for(let n=0;n<s;n++)t.push(e.replace(/\#/g,String(n)));return t.join("\n")})),o=new Function("Config","Synth",e)(c,Ge),Ge.pickedStringFunctionCache[s]=o}o(e,t,n,i,a)}static effectsSynth(e,t,n,i,a,s){const o=x(s.effects),r=z(s.effects),l=s.eqFilterCount>0,p=T(s.effects),u=I(s.effects),h=E(s.effects),f=H(s.effects),d=G(s.effects),m=P(s.effects);let v=0;o&&(v|=1),v<<=1,r&&(v|=1),v<<=1,l&&(v|=1),v<<=1,p&&(v|=1),v<<=1,u&&(v|=1),v<<=1,h&&(v|=1),v<<=1,f&&(v|=1),v<<=1,d&&(v|=1),v<<=1,m&&(v|=1);let y=Ge.effectsFunctionCache[v];if(null==y){let e="return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {";const t=u||f||h||d;e+="\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;\n                ",t&&(e+="\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;"),d&&(e+="\n                let granularWet = instrumentState.granularMix;\n                const granularMixDelta = instrumentState.granularMixDelta;\n                let granularDry = 1.0 - granularWet; \n                const granularDelayLine = instrumentState.granularDelayLine;\n                const granularGrains = instrumentState.granularGrains;\n                let granularGrainCount = instrumentState.granularGrainsLength;\n                const granularDelayLineLength = granularDelayLine.length;\n                const granularDelayLineMask = granularDelayLineLength - 1;\n                let granularDelayLineIndex = instrumentState.granularDelayLineIndex;\n                const usesRandomGrainLocation = instrumentState.usesRandomGrainLocation;\n                const computeGrains = instrumentState.computeGrains;\n                instrumentState.granularDelayLineDirty = true;\n                "),o&&(e+="\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;"),r&&(e+="\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;"),m&&(e+="\n\t\t\t\t\n                let ringModMix = +instrumentState.ringModMix;\n                let ringModMixDelta = +instrumentState.ringModMixDelta;\n                let ringModPhase = +instrumentState.ringModPhase;\n                let ringModPhaseDelta = +instrumentState.ringModPhaseDelta;\n                let ringModPhaseDeltaScale = +instrumentState.ringModPhaseDeltaScale;\n                let ringModWaveformIndex = +instrumentState.ringModWaveformIndex;\n                let ringModMixFade = +instrumentState.ringModMixFade;\n                let ringModMixFadeDelta = +instrumentState.ringModMixFadeDelta;\n                \n                let ringModPulseWidth = +instrumentState.ringModPulseWidth;\n\n                let waveform = Config.operatorWaves[ringModWaveformIndex].samples; \n                if (ringModWaveformIndex == Config.operatorWaves.dictionary['pulse width'].index) {\n                    waveform = Synth.getOperatorWave(ringModWaveformIndex, ringModPulseWidth).samples;\n                }\n                const waveformLength = waveform.length - 1;\n                "),l&&(e+="\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;"),e+="\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;",p&&(e+="\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;"),u&&(e+="\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;"),h&&(e+="\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;"),f&&(e+="\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;"),e+="\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n            for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                    ",d?(e+="\n                let sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n                let granularOutput = 0;\n                for (let grainIndex = 0; grainIndex < granularGrainCount; grainIndex++) {\n                    const grain = granularGrains[grainIndex];\n                    if(computeGrains) {\n                        if(grain.delay > 0) {\n                            grain.delay--;\n                        } else {\n                            const grainDelayLinePosition = grain.delayLinePosition;\n                            const grainDelayLinePositionInt = grainDelayLinePosition | 0;\n                            // const grainDelayLinePositionT = grainDelayLinePosition - grainDelayLinePositionInt;\n                            let grainAgeInSamples = grain.ageInSamples;\n                            const grainMaxAgeInSamples = grain.maxAgeInSamples;\n                            // const grainSample0 = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt))    ) & granularDelayLineMask];\n                            // const grainSample1 = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt)) + 1) & granularDelayLineMask];\n                            // let grainSample = grainSample0 + (grainSample1 - grainSample0) * grainDelayLinePositionT; // Linear interpolation (@TODO: sounds quite bad?)\n                            let grainSample = granularDelayLine[((granularDelayLineIndex + (granularDelayLineLength - grainDelayLinePositionInt))    ) & granularDelayLineMask]; // No interpolation\n                            ",0==c.granularEnvelopeType?e+="\n                                const grainEnvelope = grain.parabolicEnvelopeAmplitude;\n                                ":1==c.granularEnvelopeType&&(e+="\n                                const grainEnvelope = grain.rcbEnvelopeAmplitude;\n                                "),e+="\n                            grainSample *= grainEnvelope;\n                            granularOutput += grainSample;\n                            if (grainAgeInSamples > grainMaxAgeInSamples) {\n                                if (granularGrainCount > 0) {\n                                    // Faster equivalent of .pop, ignoring the order in the array.\n                                    const lastGrainIndex = granularGrainCount - 1;\n                                    const lastGrain = granularGrains[lastGrainIndex];\n                                    granularGrains[grainIndex] = lastGrain;\n                                    granularGrains[lastGrainIndex] = grain;\n                                    granularGrainCount--;\n                                    grainIndex--;\n                                    // ^ Dangerous, since this could end up causing an infinite loop,\n                                    // but should be okay in this case.\n                                }\n                            } else {\n                                grainAgeInSamples++;\n                            ",0==c.granularEnvelopeType?e+="\n                                    grain.parabolicEnvelopeAmplitude += grain.parabolicEnvelopeSlope;\n                                    grain.parabolicEnvelopeSlope += grain.parabolicEnvelopeCurve;\n                                    ":1==c.granularEnvelopeType&&(e+="\n                                    grain.updateRCBEnvelope();\n                                    "),e+="\n                                grain.ageInSamples = grainAgeInSamples;\n                                // if(usesRandomGrainLocation) {\n                                //     grain.delayLine -= grainPitchShift;\n                                // }\n                            }\n                        }\n                    }\n                }\n                granularWet += granularMixDelta;\n                granularDry -= granularMixDelta;\n                granularOutput *= Config.granularOutputLoudnessCompensation;\n                granularDelayLine[granularDelayLineIndex] = sample;\n                granularDelayLineIndex = (granularDelayLineIndex + 1) & granularDelayLineMask;\n                sample = sample * granularDry + granularOutput * granularWet;\n                tempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;\n                "):e+="let sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n                tempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;",o&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;"),r&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;"),m&&(e+=" \n                \n                const ringModOutput = sample * waveform[(ringModPhase*waveformLength)|0];\n                const ringModMixF = Math.max(0, ringModMix * ringModMixFade);\n                sample = sample * (1 - ringModMixF) + ringModOutput * ringModMixF;\n\n                ringModMix += ringModMixDelta;\n                ringModPhase += ringModPhaseDelta;\n                ringModPhase = ringModPhase % 1.0;\n                ringModPhaseDelta *= ringModPhaseDeltaScale;\n                ringModMixFade += ringModMixFadeDelta;\n                "),l&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;"),e+="\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;",e+=p?"\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;":"\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;",u&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;"),h&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    "),f&&(e+="\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;"),e+="\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;",t&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;"),e+="\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);",t&&(e+="\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;"),d&&(e+="\n                    instrumentState.granularMix = granularWet;\n                    instrumentState.granularGrainsLength = granularGrainCount;\n                    instrumentState.granularDelayLineIndex = granularDelayLineIndex;\n                "),o&&(e+="\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;"),r&&(e+="\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;"),m&&(e+=" \n                instrumentState.ringModMix = ringModMix;\n                instrumentState.ringModMixDelta = ringModMixDelta;\n                instrumentState.ringModPhase = ringModPhase;\n                instrumentState.ringModPhaseDelta = ringModPhaseDelta;\n                instrumentState.ringModPhaseDeltaScale = ringModPhaseDeltaScale;\n                instrumentState.ringModWaveformIndex = ringModWaveformIndex;\n                instrumentState.ringModPulseWidth = ringModPulseWidth;\n                instrumentState.ringModMixFade = ringModMixFade;\n                 "),l&&(e+="\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;"),p&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;"),u&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;"),h&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;"),f&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;"),e+="}",y=new Function("Config","Synth",e)(c,Ge),Ge.effectsFunctionCache[v]=y}y(e,t,n,i,a,s)}static pulseWidthSynth(e,t,n,i,a){const s=Math.max(2,a.unisonVoices);let o=Ge.pulseFunctionCache[a.unisonVoices];if(null==o){let e="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) => {";e+="\n        const data = synth.tempMonoInstrumentSampleBuffer;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        ";for(let t=0;t<s;t++)e+="let phaseDelta# = tone.phaseDeltas[#];\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            ".replaceAll("#",t+"");for(let t=0;t<s;t++)e+="phase# = (tone.phases[#] % 1);\n            ".replaceAll("#",t+"");e+="let pulseWidth = tone.pulseWidth;\n        const pulseWidthDelta = tone.pulseWidthDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        ";for(let t=0;t<s;t++)e+="const sawPhaseA# = phase# % 1;\n                const sawPhaseB# = (phase# + pulseWidth) % 1;\n                let pulseWave# = sawPhaseB# - sawPhaseA#;\n                if (!instrumentState.aliases) {\n                    if (sawPhaseA# < phaseDelta#) {\n                        var t = sawPhaseA# / phaseDelta#;\n                        pulseWave# += (t + t - t * t - 1) * 0.5;\n                    } else if (sawPhaseA# > 1.0 - phaseDelta#) {\n                        var t = (sawPhaseA# - 1.0) / phaseDelta#;\n                        pulseWave# += (t + t + t * t + 1) * 0.5;\n                    }\n                    if (sawPhaseB# < phaseDelta#) {\n                        var t = sawPhaseB# / phaseDelta#;\n                        pulseWave# -= (t + t - t * t - 1) * 0.5;\n                    } else if (sawPhaseB# > 1.0 - phaseDelta#) {\n                        var t = (sawPhaseB# - 1.0) / phaseDelta#;\n                        pulseWave# -= (t + t + t * t + 1) * 0.5;\n                    }\n                }\n\n                ".replaceAll("#",t+"");const t=[];for(let e=0;e<s;e++)t.push("pulseWave"+e+(0!=e?" * unisonSign":""));e+="let inputSample = "+t.join(" + ")+";",e+="const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;";for(let t=0;t<s;t++)e+="phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                ".replaceAll("#",t+"");e+="pulseWidth += pulseWidthDelta;\n\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }";for(let t=0;t<s;t++)e+="tone.phases[#] = phase#;\n            tone.phaseDeltas[#] = phaseDelta#;\n                ".replaceAll("#",t+"");e+="tone.expression = expression;\n        tone.pulseWidth = pulseWidth;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }",o=new Function("Config","Synth",e)(c,Ge),Ge.pulseFunctionCache[a.unisonVoices]=o}o(e,t,n,i,a)}static supersawSynth(e,t,n,i,a){const s=e.tempMonoInstrumentSampleBuffer,o=0|c.supersawVoiceCount;let r=i.phaseDeltas[0];const l=+i.phaseDeltaScales[0];let p=+i.expression;const u=+i.expressionDelta;let h=i.phases,f=+i.supersawDynamism;const d=+i.supersawDynamismDelta,m=i.supersawUnisonDetunes;let v=+i.supersawShape;const y=+i.supersawShapeDelta;let g=+i.supersawDelayLength;const S=+i.supersawDelayLengthDelta,b=i.supersawDelayLine,w=b.length-1>>0;let F=0|i.supersawDelayIndex;F=(F&w)+b.length;const k=i.noteFilters,q=0|i.noteFilterCount;let M=+i.initialNoteFilterInput1,x=+i.initialNoteFilterInput2;const z=Ge.applyFilters,T=t+n;for(let e=t;e<T;e++){let t=(h[0]+r)%1,n=t-.5*(1+(o-1)*f);if(!a.aliases)if(t<r)n-=.5*((I=t/r)+I-I*I-1);else if(t>1-r){var I;n-=.5*((I=(t-1)/r)+I+I*I+1)}h[0]=t;for(let e=1;e<o;e++){const t=r*m[e];let i=(h[e]+t)%1;if(n+=i*f,!a.aliases)if(i<t){const e=i/t;n-=.5*(e+e-e*e-1)*f}else if(i>1-t){const e=(i-1)/t;n-=.5*(e+e+e*e+1)*f}h[e]=i}b[F&w]=n;const i=F-g,c=0|i,T=c+1,E=i-c,H=b[c&w];F++;const P=n-(H+(b[T&w]-H)*E)*v,G=z(P,M,x,q,k);x=M,M=P,r*=l,f+=d,v+=y,g+=S;const D=G*p;p+=u,s[e]+=D}i.phaseDeltas[0]=r,i.expression=p,i.supersawDynamism=f,i.supersawShape=v,i.supersawDelayLength=g,i.supersawDelayIndex=F,e.sanitizeFilters(k),i.initialNoteFilterInput1=M,i.initialNoteFilterInput2=x}static noiseSynth(e,t,n,i,a){const s=Math.max(2,a.unisonVoices);let o=Ge.noiseFunctionCache[a.unisonVoices];if(null==o){let e="return (synth, bufferIndex, runLength, tone, instrumentState) => {";e+="\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        ";for(let t=0;t<s;t++)e+='\n            let phaseDelta# = tone.phaseDeltas[#];\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n            let noiseSample# = +tone.noiseSamples[#];\n            // This is for a "legacy" style simplified 1st order lowpass filter with\n            // a cutoff frequency that is relative to the tone\'s fundamental frequency.\n            const pitchRelativefilter# = Math.min(1.0, phaseDelta# * instrumentState.noisePitchFilterMult);\n            \n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[#-1];\n            '.replaceAll("#",t+"");e+="\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const phaseMask = Config.spectrumNoiseLength - 1;\n\n        ";for(let t=0;t<s;t++)e+="let phase# = (tone.phases[#] % 1) * Config.chipNoiseLength;\n                ".replaceAll("#",t+"");e+="let test = true;";for(let t=0;t<s;t++){e+="\n            if (tone.phases[#] == 0.0) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase# = Math.random() * Config.chipNoiseLength;\n                if (@ <= # && test && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {".replaceAll("#",t+"").replaceAll("@",s+"").replaceAll("~",i.phases.length+"");for(let n=t+1;n<i.phases.length;n++)e+="phase~ = phase#;".replaceAll("#",t+"").replaceAll("~",n+"");e+="\n                    test = false;\n                }\n            }"}e+="\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            ";for(let t=0;t<s;t++)e+="\n                let waveSample# = wave[phase# & phaseMask];\n\n                noiseSample# += (waveSample# - noiseSample#) * pitchRelativefilter#;\n                ".replaceAll("#",t+"");const t=[];for(let e=0;e<s;e++)t.push("noiseSample"+e+(0!=e?" * unisonSign":""));e+="let inputSample = "+t.join(" + ")+";",e+="const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;";for(let t=0;t<s;t++)e+="phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                ".replaceAll("#",t+"");e+="const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }";for(let t=0;t<s;t++)e+="tone.phases[#] = phase# / ".replaceAll("#",t+"")+c.chipNoiseLength+";\n            tone.phaseDeltas[#] = phaseDelta#;\n            ".replaceAll("#",t+"");e+="tone.expression = expression;";for(let t=0;t<s;t++)e+="tone.noiseSamples[#] = noiseSample#;\n             ".replaceAll("#",t+"");e+="\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }",o=new Function("Config","Synth",e)(c,Ge),Ge.noiseFunctionCache[a.unisonVoices]=o}o(e,t,n,i,a)}static spectrumSynth(e,t,n,i,a){const s=Math.max(2,a.unisonVoices);let o=Ge.spectrumFunctionCache[a.unisonVoices];if(null==o){let e="return (synth, bufferIndex, runLength, tone, instrumentState) => {";e+="\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        const wave = instrumentState.wave;\n        const samplesInPeriod = (1 << 7);\n\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        ";for(let t=0;t<s;t++)e+='\n                if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[#-1];\n                let phaseDelta# = tone.phaseDeltas[#] * samplesInPeriod;\n                let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n                let noiseSample# = +tone.noiseSamples[#];\n                // This is for a "legacy" style simplified 1st order lowpass filter with\n                // a cutoff frequency that is relative to the tone\'s fundamental frequency.\n                const pitchRelativefilter# = Math.min(1.0, phaseDelta#);\n                '.replaceAll("#",t+"");e+="\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;\n\n        const phaseMask = Config.spectrumNoiseLength - 1;\n        ";for(let t=0;t<s;t++)e+="let phase# = (tone.phases[#] % 1) * Config.spectrumNoiseLength;\n                ".replaceAll("#",t+"");e+="\n            if (tone.phases[0] == 0.0) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase0 = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta0;\n            ";for(let t=1;t<s;t++)e+="\n                if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n                    phase# = phase0;\n                }\n            ".replaceAll("#",t+"");e+="}";for(let t=1;t<s;t++)e+="\n                if (tone.phases[#] == 0.0 && !(instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)) {\n                    // Zero phase means the tone was reset, just give noise a random start phase instead.\n                phase# = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta#;\n                }\n            ".replaceAll("#",t+"");e+="\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {";for(let t=0;t<s;t++)e+="\n                const phase#Int = phase# | 0;\n                const index# = phase#Int & phaseMask;\n                let waveSample# = wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                waveSample# += (wave[index# + 1] - waveSample#) * phase#Ratio;\n\n                noiseSample# += (waveSample# - noiseSample#) * pitchRelativefilter#;\n                ".replaceAll("#",t+"");const t=[];for(let e=0;e<s;e++)t.push("noiseSample"+e+(0!=e?" * unisonSign":""));e+="let inputSample = "+t.join(" + ")+";",e+="const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;";for(let t=0;t<s;t++)e+="phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                ".replaceAll("#",t+"");e+="const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }";for(let t=0;t<s;t++)e+="tone.phases[#] = phase# / ".replaceAll("#",t+"")+c.spectrumNoiseLength+";\n            tone.phaseDeltas[#] = phaseDelta# / samplesInPeriod;\n            ".replaceAll("#",t+"");e+="tone.expression = expression;";for(let t=0;t<s;t++)e+="tone.noiseSamples[#] = noiseSample#;\n             ".replaceAll("#",t+"");e+="\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }",o=new Function("Config","Synth",e)(c,Ge),Ge.spectrumFunctionCache[a.unisonVoices]=o}o(e,t,n,i,a)}static drumsetSynth(e,t,n,i,a){const s=Math.max(2,a.unisonVoices);let o=Ge.drumFunctionCache[a.unisonVoices];if(null==o){let e="return (synth, bufferIndex, runLength, tone, instrumentState) => {";e+="\n        const data = synth.tempMonoInstrumentSampleBuffer;\n        let wave = instrumentState.getDrumsetWave(tone.drumsetPitch);\n        const referenceDelta = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch);\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        ";for(let t=0;t<s;t++)e+="let phaseDelta# = tone.phaseDeltas[#] / referenceDelta;\n            let phaseDeltaScale# = +tone.phaseDeltaScales[#];\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) tone.phases[#] = tone.phases[# - 1];\n            ".replaceAll("#",t+"");e+="let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n\n        const filters = tone.noteFilters;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInput1;\n        let initialFilterInput2 = +tone.initialNoteFilterInput2;\n        const applyFilters = Synth.applyFilters;";for(let t=0;t<s;t++)e+="let phase# = (tone.phases[#] % 1) * Config.spectrumNoiseLength;\n            ".replaceAll("#",t+"");e+="\n        if (tone.phases[0] == 0.0) {\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase0 = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta0;\n        ";for(let t=1;t<s;t++)e+="\n            if (instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval) {\n                phase# = phase0;\n            }\n        ".replaceAll("#",t+"");e+="}";for(let t=1;t<s;t++)e+="\n            if (tone.phases[#] == 0.0 && !(instrumentState.unisonVoices <= # && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)) {\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase# = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta#;\n            }\n        ".replaceAll("#",t+"");e+="const phaseMask = Config.spectrumNoiseLength - 1;\n\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n        ";for(let t=0;t<s;t++)e+="\n                const phase#Int = phase# | 0;\n                const index# = phase#Int & phaseMask;\n                let noiseSample# = wave[index#]\n                const phase#Ratio = phase# - phase#Int;\n                noiseSample# += (wave[index# + 1] - noiseSample#) * phase#Ratio;\n                ".replaceAll("#",t+"");const t=[];for(let e=0;e<s;e++)t.push("noiseSample"+e+(0!=e?" * unisonSign":""));e+="let inputSample = "+t.join(" + ")+";",e+="const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;";for(let t=0;t<s;t++)e+="phase# += phaseDelta#;\n                phaseDelta# *= phaseDeltaScale#;\n                ".replaceAll("#",t+"");e+="const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }";for(let t=0;t<s;t++)e+="tone.phases[#] = phase# / ".replaceAll("#",t+"")+c.spectrumNoiseLength+";\n            tone.phaseDeltas[#] = phaseDelta# * referenceDelta;\n            ".replaceAll("#",t+"");e+="tone.expression = expression;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }",o=new Function("Config","Synth","InstrumentState",e)(c,Ge,He),Ge.drumFunctionCache[a.unisonVoices]=o}o(e,t,n,i,a)}static modSynth(e,t,n,i,a){if(!e.song)return;let s=c.modCount-1-i.pitches[0];if(a.invalidModulators[s])return;let o=a.modulators[s],r=[];if(c.modulators[a.modulators[s]].forSong)r.push(0);else if(a.modInstruments[s]==e.song.channels[a.modChannels[s]].instruments.length)for(let t=0;t<e.song.channels[a.modChannels[s]].instruments.length;t++)r.push(t);else a.modInstruments[s]>e.song.channels[a.modChannels[s]].instruments.length?null!=e.song.getPattern(a.modChannels[s],e.bar)&&(r=e.song.getPattern(a.modChannels[s],e.bar).instruments):r.push(a.modInstruments[s]);for(let t=0;t<r.length;t++){e.setModValue(i.expression,i.expression+i.expressionDelta,a.modChannels[s],r[t],o);for(let n=0;n<e.heldMods.length;n++)c.modulators[a.modulators[s]].forSong?e.heldMods[n].setting==o&&e.setModValue(e.heldMods[n].volume,e.heldMods[n].volume,a.modChannels[s],r[t],o):e.heldMods[n].channelIndex==a.modChannels[s]&&e.heldMods[n].instrumentIndex==r[t]&&e.heldMods[n].setting==o&&e.setModValue(e.heldMods[n].volume,e.heldMods[n].volume,a.modChannels[s],r[t],o);if(o==c.modulators.dictionary["reset arp"].index&&0==e.tick&&i.noteStartPart==e.beat*c.partsPerBeat+e.part)e.channels[a.modChannels[s]].instruments[r[t]].arpTime=0;else if(o==c.modulators.dictionary["reset envelope"].index&&0==e.tick&&i.noteStartPart==e.beat*c.partsPerBeat+e.part){let n=a.modEnvelopeNumbers[s];const i=e.channels[a.modChannels[s]].instruments[r[t]];e.song.channels[a.modChannels[s]].instruments[r[t]].envelopeCount>n&&(i.envelopeTime[n]=0)}else if(o==c.modulators.dictionary["next bar"].index)e.wantToSkip=!0;else if(o==c.modulators.dictionary["song eq"].index){const t=e.song;let o=0|a.modFilterTypes[s];if(0==o){let a=0;const s=e.getTicksIntoBar()/c.ticksPerPart;for(;i.note.start+i.note.pins[a].time<=s;)a++;let o=(s-i.note.start+n/(e.getSamplesPerTick()*c.ticksPerPart)*c.ticksPerPart-i.note.pins[a-1].time)/(i.note.pins[a].time-i.note.pins[a-1].time);null!=t.eqSubFilters[i.note.pins[a-1].size]||null!=t.eqSubFilters[i.note.pins[a].size]?t.tmpEqFilterEnd=ke.lerpFilters(t.eqSubFilters[i.note.pins[a-1].size],t.eqSubFilters[i.note.pins[a].size],o):t.tmpEqFilterEnd=t.eqFilter}else{for(let e=0;e<c.filterMorphCount;e++)t.tmpEqFilterEnd==t.eqSubFilters[e]&&null!=t.tmpEqFilterEnd&&(t.tmpEqFilterEnd=new ke,t.tmpEqFilterEnd.fromJsonObject(t.eqSubFilters[e].toJsonObject()));null==t.tmpEqFilterEnd&&(t.tmpEqFilterEnd=new ke,t.tmpEqFilterEnd.fromJsonObject(t.eqFilter.toJsonObject())),t.tmpEqFilterEnd.controlPointCount>Math.floor((o-1)/2)&&(o%2?t.tmpEqFilterEnd.controlPoints[Math.floor((o-1)/2)].freq=i.expression+i.expressionDelta:t.tmpEqFilterEnd.controlPoints[Math.floor((o-1)/2)].gain=i.expression+i.expressionDelta)}}else if(o==c.modulators.dictionary["eq filter"].index){const o=e.song.channels[a.modChannels[s]].instruments[r[t]];if(!o.eqFilterType){let t=0|a.modFilterTypes[s];if(0==t){let t=0;const a=e.getTicksIntoBar()/c.ticksPerPart;for(;i.note.start+i.note.pins[t].time<=a;)t++;let s=(a-i.note.start+n/(e.getSamplesPerTick()*c.ticksPerPart)*c.ticksPerPart-i.note.pins[t-1].time)/(i.note.pins[t].time-i.note.pins[t-1].time);null!=o.eqSubFilters[i.note.pins[t-1].size]||null!=o.eqSubFilters[i.note.pins[t].size]?o.tmpEqFilterEnd=ke.lerpFilters(o.eqSubFilters[i.note.pins[t-1].size],o.eqSubFilters[i.note.pins[t].size],s):o.tmpEqFilterEnd=o.eqFilter}else{for(let e=0;e<c.filterMorphCount;e++)o.tmpEqFilterEnd==o.eqSubFilters[e]&&null!=o.tmpEqFilterEnd&&(o.tmpEqFilterEnd=new ke,o.tmpEqFilterEnd.fromJsonObject(o.eqSubFilters[e].toJsonObject()));null==o.tmpEqFilterEnd&&(o.tmpEqFilterEnd=new ke,o.tmpEqFilterEnd.fromJsonObject(o.eqFilter.toJsonObject())),o.tmpEqFilterEnd.controlPointCount>Math.floor((t-1)/2)&&(t%2?o.tmpEqFilterEnd.controlPoints[Math.floor((t-1)/2)].freq=i.expression+i.expressionDelta:o.tmpEqFilterEnd.controlPoints[Math.floor((t-1)/2)].gain=i.expression+i.expressionDelta)}}}else if(o==c.modulators.dictionary["note filter"].index){const o=e.song.channels[a.modChannels[s]].instruments[r[t]];if(!o.noteFilterType){let t=0|a.modFilterTypes[s];if(0==t){let t=0;const a=e.getTicksIntoBar()/c.ticksPerPart;for(;i.note.start+i.note.pins[t].time<=a;)t++;let s=(a-i.note.start+n/(e.getSamplesPerTick()*c.ticksPerPart)*c.ticksPerPart-i.note.pins[t-1].time)/(i.note.pins[t].time-i.note.pins[t-1].time);null!=o.noteSubFilters[i.note.pins[t-1].size]||null!=o.noteSubFilters[i.note.pins[t].size]?o.tmpNoteFilterEnd=ke.lerpFilters(o.noteSubFilters[i.note.pins[t-1].size],o.noteSubFilters[i.note.pins[t].size],s):o.tmpNoteFilterEnd=o.noteFilter}else{for(let e=0;e<c.filterMorphCount;e++)o.tmpNoteFilterEnd==o.noteSubFilters[e]&&null!=o.tmpNoteFilterEnd&&(o.tmpNoteFilterEnd=new ke,o.tmpNoteFilterEnd.fromJsonObject(o.noteSubFilters[e].toJsonObject()));null==o.tmpNoteFilterEnd&&(o.tmpNoteFilterEnd=new ke,o.tmpNoteFilterEnd.fromJsonObject(o.noteFilter.toJsonObject())),o.tmpNoteFilterEnd.controlPointCount>Math.floor((t-1)/2)&&(t%2?o.tmpNoteFilterEnd.controlPoints[Math.floor((t-1)/2)].freq=i.expression+i.expressionDelta:o.tmpNoteFilterEnd.controlPoints[Math.floor((t-1)/2)].gain=i.expression+i.expressionDelta)}}}else if(o==c.modulators.dictionary["individual envelope speed"].index){const n=e.song.channels[a.modChannels[s]].instruments[r[t]];let o=a.modEnvelopeNumbers[s],l=i.expression+i.expressionDelta;n.envelopeCount>o&&(Number.isInteger(l)?n.envelopes[o].tempEnvelopeSpeed=c.perEnvelopeSpeedIndices[l]:(l=(1-l%1)*c.perEnvelopeSpeedIndices[Math.floor(l)]+l%1*c.perEnvelopeSpeedIndices[Math.ceil(l)],n.envelopes[o].tempEnvelopeSpeed=l))}else if(o==c.modulators.dictionary["individual envelope lower bound"].index){const n=e.song.channels[a.modChannels[s]].instruments[r[t]];let o=a.modEnvelopeNumbers[s],l=i.expression+i.expressionDelta;n.envelopeCount>o&&(n.envelopes[o].tempEnvelopeLowerBound=l/10)}else if(o==c.modulators.dictionary["individual envelope upper bound"].index){const n=e.song.channels[a.modChannels[s]].instruments[r[t]];let o=a.modEnvelopeNumbers[s],l=i.expression+i.expressionDelta;n.envelopeCount>o&&(n.envelopes[o].tempEnvelopeUpperBound=l/10)}}}static findRandomZeroCrossing(e,t){let n=Math.random()*t;const i=t-1;let a=n&i,s=e[a];for(let o=128;o>0;o--){const o=a+16&i,r=e[o];if(s*r<=0){for(let o=0;o<16;o++){const o=a+1&i,r=e[o];if(s*r<=0){const e=r-s;n=a,Math.abs(e)>1e-8&&(n+=-s/e),n=Math.max(0,n)%t;break}a=o,s=r}break}a=o,s=r}return n}static instrumentVolumeToVolumeMult(e){return e==-c.volumeRange/2?0:Math.pow(2,c.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-c.volumeRange/2:Math.min(c.volumeRange,Math.log(e)/Math.LN2/c.volumeLogScale)}static noteSizeToVolumeMult(e){return Math.pow(Math.max(0,e)/c.noteSizeMax,1.5)}static volumeMultToNoteSize(e){return Math.pow(Math.max(0,e),1/1.5)*c.noteSizeMax}static fadeInSettingToSeconds(e){return.0125*(.95*e+.05*e*e)}static secondsToFadeInSetting(e){return X(0,c.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*e/.0125))/.1))}static fadeOutSettingToTicks(e){return c.fadeOutTicks[e]}static ticksToFadeOutSetting(e){let t=c.fadeOutTicks[0];if(e<=t)return 0;for(let n=1;n<c.fadeOutTicks.length;n++){let i=c.fadeOutTicks[n];if(e<=i)return e<(t+i)/2?n-1:n;t=i}return c.fadeOutTicks.length-1}static detuneToCents(e){return e-c.detuneCenter}static centsToDetune(e){return e+c.detuneCenter}static getOperatorWave(e,t){return 2!=e?c.operatorWaves[e]:c.pwmOperatorWaves[t]}getSamplesPerTick(){if(null==this.song)return 0;let e=this.song.getBeatsPerMinute();return this.isModActive(c.modulators.dictionary.tempo.index)&&(e=this.getModValue(c.modulators.dictionary.tempo.index)),this.getSamplesPerTickSpecificBPM(e)}getSamplesPerTickSpecificBPM(e){const t=e/60,n=c.partsPerBeat*t,i=c.ticksPerPart*n;return this.samplesPerSecond/i}static fittingPowerOfTwo(e){return 1<<32-Math.clz32(Math.ceil(e)-1)}sanitizeFilters(e){let t=!1;for(const n of e){const e=Math.abs(n.output1),i=Math.abs(n.output2);if(!(e<100&&i<100)){t=!0;break}e<Z&&(n.output1=0),i<Z&&(n.output2=0)}if(t)for(const t of e)t.output1=0,t.output2=0}static sanitizeDelayLine(e,t,n){for(;;){const i=--t&n,a=Math.abs(e[i]);if(Number.isFinite(a)&&(0==a||a>=Z))break;e[i]=0}}static applyFilters(e,t,n,i,a){for(let s=0;s<i;s++){const i=a[s],o=i.output1,r=i.output2,l=i.a1,p=i.a2,u=i.b0,c=i.b1,h=i.b2;e=u*e+c*t+h*n-l*o-p*r,i.a1=l+i.a1Delta,i.a2=p+i.a2Delta,i.useMultiplicativeInputCoefficients?(i.b0=u*i.b0Delta,i.b1=c*i.b1Delta,i.b2=h*i.b2Delta):(i.b0=u+i.b0Delta,i.b1=c+i.b1Delta,i.b2=h+i.b2Delta),i.output2=o,i.output1=e,n=r,t=o}return e}computeTicksSinceStart(e=!1){var t,n;const i=(null===(t=this.song)||void 0===t?void 0:t.beatsPerBar)?null===(n=this.song)||void 0===n?void 0:n.beatsPerBar:8;return e?c.ticksPerPart*c.partsPerBeat*i*this.bar:this.tick+c.ticksPerPart*(this.part+c.partsPerBeat*(this.beat+i*this.bar))}}return Ge.tempFilterStartCoefficients=new R,Ge.tempFilterEndCoefficients=new R,Ge.fmSynthFunctionCache={},Ge.fm6SynthFunctionCache={},Ge.effectsFunctionCache=Array(128).fill(void 0),Ge.pickedStringFunctionCache=Array(3).fill(void 0),Ge.spectrumFunctionCache=[],Ge.noiseFunctionCache=[],Ge.drumFunctionCache=[],Ge.chipFunctionCache=[],Ge.pulseFunctionCache=[],Ge.harmonicsFunctionCache=[],Ge.loopableChipFunctionCache=Array(c.unisonVoicesMax+1).fill(void 0),Ge.fmSourceTemplate=("\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * "+c.sineWaveLength+";\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * "+c.sineWaveLength+";\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / "+c.sineWaveLength+";\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / "+c.sineWaveLength+";\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t").split("\n"),Ge.operatorSourceTemplate=("\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & "+c.sineWaveMask+";\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t").split("\n"),e.Channel=xe,e.Config=c,e.CustomAlgorithm=me,e.CustomFeedBack=ve,e.EnvelopeSettings=qe,e.FilterControlPoint=Fe,e.FilterSettings=ke,e.HarmonicsWave=Se,e.Instrument=Me,e.Note=he,e.Operator=de,e.Pattern=fe,e.Song=ze,e.SpectrumWave=ye,e.Synth=Ge,e.clamp=X,e.makeNotePin=ce,e.parseFloatWithDefault=te,e.parseIntWithDefault=ne,Object.defineProperty(e,"te",{value:!0}),e}({});
//# sourceMappingURL=beepbox_synth.min.js.map